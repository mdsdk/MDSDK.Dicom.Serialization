// Copyright (c) Robin Boerdijk - All rights reserved - See LICENSE file for license terms

using MDSDK.Dicom.Serialization.ValueRepresentations;
using MDSDK.Dicom.Serialization.ValueRepresentations.Mixed;
using System.Collections.Generic;
using System.Diagnostics;

namespace MDSDK.Dicom.Serialization
{
    using A = DicomAttribute;
    using V = DicomVR;

    /// <summary>DICOM attribute</summary>
    public class DicomAttribute
    {
        private static readonly string[] AttributeNames = Properties.Resources.AttributeNames.Split();

        /// <summary>The name of the attribute</summary>
        public string Name { get; }

        /// <summary>The tag of the attribute</summary>
        public DicomTag Tag { get; }

        internal ValueRepresentation VR { get; }

        /// <summary>The value represenation(s) of the attribute</summary>
        public string VRs => VR.Name;

        /// <summary>The keyword of the attribute</summary>
        public string Keyword { get; private set; }

        internal DicomAttribute(string name, DicomTag tag, params ValueRepresentation[] vrs)
        {
            Name = name;

            Tag = tag;

            if (vrs.Length == 0)
            {
                Debug.Assert(!Tag.HasVR);
            }
            else
            {
                Debug.Assert(Tag.HasVR);
                if (vrs.Length == 1)
                {
                    VR = vrs[0];
                }
                else if (vrs.Length == 2)
                {
                    var vr0 = vrs[0];
                    var vr1 = vrs[1];
                    if ((vr0 == DicomVR.US) && (vr1 == DicomVR.SS))
                    {
                        VR = DicomVR.Mixed.US_or_SS;
                    }
                    else if ((vr0 == DicomVR.OB) && (vr1 == DicomVR.OW))
                    {
                        VR = DicomVR.Mixed.OB_or_OW;
                    }
                    else if ((vr0 == DicomVR.US) && (vr1 == DicomVR.OW))
                    {
                        VR = DicomVR.Mixed.US_or_OW;
                    }
                    else
                    {
                        Debug.Assert(false);
                    }
                }
                else
                {
                    Debug.Assert(false);
                }
            }
        }

        private DicomAttribute(int num, ushort groupNumber, ushort elementNumber, params ValueRepresentation[] vrs)
            : this(AttributeNames[num], new DicomTag(groupNumber, elementNumber), vrs)
        {
        }

        internal ValueRepresentation ImplicitVR => (VR is IMixedValueRepresentation mixedVR) ? mixedVR.DefaultVR : VR;

        private static readonly Dictionary<DicomTag, DicomAttribute> s_lookupByTag;

        static DicomAttribute()
        {
            s_lookupByTag = new Dictionary<DicomTag, DicomAttribute>();

            foreach (var field in typeof(DicomAttribute).GetFields())
            {
                if (field.FieldType == typeof(DicomAttribute))
                {
                    var attribute = (DicomAttribute)field.GetValue(null);
                    Debug.Assert(attribute.Tag.HasVR == (attribute.ImplicitVR != null));
                    attribute.Keyword = field.Name;
                    s_lookupByTag.Add(attribute.Tag, attribute);
                }
            }
        }

        internal static bool TryLookup(DicomTag tag, out DicomAttribute attribute)
        {
            return s_lookupByTag.TryGetValue(tag, out attribute);
        }

        /// <inheritdoc/>
        public override string ToString() => $"{Tag} {Keyword}";

#pragma warning disable CS1591

        #region Attributes

        public static readonly A CommandGroupLength = new A(0, 0x0000, 0x0000, V.UL);
        public static readonly A AffectedSOPClassUID = new A(1, 0x0000, 0x0002, V.UI);
        public static readonly A RequestedSOPClassUID = new A(2, 0x0000, 0x0003, V.UI);
        public static readonly A CommandField = new A(3, 0x0000, 0x0100, V.US);
        public static readonly A MessageID = new A(4, 0x0000, 0x0110, V.US);
        public static readonly A MessageIDBeingRespondedTo = new A(5, 0x0000, 0x0120, V.US);
        public static readonly A MoveDestination = new A(6, 0x0000, 0x0600, V.AE);
        public static readonly A Priority = new A(7, 0x0000, 0x0700, V.US);
        public static readonly A CommandDataSetType = new A(8, 0x0000, 0x0800, V.US);
        public static readonly A Status = new A(9, 0x0000, 0x0900, V.US);
        public static readonly A OffendingElement = new A(10, 0x0000, 0x0901, V.AT);
        public static readonly A ErrorComment = new A(11, 0x0000, 0x0902, V.LO);
        public static readonly A ErrorID = new A(12, 0x0000, 0x0903, V.US);
        public static readonly A AffectedSOPInstanceUID = new A(13, 0x0000, 0x1000, V.UI);
        public static readonly A RequestedSOPInstanceUID = new A(14, 0x0000, 0x1001, V.UI);
        public static readonly A EventTypeID = new A(15, 0x0000, 0x1002, V.US);
        public static readonly A AttributeIdentifierList = new A(16, 0x0000, 0x1005, V.AT);
        public static readonly A ActionTypeID = new A(17, 0x0000, 0x1008, V.US);
        public static readonly A NumberOfRemainingSuboperations = new A(18, 0x0000, 0x1020, V.US);
        public static readonly A NumberOfCompletedSuboperations = new A(19, 0x0000, 0x1021, V.US);
        public static readonly A NumberOfFailedSuboperations = new A(20, 0x0000, 0x1022, V.US);
        public static readonly A NumberOfWarningSuboperations = new A(21, 0x0000, 0x1023, V.US);
        public static readonly A MoveOriginatorApplicationEntityTitle = new A(22, 0x0000, 0x1030, V.AE);
        public static readonly A MoveOriginatorMessageID = new A(23, 0x0000, 0x1031, V.US);
        public static readonly A FileMetaInformationGroupLength = new A(24, 0x0002, 0x0000, V.UL);
        public static readonly A FileMetaInformationVersion = new A(25, 0x0002, 0x0001, V.OB);
        public static readonly A MediaStorageSOPClassUID = new A(26, 0x0002, 0x0002, V.UI);
        public static readonly A MediaStorageSOPInstanceUID = new A(27, 0x0002, 0x0003, V.UI);
        public static readonly A TransferSyntaxUID = new A(28, 0x0002, 0x0010, V.UI);
        public static readonly A ImplementationClassUID = new A(29, 0x0002, 0x0012, V.UI);
        public static readonly A ImplementationVersionName = new A(30, 0x0002, 0x0013, V.SH);
        public static readonly A SourceApplicationEntityTitle = new A(31, 0x0002, 0x0016, V.AE);
        public static readonly A SendingApplicationEntityTitle = new A(32, 0x0002, 0x0017, V.AE);
        public static readonly A ReceivingApplicationEntityTitle = new A(33, 0x0002, 0x0018, V.AE);
        public static readonly A RTVMetaInformationVersion = new A(34, 0x0002, 0x0031, V.OB);
        public static readonly A RTVCommunicationSOPClassUID = new A(35, 0x0002, 0x0032, V.UI);
        public static readonly A RTVCommunicationSOPInstanceUID = new A(36, 0x0002, 0x0033, V.UI);
        public static readonly A RTVSourceIdentifier = new A(37, 0x0002, 0x0035, V.OB);
        public static readonly A RTVFlowIdentifier = new A(38, 0x0002, 0x0036, V.OB);
        public static readonly A RTVFlowRTPSamplingRate = new A(39, 0x0002, 0x0037, V.UL);
        public static readonly A RTVFlowActualFrameDuration = new A(40, 0x0002, 0x0038, V.FD);
        public static readonly A PrivateInformationCreatorUID = new A(41, 0x0002, 0x0100, V.UI);
        public static readonly A PrivateInformation = new A(42, 0x0002, 0x0102, V.OB);
        public static readonly A FileSetID = new A(43, 0x0004, 0x1130, V.CS);
        public static readonly A FileSetDescriptorFileID = new A(44, 0x0004, 0x1141, V.CS);
        public static readonly A SpecificCharacterSetOfFileSetDescriptorFile = new A(45, 0x0004, 0x1142, V.CS);
        public static readonly A OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity = new A(46, 0x0004, 0x1200, V.UL);
        public static readonly A OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity = new A(47, 0x0004, 0x1202, V.UL);
        public static readonly A FileSetConsistencyFlag = new A(48, 0x0004, 0x1212, V.US);
        public static readonly A DirectoryRecordSequence = new A(49, 0x0004, 0x1220, V.SQ);
        public static readonly A OffsetOfTheNextDirectoryRecord = new A(50, 0x0004, 0x1400, V.UL);
        public static readonly A RecordInUseFlag = new A(51, 0x0004, 0x1410, V.US);
        public static readonly A OffsetOfReferencedLowerLevelDirectoryEntity = new A(52, 0x0004, 0x1420, V.UL);
        public static readonly A DirectoryRecordType = new A(53, 0x0004, 0x1430, V.CS);
        public static readonly A PrivateRecordUID = new A(54, 0x0004, 0x1432, V.UI);
        public static readonly A ReferencedFileID = new A(55, 0x0004, 0x1500, V.CS);
        public static readonly A ReferencedSOPClassUIDInFile = new A(56, 0x0004, 0x1510, V.UI);
        public static readonly A ReferencedSOPInstanceUIDInFile = new A(57, 0x0004, 0x1511, V.UI);
        public static readonly A ReferencedTransferSyntaxUIDInFile = new A(58, 0x0004, 0x1512, V.UI);
        public static readonly A ReferencedRelatedGeneralSOPClassUIDInFile = new A(59, 0x0004, 0x151A, V.UI);
        public static readonly A CurrentFrameFunctionalGroupsSequence = new A(60, 0x0006, 0x0001, V.SQ);
        public static readonly A SpecificCharacterSet = new A(61, 0x0008, 0x0005, V.CS);
        public static readonly A LanguageCodeSequence = new A(62, 0x0008, 0x0006, V.SQ);
        public static readonly A ImageType = new A(63, 0x0008, 0x0008, V.CS);
        public static readonly A InstanceCreationDate = new A(64, 0x0008, 0x0012, V.DA);
        public static readonly A InstanceCreationTime = new A(65, 0x0008, 0x0013, V.TM);
        public static readonly A InstanceCreatorUID = new A(66, 0x0008, 0x0014, V.UI);
        public static readonly A InstanceCoercionDateTime = new A(67, 0x0008, 0x0015, V.DT);
        public static readonly A SOPClassUID = new A(68, 0x0008, 0x0016, V.UI);
        public static readonly A SOPInstanceUID = new A(69, 0x0008, 0x0018, V.UI);
        public static readonly A RelatedGeneralSOPClassUID = new A(70, 0x0008, 0x001A, V.UI);
        public static readonly A OriginalSpecializedSOPClassUID = new A(71, 0x0008, 0x001B, V.UI);
        public static readonly A StudyDate = new A(72, 0x0008, 0x0020, V.DA);
        public static readonly A SeriesDate = new A(73, 0x0008, 0x0021, V.DA);
        public static readonly A AcquisitionDate = new A(74, 0x0008, 0x0022, V.DA);
        public static readonly A ContentDate = new A(75, 0x0008, 0x0023, V.DA);
        public static readonly A AcquisitionDateTime = new A(76, 0x0008, 0x002A, V.DT);
        public static readonly A StudyTime = new A(77, 0x0008, 0x0030, V.TM);
        public static readonly A SeriesTime = new A(78, 0x0008, 0x0031, V.TM);
        public static readonly A AcquisitionTime = new A(79, 0x0008, 0x0032, V.TM);
        public static readonly A ContentTime = new A(80, 0x0008, 0x0033, V.TM);
        public static readonly A AccessionNumber = new A(81, 0x0008, 0x0050, V.SH);
        public static readonly A IssuerOfAccessionNumberSequence = new A(82, 0x0008, 0x0051, V.SQ);
        public static readonly A QueryRetrieveLevel = new A(83, 0x0008, 0x0052, V.CS);
        public static readonly A QueryRetrieveView = new A(84, 0x0008, 0x0053, V.CS);
        public static readonly A RetrieveAETitle = new A(85, 0x0008, 0x0054, V.AE);
        public static readonly A StationAETitle = new A(86, 0x0008, 0x0055, V.AE);
        public static readonly A InstanceAvailability = new A(87, 0x0008, 0x0056, V.CS);
        public static readonly A FailedSOPInstanceUIDList = new A(88, 0x0008, 0x0058, V.UI);
        public static readonly A Modality = new A(89, 0x0008, 0x0060, V.CS);
        public static readonly A ModalitiesInStudy = new A(90, 0x0008, 0x0061, V.CS);
        public static readonly A SOPClassesInStudy = new A(91, 0x0008, 0x0062, V.UI);
        public static readonly A AnatomicRegionsInStudyCodeSequence = new A(92, 0x0008, 0x0063, V.SQ);
        public static readonly A ConversionType = new A(93, 0x0008, 0x0064, V.CS);
        public static readonly A PresentationIntentType = new A(94, 0x0008, 0x0068, V.CS);
        public static readonly A Manufacturer = new A(95, 0x0008, 0x0070, V.LO);
        public static readonly A InstitutionName = new A(96, 0x0008, 0x0080, V.LO);
        public static readonly A InstitutionAddress = new A(97, 0x0008, 0x0081, V.ST);
        public static readonly A InstitutionCodeSequence = new A(98, 0x0008, 0x0082, V.SQ);
        public static readonly A ReferringPhysicianName = new A(99, 0x0008, 0x0090, V.PN);
        public static readonly A ReferringPhysicianAddress = new A(100, 0x0008, 0x0092, V.ST);
        public static readonly A ReferringPhysicianTelephoneNumbers = new A(101, 0x0008, 0x0094, V.SH);
        public static readonly A ReferringPhysicianIdentificationSequence = new A(102, 0x0008, 0x0096, V.SQ);
        public static readonly A ConsultingPhysicianName = new A(103, 0x0008, 0x009C, V.PN);
        public static readonly A ConsultingPhysicianIdentificationSequence = new A(104, 0x0008, 0x009D, V.SQ);
        public static readonly A CodeValue = new A(105, 0x0008, 0x0100, V.SH);
        public static readonly A ExtendedCodeValue = new A(106, 0x0008, 0x0101, V.LO);
        public static readonly A CodingSchemeDesignator = new A(107, 0x0008, 0x0102, V.SH);
        public static readonly A CodingSchemeVersion = new A(108, 0x0008, 0x0103, V.SH);
        public static readonly A CodeMeaning = new A(109, 0x0008, 0x0104, V.LO);
        public static readonly A MappingResource = new A(110, 0x0008, 0x0105, V.CS);
        public static readonly A ContextGroupVersion = new A(111, 0x0008, 0x0106, V.DT);
        public static readonly A ContextGroupLocalVersion = new A(112, 0x0008, 0x0107, V.DT);
        public static readonly A ExtendedCodeMeaning = new A(113, 0x0008, 0x0108, V.LT);
        public static readonly A CodingSchemeResourcesSequence = new A(114, 0x0008, 0x0109, V.SQ);
        public static readonly A CodingSchemeURLType = new A(115, 0x0008, 0x010A, V.CS);
        public static readonly A ContextGroupExtensionFlag = new A(116, 0x0008, 0x010B, V.CS);
        public static readonly A CodingSchemeUID = new A(117, 0x0008, 0x010C, V.UI);
        public static readonly A ContextGroupExtensionCreatorUID = new A(118, 0x0008, 0x010D, V.UI);
        public static readonly A CodingSchemeURL = new A(119, 0x0008, 0x010E, V.UR);
        public static readonly A ContextIdentifier = new A(120, 0x0008, 0x010F, V.CS);
        public static readonly A CodingSchemeIdentificationSequence = new A(121, 0x0008, 0x0110, V.SQ);
        public static readonly A CodingSchemeRegistry = new A(122, 0x0008, 0x0112, V.LO);
        public static readonly A CodingSchemeExternalID = new A(123, 0x0008, 0x0114, V.ST);
        public static readonly A CodingSchemeName = new A(124, 0x0008, 0x0115, V.ST);
        public static readonly A CodingSchemeResponsibleOrganization = new A(125, 0x0008, 0x0116, V.ST);
        public static readonly A ContextUID = new A(126, 0x0008, 0x0117, V.UI);
        public static readonly A MappingResourceUID = new A(127, 0x0008, 0x0118, V.UI);
        public static readonly A LongCodeValue = new A(128, 0x0008, 0x0119, V.UC);
        public static readonly A URNCodeValue = new A(129, 0x0008, 0x0120, V.UR);
        public static readonly A EquivalentCodeSequence = new A(130, 0x0008, 0x0121, V.SQ);
        public static readonly A MappingResourceName = new A(131, 0x0008, 0x0122, V.LO);
        public static readonly A ContextGroupIdentificationSequence = new A(132, 0x0008, 0x0123, V.SQ);
        public static readonly A MappingResourceIdentificationSequence = new A(133, 0x0008, 0x0124, V.SQ);
        public static readonly A TimezoneOffsetFromUTC = new A(134, 0x0008, 0x0201, V.SH);
        public static readonly A ResponsibleGroupCodeSequence = new A(135, 0x0008, 0x0220, V.SQ);
        public static readonly A EquipmentModality = new A(136, 0x0008, 0x0221, V.CS);
        public static readonly A ManufacturerRelatedModelGroup = new A(137, 0x0008, 0x0222, V.LO);
        public static readonly A PrivateDataElementCharacteristicsSequence = new A(138, 0x0008, 0x0300, V.SQ);
        public static readonly A PrivateGroupReference = new A(139, 0x0008, 0x0301, V.US);
        public static readonly A PrivateCreatorReference = new A(140, 0x0008, 0x0302, V.LO);
        public static readonly A BlockIdentifyingInformationStatus = new A(141, 0x0008, 0x0303, V.CS);
        public static readonly A NonidentifyingPrivateElements = new A(142, 0x0008, 0x0304, V.US);
        public static readonly A DeidentificationActionSequence = new A(143, 0x0008, 0x0305, V.SQ);
        public static readonly A IdentifyingPrivateElements = new A(144, 0x0008, 0x0306, V.US);
        public static readonly A DeidentificationAction = new A(145, 0x0008, 0x0307, V.CS);
        public static readonly A PrivateDataElement = new A(146, 0x0008, 0x0308, V.US);
        public static readonly A PrivateDataElementValueMultiplicity = new A(147, 0x0008, 0x0309, V.UL);
        public static readonly A PrivateDataElementValueRepresentation = new A(148, 0x0008, 0x030A, V.CS);
        public static readonly A PrivateDataElementNumberOfItems = new A(149, 0x0008, 0x030B, V.UL);
        public static readonly A PrivateDataElementName = new A(150, 0x0008, 0x030C, V.UC);
        public static readonly A PrivateDataElementKeyword = new A(151, 0x0008, 0x030D, V.UC);
        public static readonly A PrivateDataElementDescription = new A(152, 0x0008, 0x030E, V.UT);
        public static readonly A PrivateDataElementEncoding = new A(153, 0x0008, 0x030F, V.UT);
        public static readonly A PrivateDataElementDefinitionSequence = new A(154, 0x0008, 0x0310, V.SQ);
        public static readonly A StationName = new A(155, 0x0008, 0x1010, V.SH);
        public static readonly A StudyDescription = new A(156, 0x0008, 0x1030, V.LO);
        public static readonly A ProcedureCodeSequence = new A(157, 0x0008, 0x1032, V.SQ);
        public static readonly A SeriesDescription = new A(158, 0x0008, 0x103E, V.LO);
        public static readonly A SeriesDescriptionCodeSequence = new A(159, 0x0008, 0x103F, V.SQ);
        public static readonly A InstitutionalDepartmentName = new A(160, 0x0008, 0x1040, V.LO);
        public static readonly A InstitutionalDepartmentTypeCodeSequence = new A(161, 0x0008, 0x1041, V.SQ);
        public static readonly A PhysiciansOfRecord = new A(162, 0x0008, 0x1048, V.PN);
        public static readonly A PhysiciansOfRecordIdentificationSequence = new A(163, 0x0008, 0x1049, V.SQ);
        public static readonly A PerformingPhysicianName = new A(164, 0x0008, 0x1050, V.PN);
        public static readonly A PerformingPhysicianIdentificationSequence = new A(165, 0x0008, 0x1052, V.SQ);
        public static readonly A NameOfPhysiciansReadingStudy = new A(166, 0x0008, 0x1060, V.PN);
        public static readonly A PhysiciansReadingStudyIdentificationSequence = new A(167, 0x0008, 0x1062, V.SQ);
        public static readonly A OperatorsName = new A(168, 0x0008, 0x1070, V.PN);
        public static readonly A OperatorIdentificationSequence = new A(169, 0x0008, 0x1072, V.SQ);
        public static readonly A AdmittingDiagnosesDescription = new A(170, 0x0008, 0x1080, V.LO);
        public static readonly A AdmittingDiagnosesCodeSequence = new A(171, 0x0008, 0x1084, V.SQ);
        public static readonly A ManufacturerModelName = new A(172, 0x0008, 0x1090, V.LO);
        public static readonly A ReferencedStudySequence = new A(173, 0x0008, 0x1110, V.SQ);
        public static readonly A ReferencedPerformedProcedureStepSequence = new A(174, 0x0008, 0x1111, V.SQ);
        public static readonly A ReferencedSeriesSequence = new A(175, 0x0008, 0x1115, V.SQ);
        public static readonly A ReferencedPatientSequence = new A(176, 0x0008, 0x1120, V.SQ);
        public static readonly A ReferencedVisitSequence = new A(177, 0x0008, 0x1125, V.SQ);
        public static readonly A ReferencedStereometricInstanceSequence = new A(178, 0x0008, 0x1134, V.SQ);
        public static readonly A ReferencedWaveformSequence = new A(179, 0x0008, 0x113A, V.SQ);
        public static readonly A ReferencedImageSequence = new A(180, 0x0008, 0x1140, V.SQ);
        public static readonly A ReferencedInstanceSequence = new A(181, 0x0008, 0x114A, V.SQ);
        public static readonly A ReferencedRealWorldValueMappingInstanceSequence = new A(182, 0x0008, 0x114B, V.SQ);
        public static readonly A ReferencedSOPClassUID = new A(183, 0x0008, 0x1150, V.UI);
        public static readonly A ReferencedSOPInstanceUID = new A(184, 0x0008, 0x1155, V.UI);
        public static readonly A DefinitionSourceSequence = new A(185, 0x0008, 0x1156, V.SQ);
        public static readonly A SOPClassesSupported = new A(186, 0x0008, 0x115A, V.UI);
        public static readonly A ReferencedFrameNumber = new A(187, 0x0008, 0x1160, V.IS);
        public static readonly A SimpleFrameList = new A(188, 0x0008, 0x1161, V.UL);
        public static readonly A CalculatedFrameList = new A(189, 0x0008, 0x1162, V.UL);
        public static readonly A TimeRange = new A(190, 0x0008, 0x1163, V.FD);
        public static readonly A FrameExtractionSequence = new A(191, 0x0008, 0x1164, V.SQ);
        public static readonly A MultiFrameSourceSOPInstanceUID = new A(192, 0x0008, 0x1167, V.UI);
        public static readonly A RetrieveURL = new A(193, 0x0008, 0x1190, V.UR);
        public static readonly A TransactionUID = new A(194, 0x0008, 0x1195, V.UI);
        public static readonly A WarningReason = new A(195, 0x0008, 0x1196, V.US);
        public static readonly A FailureReason = new A(196, 0x0008, 0x1197, V.US);
        public static readonly A FailedSOPSequence = new A(197, 0x0008, 0x1198, V.SQ);
        public static readonly A ReferencedSOPSequence = new A(198, 0x0008, 0x1199, V.SQ);
        public static readonly A OtherFailuresSequence = new A(199, 0x0008, 0x119A, V.SQ);
        public static readonly A StudiesContainingOtherReferencedInstancesSequence = new A(200, 0x0008, 0x1200, V.SQ);
        public static readonly A RelatedSeriesSequence = new A(201, 0x0008, 0x1250, V.SQ);
        public static readonly A DerivationDescription = new A(202, 0x0008, 0x2111, V.ST);
        public static readonly A SourceImageSequence = new A(203, 0x0008, 0x2112, V.SQ);
        public static readonly A StageName = new A(204, 0x0008, 0x2120, V.SH);
        public static readonly A StageNumber = new A(205, 0x0008, 0x2122, V.IS);
        public static readonly A NumberOfStages = new A(206, 0x0008, 0x2124, V.IS);
        public static readonly A ViewName = new A(207, 0x0008, 0x2127, V.SH);
        public static readonly A ViewNumber = new A(208, 0x0008, 0x2128, V.IS);
        public static readonly A NumberOfEventTimers = new A(209, 0x0008, 0x2129, V.IS);
        public static readonly A NumberOfViewsInStage = new A(210, 0x0008, 0x212A, V.IS);
        public static readonly A EventElapsedTimes = new A(211, 0x0008, 0x2130, V.DS);
        public static readonly A EventTimerNames = new A(212, 0x0008, 0x2132, V.LO);
        public static readonly A EventTimerSequence = new A(213, 0x0008, 0x2133, V.SQ);
        public static readonly A EventTimeOffset = new A(214, 0x0008, 0x2134, V.FD);
        public static readonly A EventCodeSequence = new A(215, 0x0008, 0x2135, V.SQ);
        public static readonly A StartTrim = new A(216, 0x0008, 0x2142, V.IS);
        public static readonly A StopTrim = new A(217, 0x0008, 0x2143, V.IS);
        public static readonly A RecommendedDisplayFrameRate = new A(218, 0x0008, 0x2144, V.IS);
        public static readonly A AnatomicRegionSequence = new A(219, 0x0008, 0x2218, V.SQ);
        public static readonly A AnatomicRegionModifierSequence = new A(220, 0x0008, 0x2220, V.SQ);
        public static readonly A PrimaryAnatomicStructureSequence = new A(221, 0x0008, 0x2228, V.SQ);
        public static readonly A PrimaryAnatomicStructureModifierSequence = new A(222, 0x0008, 0x2230, V.SQ);
        public static readonly A AlternateRepresentationSequence = new A(223, 0x0008, 0x3001, V.SQ);
        public static readonly A IrradiationEventUID = new A(224, 0x0008, 0x3010, V.UI);
        public static readonly A SourceIrradiationEventSequence = new A(225, 0x0008, 0x3011, V.SQ);
        public static readonly A RadiopharmaceuticalAdministrationEventUID = new A(226, 0x0008, 0x3012, V.UI);
        public static readonly A FrameType = new A(227, 0x0008, 0x9007, V.CS);
        public static readonly A ReferencedImageEvidenceSequence = new A(228, 0x0008, 0x9092, V.SQ);
        public static readonly A ReferencedRawDataSequence = new A(229, 0x0008, 0x9121, V.SQ);
        public static readonly A CreatorVersionUID = new A(230, 0x0008, 0x9123, V.UI);
        public static readonly A DerivationImageSequence = new A(231, 0x0008, 0x9124, V.SQ);
        public static readonly A SourceImageEvidenceSequence = new A(232, 0x0008, 0x9154, V.SQ);
        public static readonly A PixelPresentation = new A(233, 0x0008, 0x9205, V.CS);
        public static readonly A VolumetricProperties = new A(234, 0x0008, 0x9206, V.CS);
        public static readonly A VolumeBasedCalculationTechnique = new A(235, 0x0008, 0x9207, V.CS);
        public static readonly A ComplexImageComponent = new A(236, 0x0008, 0x9208, V.CS);
        public static readonly A AcquisitionContrast = new A(237, 0x0008, 0x9209, V.CS);
        public static readonly A DerivationCodeSequence = new A(238, 0x0008, 0x9215, V.SQ);
        public static readonly A ReferencedPresentationStateSequence = new A(239, 0x0008, 0x9237, V.SQ);
        public static readonly A ReferencedOtherPlaneSequence = new A(240, 0x0008, 0x9410, V.SQ);
        public static readonly A FrameDisplaySequence = new A(241, 0x0008, 0x9458, V.SQ);
        public static readonly A RecommendedDisplayFrameRateInFloat = new A(242, 0x0008, 0x9459, V.FL);
        public static readonly A SkipFrameRangeFlag = new A(243, 0x0008, 0x9460, V.CS);
        public static readonly A PatientName = new A(244, 0x0010, 0x0010, V.PN);
        public static readonly A PatientID = new A(245, 0x0010, 0x0020, V.LO);
        public static readonly A IssuerOfPatientID = new A(246, 0x0010, 0x0021, V.LO);
        public static readonly A TypeOfPatientID = new A(247, 0x0010, 0x0022, V.CS);
        public static readonly A IssuerOfPatientIDQualifiersSequence = new A(248, 0x0010, 0x0024, V.SQ);
        public static readonly A SourcePatientGroupIdentificationSequence = new A(249, 0x0010, 0x0026, V.SQ);
        public static readonly A GroupOfPatientsIdentificationSequence = new A(250, 0x0010, 0x0027, V.SQ);
        public static readonly A SubjectRelativePositionInImage = new A(251, 0x0010, 0x0028, V.US);
        public static readonly A PatientBirthDate = new A(252, 0x0010, 0x0030, V.DA);
        public static readonly A PatientBirthTime = new A(253, 0x0010, 0x0032, V.TM);
        public static readonly A PatientBirthDateInAlternativeCalendar = new A(254, 0x0010, 0x0033, V.LO);
        public static readonly A PatientDeathDateInAlternativeCalendar = new A(255, 0x0010, 0x0034, V.LO);
        public static readonly A PatientAlternativeCalendar = new A(256, 0x0010, 0x0035, V.CS);
        public static readonly A PatientSex = new A(257, 0x0010, 0x0040, V.CS);
        public static readonly A PatientInsurancePlanCodeSequence = new A(258, 0x0010, 0x0050, V.SQ);
        public static readonly A PatientPrimaryLanguageCodeSequence = new A(259, 0x0010, 0x0101, V.SQ);
        public static readonly A PatientPrimaryLanguageModifierCodeSequence = new A(260, 0x0010, 0x0102, V.SQ);
        public static readonly A QualityControlSubject = new A(261, 0x0010, 0x0200, V.CS);
        public static readonly A QualityControlSubjectTypeCodeSequence = new A(262, 0x0010, 0x0201, V.SQ);
        public static readonly A StrainDescription = new A(263, 0x0010, 0x0212, V.UC);
        public static readonly A StrainNomenclature = new A(264, 0x0010, 0x0213, V.LO);
        public static readonly A StrainStockNumber = new A(265, 0x0010, 0x0214, V.LO);
        public static readonly A StrainSourceRegistryCodeSequence = new A(266, 0x0010, 0x0215, V.SQ);
        public static readonly A StrainStockSequence = new A(267, 0x0010, 0x0216, V.SQ);
        public static readonly A StrainSource = new A(268, 0x0010, 0x0217, V.LO);
        public static readonly A StrainAdditionalInformation = new A(269, 0x0010, 0x0218, V.UT);
        public static readonly A StrainCodeSequence = new A(270, 0x0010, 0x0219, V.SQ);
        public static readonly A GeneticModificationsSequence = new A(271, 0x0010, 0x0221, V.SQ);
        public static readonly A GeneticModificationsDescription = new A(272, 0x0010, 0x0222, V.UC);
        public static readonly A GeneticModificationsNomenclature = new A(273, 0x0010, 0x0223, V.LO);
        public static readonly A GeneticModificationsCodeSequence = new A(274, 0x0010, 0x0229, V.SQ);
        public static readonly A OtherPatientNames = new A(275, 0x0010, 0x1001, V.PN);
        public static readonly A OtherPatientIDsSequence = new A(276, 0x0010, 0x1002, V.SQ);
        public static readonly A PatientBirthName = new A(277, 0x0010, 0x1005, V.PN);
        public static readonly A PatientAge = new A(278, 0x0010, 0x1010, V.AS);
        public static readonly A PatientSize = new A(279, 0x0010, 0x1020, V.DS);
        public static readonly A PatientSizeCodeSequence = new A(280, 0x0010, 0x1021, V.SQ);
        public static readonly A PatientBodyMassIndex = new A(281, 0x0010, 0x1022, V.DS);
        public static readonly A MeasuredAPDimension = new A(282, 0x0010, 0x1023, V.DS);
        public static readonly A MeasuredLateralDimension = new A(283, 0x0010, 0x1024, V.DS);
        public static readonly A PatientWeight = new A(284, 0x0010, 0x1030, V.DS);
        public static readonly A PatientAddress = new A(285, 0x0010, 0x1040, V.LO);
        public static readonly A PatientMotherBirthName = new A(286, 0x0010, 0x1060, V.PN);
        public static readonly A MilitaryRank = new A(287, 0x0010, 0x1080, V.LO);
        public static readonly A BranchOfService = new A(288, 0x0010, 0x1081, V.LO);
        public static readonly A ReferencedPatientPhotoSequence = new A(289, 0x0010, 0x1100, V.SQ);
        public static readonly A MedicalAlerts = new A(290, 0x0010, 0x2000, V.LO);
        public static readonly A Allergies = new A(291, 0x0010, 0x2110, V.LO);
        public static readonly A CountryOfResidence = new A(292, 0x0010, 0x2150, V.LO);
        public static readonly A RegionOfResidence = new A(293, 0x0010, 0x2152, V.LO);
        public static readonly A PatientTelephoneNumbers = new A(294, 0x0010, 0x2154, V.SH);
        public static readonly A PatientTelecomInformation = new A(295, 0x0010, 0x2155, V.LT);
        public static readonly A EthnicGroup = new A(296, 0x0010, 0x2160, V.SH);
        public static readonly A Occupation = new A(297, 0x0010, 0x2180, V.SH);
        public static readonly A SmokingStatus = new A(298, 0x0010, 0x21A0, V.CS);
        public static readonly A AdditionalPatientHistory = new A(299, 0x0010, 0x21B0, V.LT);
        public static readonly A PregnancyStatus = new A(300, 0x0010, 0x21C0, V.US);
        public static readonly A LastMenstrualDate = new A(301, 0x0010, 0x21D0, V.DA);
        public static readonly A PatientReligiousPreference = new A(302, 0x0010, 0x21F0, V.LO);
        public static readonly A PatientSpeciesDescription = new A(303, 0x0010, 0x2201, V.LO);
        public static readonly A PatientSpeciesCodeSequence = new A(304, 0x0010, 0x2202, V.SQ);
        public static readonly A PatientSexNeutered = new A(305, 0x0010, 0x2203, V.CS);
        public static readonly A AnatomicalOrientationType = new A(306, 0x0010, 0x2210, V.CS);
        public static readonly A PatientBreedDescription = new A(307, 0x0010, 0x2292, V.LO);
        public static readonly A PatientBreedCodeSequence = new A(308, 0x0010, 0x2293, V.SQ);
        public static readonly A BreedRegistrationSequence = new A(309, 0x0010, 0x2294, V.SQ);
        public static readonly A BreedRegistrationNumber = new A(310, 0x0010, 0x2295, V.LO);
        public static readonly A BreedRegistryCodeSequence = new A(311, 0x0010, 0x2296, V.SQ);
        public static readonly A ResponsiblePerson = new A(312, 0x0010, 0x2297, V.PN);
        public static readonly A ResponsiblePersonRole = new A(313, 0x0010, 0x2298, V.CS);
        public static readonly A ResponsibleOrganization = new A(314, 0x0010, 0x2299, V.LO);
        public static readonly A PatientComments = new A(315, 0x0010, 0x4000, V.LT);
        public static readonly A ExaminedBodyThickness = new A(316, 0x0010, 0x9431, V.FL);
        public static readonly A ClinicalTrialSponsorName = new A(317, 0x0012, 0x0010, V.LO);
        public static readonly A ClinicalTrialProtocolID = new A(318, 0x0012, 0x0020, V.LO);
        public static readonly A ClinicalTrialProtocolName = new A(319, 0x0012, 0x0021, V.LO);
        public static readonly A ClinicalTrialSiteID = new A(320, 0x0012, 0x0030, V.LO);
        public static readonly A ClinicalTrialSiteName = new A(321, 0x0012, 0x0031, V.LO);
        public static readonly A ClinicalTrialSubjectID = new A(322, 0x0012, 0x0040, V.LO);
        public static readonly A ClinicalTrialSubjectReadingID = new A(323, 0x0012, 0x0042, V.LO);
        public static readonly A ClinicalTrialTimePointID = new A(324, 0x0012, 0x0050, V.LO);
        public static readonly A ClinicalTrialTimePointDescription = new A(325, 0x0012, 0x0051, V.ST);
        public static readonly A LongitudinalTemporalOffsetFromEvent = new A(326, 0x0012, 0x0052, V.FD);
        public static readonly A LongitudinalTemporalEventType = new A(327, 0x0012, 0x0053, V.CS);
        public static readonly A ClinicalTrialCoordinatingCenterName = new A(328, 0x0012, 0x0060, V.LO);
        public static readonly A PatientIdentityRemoved = new A(329, 0x0012, 0x0062, V.CS);
        public static readonly A DeidentificationMethod = new A(330, 0x0012, 0x0063, V.LO);
        public static readonly A DeidentificationMethodCodeSequence = new A(331, 0x0012, 0x0064, V.SQ);
        public static readonly A ClinicalTrialSeriesID = new A(332, 0x0012, 0x0071, V.LO);
        public static readonly A ClinicalTrialSeriesDescription = new A(333, 0x0012, 0x0072, V.LO);
        public static readonly A ClinicalTrialProtocolEthicsCommitteeName = new A(334, 0x0012, 0x0081, V.LO);
        public static readonly A ClinicalTrialProtocolEthicsCommitteeApprovalNumber = new A(335, 0x0012, 0x0082, V.LO);
        public static readonly A ConsentForClinicalTrialUseSequence = new A(336, 0x0012, 0x0083, V.SQ);
        public static readonly A DistributionType = new A(337, 0x0012, 0x0084, V.CS);
        public static readonly A ConsentForDistributionFlag = new A(338, 0x0012, 0x0085, V.CS);
        public static readonly A EthicsCommitteeApprovalEffectivenessStartDate = new A(339, 0x0012, 0x0086, V.DA);
        public static readonly A EthicsCommitteeApprovalEffectivenessEndDate = new A(340, 0x0012, 0x0087, V.DA);
        public static readonly A ComponentManufacturingProcedure = new A(341, 0x0014, 0x0025, V.ST);
        public static readonly A ComponentManufacturer = new A(342, 0x0014, 0x0028, V.ST);
        public static readonly A MaterialThickness = new A(343, 0x0014, 0x0030, V.DS);
        public static readonly A MaterialPipeDiameter = new A(344, 0x0014, 0x0032, V.DS);
        public static readonly A MaterialIsolationDiameter = new A(345, 0x0014, 0x0034, V.DS);
        public static readonly A MaterialGrade = new A(346, 0x0014, 0x0042, V.ST);
        public static readonly A MaterialPropertiesDescription = new A(347, 0x0014, 0x0044, V.ST);
        public static readonly A MaterialNotes = new A(348, 0x0014, 0x0046, V.LT);
        public static readonly A ComponentShape = new A(349, 0x0014, 0x0050, V.CS);
        public static readonly A CurvatureType = new A(350, 0x0014, 0x0052, V.CS);
        public static readonly A OuterDiameter = new A(351, 0x0014, 0x0054, V.DS);
        public static readonly A InnerDiameter = new A(352, 0x0014, 0x0056, V.DS);
        public static readonly A ComponentWelderIDs = new A(353, 0x0014, 0x0100, V.LO);
        public static readonly A SecondaryApprovalStatus = new A(354, 0x0014, 0x0101, V.CS);
        public static readonly A SecondaryReviewDate = new A(355, 0x0014, 0x0102, V.DA);
        public static readonly A SecondaryReviewTime = new A(356, 0x0014, 0x0103, V.TM);
        public static readonly A SecondaryReviewerName = new A(357, 0x0014, 0x0104, V.PN);
        public static readonly A RepairID = new A(358, 0x0014, 0x0105, V.ST);
        public static readonly A MultipleComponentApprovalSequence = new A(359, 0x0014, 0x0106, V.SQ);
        public static readonly A OtherApprovalStatus = new A(360, 0x0014, 0x0107, V.CS);
        public static readonly A OtherSecondaryApprovalStatus = new A(361, 0x0014, 0x0108, V.CS);
        public static readonly A ActualEnvironmentalConditions = new A(362, 0x0014, 0x1010, V.ST);
        public static readonly A ExpiryDate = new A(363, 0x0014, 0x1020, V.DA);
        public static readonly A EnvironmentalConditions = new A(364, 0x0014, 0x1040, V.ST);
        public static readonly A EvaluatorSequence = new A(365, 0x0014, 0x2002, V.SQ);
        public static readonly A EvaluatorNumber = new A(366, 0x0014, 0x2004, V.IS);
        public static readonly A EvaluatorName = new A(367, 0x0014, 0x2006, V.PN);
        public static readonly A EvaluationAttempt = new A(368, 0x0014, 0x2008, V.IS);
        public static readonly A IndicationSequence = new A(369, 0x0014, 0x2012, V.SQ);
        public static readonly A IndicationNumber = new A(370, 0x0014, 0x2014, V.IS);
        public static readonly A IndicationLabel = new A(371, 0x0014, 0x2016, V.SH);
        public static readonly A IndicationDescription = new A(372, 0x0014, 0x2018, V.ST);
        public static readonly A IndicationType = new A(373, 0x0014, 0x201A, V.CS);
        public static readonly A IndicationDisposition = new A(374, 0x0014, 0x201C, V.CS);
        public static readonly A IndicationROISequence = new A(375, 0x0014, 0x201E, V.SQ);
        public static readonly A IndicationPhysicalPropertySequence = new A(376, 0x0014, 0x2030, V.SQ);
        public static readonly A PropertyLabel = new A(377, 0x0014, 0x2032, V.SH);
        public static readonly A CoordinateSystemNumberOfAxes = new A(378, 0x0014, 0x2202, V.IS);
        public static readonly A CoordinateSystemAxesSequence = new A(379, 0x0014, 0x2204, V.SQ);
        public static readonly A CoordinateSystemAxisDescription = new A(380, 0x0014, 0x2206, V.ST);
        public static readonly A CoordinateSystemDataSetMapping = new A(381, 0x0014, 0x2208, V.CS);
        public static readonly A CoordinateSystemAxisNumber = new A(382, 0x0014, 0x220A, V.IS);
        public static readonly A CoordinateSystemAxisType = new A(383, 0x0014, 0x220C, V.CS);
        public static readonly A CoordinateSystemAxisUnits = new A(384, 0x0014, 0x220E, V.CS);
        public static readonly A CoordinateSystemAxisValues = new A(385, 0x0014, 0x2210, V.OB);
        public static readonly A CoordinateSystemTransformSequence = new A(386, 0x0014, 0x2220, V.SQ);
        public static readonly A TransformDescription = new A(387, 0x0014, 0x2222, V.ST);
        public static readonly A TransformNumberOfAxes = new A(388, 0x0014, 0x2224, V.IS);
        public static readonly A TransformOrderOfAxes = new A(389, 0x0014, 0x2226, V.IS);
        public static readonly A TransformedAxisUnits = new A(390, 0x0014, 0x2228, V.CS);
        public static readonly A CoordinateSystemTransformRotationAndScaleMatrix = new A(391, 0x0014, 0x222A, V.DS);
        public static readonly A CoordinateSystemTransformTranslationMatrix = new A(392, 0x0014, 0x222C, V.DS);
        public static readonly A InternalDetectorFrameTime = new A(393, 0x0014, 0x3011, V.DS);
        public static readonly A NumberOfFramesIntegrated = new A(394, 0x0014, 0x3012, V.DS);
        public static readonly A DetectorTemperatureSequence = new A(395, 0x0014, 0x3020, V.SQ);
        public static readonly A SensorName = new A(396, 0x0014, 0x3022, V.ST);
        public static readonly A HorizontalOffsetOfSensor = new A(397, 0x0014, 0x3024, V.DS);
        public static readonly A VerticalOffsetOfSensor = new A(398, 0x0014, 0x3026, V.DS);
        public static readonly A SensorTemperature = new A(399, 0x0014, 0x3028, V.DS);
        public static readonly A DarkCurrentSequence = new A(400, 0x0014, 0x3040, V.SQ);
        public static readonly A DarkCurrentCounts = new A(401, 0x0014, 0x3050, V.OB, V.OW);
        public static readonly A GainCorrectionReferenceSequence = new A(402, 0x0014, 0x3060, V.SQ);
        public static readonly A AirCounts = new A(403, 0x0014, 0x3070, V.OB, V.OW);
        public static readonly A KVUsedInGainCalibration = new A(404, 0x0014, 0x3071, V.DS);
        public static readonly A MAUsedInGainCalibration = new A(405, 0x0014, 0x3072, V.DS);
        public static readonly A NumberOfFramesUsedForIntegration = new A(406, 0x0014, 0x3073, V.DS);
        public static readonly A FilterMaterialUsedInGainCalibration = new A(407, 0x0014, 0x3074, V.LO);
        public static readonly A FilterThicknessUsedInGainCalibration = new A(408, 0x0014, 0x3075, V.DS);
        public static readonly A DateOfGainCalibration = new A(409, 0x0014, 0x3076, V.DA);
        public static readonly A TimeOfGainCalibration = new A(410, 0x0014, 0x3077, V.TM);
        public static readonly A BadPixelImage = new A(411, 0x0014, 0x3080, V.OB);
        public static readonly A CalibrationNotes = new A(412, 0x0014, 0x3099, V.LT);
        public static readonly A PulserEquipmentSequence = new A(413, 0x0014, 0x4002, V.SQ);
        public static readonly A PulserType = new A(414, 0x0014, 0x4004, V.CS);
        public static readonly A PulserNotes = new A(415, 0x0014, 0x4006, V.LT);
        public static readonly A ReceiverEquipmentSequence = new A(416, 0x0014, 0x4008, V.SQ);
        public static readonly A AmplifierType = new A(417, 0x0014, 0x400A, V.CS);
        public static readonly A ReceiverNotes = new A(418, 0x0014, 0x400C, V.LT);
        public static readonly A PreAmplifierEquipmentSequence = new A(419, 0x0014, 0x400E, V.SQ);
        public static readonly A PreAmplifierNotes = new A(420, 0x0014, 0x400F, V.LT);
        public static readonly A TransmitTransducerSequence = new A(421, 0x0014, 0x4010, V.SQ);
        public static readonly A ReceiveTransducerSequence = new A(422, 0x0014, 0x4011, V.SQ);
        public static readonly A NumberOfElements = new A(423, 0x0014, 0x4012, V.US);
        public static readonly A ElementShape = new A(424, 0x0014, 0x4013, V.CS);
        public static readonly A ElementDimensionA = new A(425, 0x0014, 0x4014, V.DS);
        public static readonly A ElementDimensionB = new A(426, 0x0014, 0x4015, V.DS);
        public static readonly A ElementPitchA = new A(427, 0x0014, 0x4016, V.DS);
        public static readonly A MeasuredBeamDimensionA = new A(428, 0x0014, 0x4017, V.DS);
        public static readonly A MeasuredBeamDimensionB = new A(429, 0x0014, 0x4018, V.DS);
        public static readonly A LocationOfMeasuredBeamDiameter = new A(430, 0x0014, 0x4019, V.DS);
        public static readonly A NominalFrequency = new A(431, 0x0014, 0x401A, V.DS);
        public static readonly A MeasuredCenterFrequency = new A(432, 0x0014, 0x401B, V.DS);
        public static readonly A MeasuredBandwidth = new A(433, 0x0014, 0x401C, V.DS);
        public static readonly A ElementPitchB = new A(434, 0x0014, 0x401D, V.DS);
        public static readonly A PulserSettingsSequence = new A(435, 0x0014, 0x4020, V.SQ);
        public static readonly A PulseWidth = new A(436, 0x0014, 0x4022, V.DS);
        public static readonly A ExcitationFrequency = new A(437, 0x0014, 0x4024, V.DS);
        public static readonly A ModulationType = new A(438, 0x0014, 0x4026, V.CS);
        public static readonly A Damping = new A(439, 0x0014, 0x4028, V.DS);
        public static readonly A ReceiverSettingsSequence = new A(440, 0x0014, 0x4030, V.SQ);
        public static readonly A AcquiredSoundpathLength = new A(441, 0x0014, 0x4031, V.DS);
        public static readonly A AcquisitionCompressionType = new A(442, 0x0014, 0x4032, V.CS);
        public static readonly A AcquisitionSampleSize = new A(443, 0x0014, 0x4033, V.IS);
        public static readonly A RectifierSmoothing = new A(444, 0x0014, 0x4034, V.DS);
        public static readonly A DACSequence = new A(445, 0x0014, 0x4035, V.SQ);
        public static readonly A DACType = new A(446, 0x0014, 0x4036, V.CS);
        public static readonly A DACGainPoints = new A(447, 0x0014, 0x4038, V.DS);
        public static readonly A DACTimePoints = new A(448, 0x0014, 0x403A, V.DS);
        public static readonly A DACAmplitude = new A(449, 0x0014, 0x403C, V.DS);
        public static readonly A PreAmplifierSettingsSequence = new A(450, 0x0014, 0x4040, V.SQ);
        public static readonly A TransmitTransducerSettingsSequence = new A(451, 0x0014, 0x4050, V.SQ);
        public static readonly A ReceiveTransducerSettingsSequence = new A(452, 0x0014, 0x4051, V.SQ);
        public static readonly A IncidentAngle = new A(453, 0x0014, 0x4052, V.DS);
        public static readonly A CouplingTechnique = new A(454, 0x0014, 0x4054, V.ST);
        public static readonly A CouplingMedium = new A(455, 0x0014, 0x4056, V.ST);
        public static readonly A CouplingVelocity = new A(456, 0x0014, 0x4057, V.DS);
        public static readonly A ProbeCenterLocationX = new A(457, 0x0014, 0x4058, V.DS);
        public static readonly A ProbeCenterLocationZ = new A(458, 0x0014, 0x4059, V.DS);
        public static readonly A SoundPathLength = new A(459, 0x0014, 0x405A, V.DS);
        public static readonly A DelayLawIdentifier = new A(460, 0x0014, 0x405C, V.ST);
        public static readonly A GateSettingsSequence = new A(461, 0x0014, 0x4060, V.SQ);
        public static readonly A GateThreshold = new A(462, 0x0014, 0x4062, V.DS);
        public static readonly A VelocityOfSound = new A(463, 0x0014, 0x4064, V.DS);
        public static readonly A CalibrationSettingsSequence = new A(464, 0x0014, 0x4070, V.SQ);
        public static readonly A CalibrationProcedure = new A(465, 0x0014, 0x4072, V.ST);
        public static readonly A ProcedureVersion = new A(466, 0x0014, 0x4074, V.SH);
        public static readonly A ProcedureCreationDate = new A(467, 0x0014, 0x4076, V.DA);
        public static readonly A ProcedureExpirationDate = new A(468, 0x0014, 0x4078, V.DA);
        public static readonly A ProcedureLastModifiedDate = new A(469, 0x0014, 0x407A, V.DA);
        public static readonly A CalibrationTime = new A(470, 0x0014, 0x407C, V.TM);
        public static readonly A CalibrationDate = new A(471, 0x0014, 0x407E, V.DA);
        public static readonly A ProbeDriveEquipmentSequence = new A(472, 0x0014, 0x4080, V.SQ);
        public static readonly A DriveType = new A(473, 0x0014, 0x4081, V.CS);
        public static readonly A ProbeDriveNotes = new A(474, 0x0014, 0x4082, V.LT);
        public static readonly A DriveProbeSequence = new A(475, 0x0014, 0x4083, V.SQ);
        public static readonly A ProbeInductance = new A(476, 0x0014, 0x4084, V.DS);
        public static readonly A ProbeResistance = new A(477, 0x0014, 0x4085, V.DS);
        public static readonly A ReceiveProbeSequence = new A(478, 0x0014, 0x4086, V.SQ);
        public static readonly A ProbeDriveSettingsSequence = new A(479, 0x0014, 0x4087, V.SQ);
        public static readonly A BridgeResistors = new A(480, 0x0014, 0x4088, V.DS);
        public static readonly A ProbeOrientationAngle = new A(481, 0x0014, 0x4089, V.DS);
        public static readonly A UserSelectedGainY = new A(482, 0x0014, 0x408B, V.DS);
        public static readonly A UserSelectedPhase = new A(483, 0x0014, 0x408C, V.DS);
        public static readonly A UserSelectedOffsetX = new A(484, 0x0014, 0x408D, V.DS);
        public static readonly A UserSelectedOffsetY = new A(485, 0x0014, 0x408E, V.DS);
        public static readonly A ChannelSettingsSequence = new A(486, 0x0014, 0x4091, V.SQ);
        public static readonly A ChannelThreshold = new A(487, 0x0014, 0x4092, V.DS);
        public static readonly A ScannerSettingsSequence = new A(488, 0x0014, 0x409A, V.SQ);
        public static readonly A ScanProcedure = new A(489, 0x0014, 0x409B, V.ST);
        public static readonly A TranslationRateX = new A(490, 0x0014, 0x409C, V.DS);
        public static readonly A TranslationRateY = new A(491, 0x0014, 0x409D, V.DS);
        public static readonly A ChannelOverlap = new A(492, 0x0014, 0x409F, V.DS);
        public static readonly A ImageQualityIndicatorType = new A(493, 0x0014, 0x40A0, V.LO);
        public static readonly A ImageQualityIndicatorMaterial = new A(494, 0x0014, 0x40A1, V.LO);
        public static readonly A ImageQualityIndicatorSize = new A(495, 0x0014, 0x40A2, V.LO);
        public static readonly A LINACEnergy = new A(496, 0x0014, 0x5002, V.IS);
        public static readonly A LINACOutput = new A(497, 0x0014, 0x5004, V.IS);
        public static readonly A ActiveAperture = new A(498, 0x0014, 0x5100, V.US);
        public static readonly A TotalAperture = new A(499, 0x0014, 0x5101, V.DS);
        public static readonly A ApertureElevation = new A(500, 0x0014, 0x5102, V.DS);
        public static readonly A MainLobeAngle = new A(501, 0x0014, 0x5103, V.DS);
        public static readonly A MainRoofAngle = new A(502, 0x0014, 0x5104, V.DS);
        public static readonly A ConnectorType = new A(503, 0x0014, 0x5105, V.CS);
        public static readonly A WedgeModelNumber = new A(504, 0x0014, 0x5106, V.SH);
        public static readonly A WedgeAngleFloat = new A(505, 0x0014, 0x5107, V.DS);
        public static readonly A WedgeRoofAngle = new A(506, 0x0014, 0x5108, V.DS);
        public static readonly A WedgeElement1Position = new A(507, 0x0014, 0x5109, V.CS);
        public static readonly A WedgeMaterialVelocity = new A(508, 0x0014, 0x510A, V.DS);
        public static readonly A WedgeMaterial = new A(509, 0x0014, 0x510B, V.SH);
        public static readonly A WedgeOffsetZ = new A(510, 0x0014, 0x510C, V.DS);
        public static readonly A WedgeOriginOffsetX = new A(511, 0x0014, 0x510D, V.DS);
        public static readonly A WedgeTimeDelay = new A(512, 0x0014, 0x510E, V.DS);
        public static readonly A WedgeName = new A(513, 0x0014, 0x510F, V.SH);
        public static readonly A WedgeManufacturerName = new A(514, 0x0014, 0x5110, V.SH);
        public static readonly A WedgeDescription = new A(515, 0x0014, 0x5111, V.LO);
        public static readonly A NominalBeamAngle = new A(516, 0x0014, 0x5112, V.DS);
        public static readonly A WedgeOffsetX = new A(517, 0x0014, 0x5113, V.DS);
        public static readonly A WedgeOffsetY = new A(518, 0x0014, 0x5114, V.DS);
        public static readonly A WedgeTotalLength = new A(519, 0x0014, 0x5115, V.DS);
        public static readonly A WedgeInContactLength = new A(520, 0x0014, 0x5116, V.DS);
        public static readonly A WedgeFrontGap = new A(521, 0x0014, 0x5117, V.DS);
        public static readonly A WedgeTotalHeight = new A(522, 0x0014, 0x5118, V.DS);
        public static readonly A WedgeFrontHeight = new A(523, 0x0014, 0x5119, V.DS);
        public static readonly A WedgeRearHeight = new A(524, 0x0014, 0x511A, V.DS);
        public static readonly A WedgeTotalWidth = new A(525, 0x0014, 0x511B, V.DS);
        public static readonly A WedgeInContactWidth = new A(526, 0x0014, 0x511C, V.DS);
        public static readonly A WedgeChamferHeight = new A(527, 0x0014, 0x511D, V.DS);
        public static readonly A WedgeCurve = new A(528, 0x0014, 0x511E, V.CS);
        public static readonly A RadiusAlongWedge = new A(529, 0x0014, 0x511F, V.DS);
        public static readonly A WhitePoint = new A(530, 0x0016, 0x0001, V.DS);
        public static readonly A PrimaryChromaticities = new A(531, 0x0016, 0x0002, V.DS);
        public static readonly A BatteryLevel = new A(532, 0x0016, 0x0003, V.UT);
        public static readonly A ExposureTimeInSeconds = new A(533, 0x0016, 0x0004, V.DS);
        public static readonly A FNumber = new A(534, 0x0016, 0x0005, V.DS);
        public static readonly A OECFRows = new A(535, 0x0016, 0x0006, V.IS);
        public static readonly A OECFColumns = new A(536, 0x0016, 0x0007, V.IS);
        public static readonly A OECFColumnNames = new A(537, 0x0016, 0x0008, V.UC);
        public static readonly A OECFValues = new A(538, 0x0016, 0x0009, V.DS);
        public static readonly A SpatialFrequencyResponseRows = new A(539, 0x0016, 0x000A, V.IS);
        public static readonly A SpatialFrequencyResponseColumns = new A(540, 0x0016, 0x000B, V.IS);
        public static readonly A SpatialFrequencyResponseColumnNames = new A(541, 0x0016, 0x000C, V.UC);
        public static readonly A SpatialFrequencyResponseValues = new A(542, 0x0016, 0x000D, V.DS);
        public static readonly A ColorFilterArrayPatternRows = new A(543, 0x0016, 0x000E, V.IS);
        public static readonly A ColorFilterArrayPatternColumns = new A(544, 0x0016, 0x000F, V.IS);
        public static readonly A ColorFilterArrayPatternValues = new A(545, 0x0016, 0x0010, V.DS);
        public static readonly A FlashFiringStatus = new A(546, 0x0016, 0x0011, V.US);
        public static readonly A FlashReturnStatus = new A(547, 0x0016, 0x0012, V.US);
        public static readonly A FlashMode = new A(548, 0x0016, 0x0013, V.US);
        public static readonly A FlashFunctionPresent = new A(549, 0x0016, 0x0014, V.US);
        public static readonly A FlashRedEyeMode = new A(550, 0x0016, 0x0015, V.US);
        public static readonly A ExposureProgram = new A(551, 0x0016, 0x0016, V.US);
        public static readonly A SpectralSensitivity = new A(552, 0x0016, 0x0017, V.UT);
        public static readonly A PhotographicSensitivity = new A(553, 0x0016, 0x0018, V.IS);
        public static readonly A SelfTimerMode = new A(554, 0x0016, 0x0019, V.IS);
        public static readonly A SensitivityType = new A(555, 0x0016, 0x001A, V.US);
        public static readonly A StandardOutputSensitivity = new A(556, 0x0016, 0x001B, V.IS);
        public static readonly A RecommendedExposureIndex = new A(557, 0x0016, 0x001C, V.IS);
        public static readonly A ISOSpeed = new A(558, 0x0016, 0x001D, V.IS);
        public static readonly A ISOSpeedLatitudeyyy = new A(559, 0x0016, 0x001E, V.IS);
        public static readonly A ISOSpeedLatitudezzz = new A(560, 0x0016, 0x001F, V.IS);
        public static readonly A EXIFVersion = new A(561, 0x0016, 0x0020, V.UT);
        public static readonly A ShutterSpeedValue = new A(562, 0x0016, 0x0021, V.DS);
        public static readonly A ApertureValue = new A(563, 0x0016, 0x0022, V.DS);
        public static readonly A BrightnessValue = new A(564, 0x0016, 0x0023, V.DS);
        public static readonly A ExposureBiasValue = new A(565, 0x0016, 0x0024, V.DS);
        public static readonly A MaxApertureValue = new A(566, 0x0016, 0x0025, V.DS);
        public static readonly A SubjectDistance = new A(567, 0x0016, 0x0026, V.DS);
        public static readonly A MeteringMode = new A(568, 0x0016, 0x0027, V.US);
        public static readonly A LightSource = new A(569, 0x0016, 0x0028, V.US);
        public static readonly A FocalLength = new A(570, 0x0016, 0x0029, V.DS);
        public static readonly A SubjectArea = new A(571, 0x0016, 0x002A, V.IS);
        public static readonly A MakerNote = new A(572, 0x0016, 0x002B, V.OB);
        public static readonly A Temperature = new A(573, 0x0016, 0x0030, V.DS);
        public static readonly A Humidity = new A(574, 0x0016, 0x0031, V.DS);
        public static readonly A Pressure = new A(575, 0x0016, 0x0032, V.DS);
        public static readonly A WaterDepth = new A(576, 0x0016, 0x0033, V.DS);
        public static readonly A Acceleration = new A(577, 0x0016, 0x0034, V.DS);
        public static readonly A CameraElevationAngle = new A(578, 0x0016, 0x0035, V.DS);
        public static readonly A FlashEnergy = new A(579, 0x0016, 0x0036, V.DS);
        public static readonly A SubjectLocation = new A(580, 0x0016, 0x0037, V.IS);
        public static readonly A PhotographicExposureIndex = new A(581, 0x0016, 0x0038, V.DS);
        public static readonly A SensingMethod = new A(582, 0x0016, 0x0039, V.US);
        public static readonly A FileSource = new A(583, 0x0016, 0x003A, V.US);
        public static readonly A SceneType = new A(584, 0x0016, 0x003B, V.US);
        public static readonly A CustomRendered = new A(585, 0x0016, 0x0041, V.US);
        public static readonly A ExposureMode = new A(586, 0x0016, 0x0042, V.US);
        public static readonly A WhiteBalance = new A(587, 0x0016, 0x0043, V.US);
        public static readonly A DigitalZoomRatio = new A(588, 0x0016, 0x0044, V.DS);
        public static readonly A FocalLengthIn35mmFilm = new A(589, 0x0016, 0x0045, V.IS);
        public static readonly A SceneCaptureType = new A(590, 0x0016, 0x0046, V.US);
        public static readonly A GainControl = new A(591, 0x0016, 0x0047, V.US);
        public static readonly A Contrast = new A(592, 0x0016, 0x0048, V.US);
        public static readonly A Saturation = new A(593, 0x0016, 0x0049, V.US);
        public static readonly A Sharpness = new A(594, 0x0016, 0x004A, V.US);
        public static readonly A DeviceSettingDescription = new A(595, 0x0016, 0x004B, V.OB);
        public static readonly A SubjectDistanceRange = new A(596, 0x0016, 0x004C, V.US);
        public static readonly A CameraOwnerName = new A(597, 0x0016, 0x004D, V.UT);
        public static readonly A LensSpecification = new A(598, 0x0016, 0x004E, V.DS);
        public static readonly A LensMake = new A(599, 0x0016, 0x004F, V.UT);
        public static readonly A LensModel = new A(600, 0x0016, 0x0050, V.UT);
        public static readonly A LensSerialNumber = new A(601, 0x0016, 0x0051, V.UT);
        public static readonly A InteroperabilityIndex = new A(602, 0x0016, 0x0061, V.CS);
        public static readonly A InteroperabilityVersion = new A(603, 0x0016, 0x0062, V.OB);
        public static readonly A GPSVersionID = new A(604, 0x0016, 0x0070, V.OB);
        public static readonly A GPSLatitudeRef = new A(605, 0x0016, 0x0071, V.CS);
        public static readonly A GPSLatitude = new A(606, 0x0016, 0x0072, V.DS);
        public static readonly A GPSLongitudeRef = new A(607, 0x0016, 0x0073, V.CS);
        public static readonly A GPSLongitude = new A(608, 0x0016, 0x0074, V.DS);
        public static readonly A GPSAltitudeRef = new A(609, 0x0016, 0x0075, V.US);
        public static readonly A GPSAltitude = new A(610, 0x0016, 0x0076, V.DS);
        public static readonly A GPSTimeStamp = new A(611, 0x0016, 0x0077, V.DT);
        public static readonly A GPSSatellites = new A(612, 0x0016, 0x0078, V.UT);
        public static readonly A GPSStatus = new A(613, 0x0016, 0x0079, V.CS);
        public static readonly A GPSMeasureMode = new A(614, 0x0016, 0x007A, V.CS);
        public static readonly A GPSDOP = new A(615, 0x0016, 0x007B, V.DS);
        public static readonly A GPSSpeedRef = new A(616, 0x0016, 0x007C, V.CS);
        public static readonly A GPSSpeed = new A(617, 0x0016, 0x007D, V.DS);
        public static readonly A GPSTrackRef = new A(618, 0x0016, 0x007E, V.CS);
        public static readonly A GPSTrack = new A(619, 0x0016, 0x007F, V.DS);
        public static readonly A GPSImgDirectionRef = new A(620, 0x0016, 0x0080, V.CS);
        public static readonly A GPSImgDirection = new A(621, 0x0016, 0x0081, V.DS);
        public static readonly A GPSMapDatum = new A(622, 0x0016, 0x0082, V.UT);
        public static readonly A GPSDestLatitudeRef = new A(623, 0x0016, 0x0083, V.CS);
        public static readonly A GPSDestLatitude = new A(624, 0x0016, 0x0084, V.DS);
        public static readonly A GPSDestLongitudeRef = new A(625, 0x0016, 0x0085, V.CS);
        public static readonly A GPSDestLongitude = new A(626, 0x0016, 0x0086, V.DS);
        public static readonly A GPSDestBearingRef = new A(627, 0x0016, 0x0087, V.CS);
        public static readonly A GPSDestBearing = new A(628, 0x0016, 0x0088, V.DS);
        public static readonly A GPSDestDistanceRef = new A(629, 0x0016, 0x0089, V.CS);
        public static readonly A GPSDestDistance = new A(630, 0x0016, 0x008A, V.DS);
        public static readonly A GPSProcessingMethod = new A(631, 0x0016, 0x008B, V.OB);
        public static readonly A GPSAreaInformation = new A(632, 0x0016, 0x008C, V.OB);
        public static readonly A GPSDateStamp = new A(633, 0x0016, 0x008D, V.DT);
        public static readonly A GPSDifferential = new A(634, 0x0016, 0x008E, V.IS);
        public static readonly A ContrastBolusAgent = new A(635, 0x0018, 0x0010, V.LO);
        public static readonly A ContrastBolusAgentSequence = new A(636, 0x0018, 0x0012, V.SQ);
        public static readonly A ContrastBolusT1Relaxivity = new A(637, 0x0018, 0x0013, V.FL);
        public static readonly A ContrastBolusAdministrationRouteSequence = new A(638, 0x0018, 0x0014, V.SQ);
        public static readonly A BodyPartExamined = new A(639, 0x0018, 0x0015, V.CS);
        public static readonly A ScanningSequence = new A(640, 0x0018, 0x0020, V.CS);
        public static readonly A SequenceVariant = new A(641, 0x0018, 0x0021, V.CS);
        public static readonly A ScanOptions = new A(642, 0x0018, 0x0022, V.CS);
        public static readonly A MRAcquisitionType = new A(643, 0x0018, 0x0023, V.CS);
        public static readonly A SequenceName = new A(644, 0x0018, 0x0024, V.SH);
        public static readonly A AngioFlag = new A(645, 0x0018, 0x0025, V.CS);
        public static readonly A InterventionDrugInformationSequence = new A(646, 0x0018, 0x0026, V.SQ);
        public static readonly A InterventionDrugStopTime = new A(647, 0x0018, 0x0027, V.TM);
        public static readonly A InterventionDrugDose = new A(648, 0x0018, 0x0028, V.DS);
        public static readonly A InterventionDrugCodeSequence = new A(649, 0x0018, 0x0029, V.SQ);
        public static readonly A AdditionalDrugSequence = new A(650, 0x0018, 0x002A, V.SQ);
        public static readonly A Radiopharmaceutical = new A(651, 0x0018, 0x0031, V.LO);
        public static readonly A InterventionDrugName = new A(652, 0x0018, 0x0034, V.LO);
        public static readonly A InterventionDrugStartTime = new A(653, 0x0018, 0x0035, V.TM);
        public static readonly A InterventionSequence = new A(654, 0x0018, 0x0036, V.SQ);
        public static readonly A InterventionStatus = new A(655, 0x0018, 0x0038, V.CS);
        public static readonly A InterventionDescription = new A(656, 0x0018, 0x003A, V.ST);
        public static readonly A CineRate = new A(657, 0x0018, 0x0040, V.IS);
        public static readonly A InitialCineRunState = new A(658, 0x0018, 0x0042, V.CS);
        public static readonly A SliceThickness = new A(659, 0x0018, 0x0050, V.DS);
        public static readonly A KVP = new A(660, 0x0018, 0x0060, V.DS);
        public static readonly A CountsAccumulated = new A(661, 0x0018, 0x0070, V.IS);
        public static readonly A AcquisitionTerminationCondition = new A(662, 0x0018, 0x0071, V.CS);
        public static readonly A EffectiveDuration = new A(663, 0x0018, 0x0072, V.DS);
        public static readonly A AcquisitionStartCondition = new A(664, 0x0018, 0x0073, V.CS);
        public static readonly A AcquisitionStartConditionData = new A(665, 0x0018, 0x0074, V.IS);
        public static readonly A AcquisitionTerminationConditionData = new A(666, 0x0018, 0x0075, V.IS);
        public static readonly A RepetitionTime = new A(667, 0x0018, 0x0080, V.DS);
        public static readonly A EchoTime = new A(668, 0x0018, 0x0081, V.DS);
        public static readonly A InversionTime = new A(669, 0x0018, 0x0082, V.DS);
        public static readonly A NumberOfAverages = new A(670, 0x0018, 0x0083, V.DS);
        public static readonly A ImagingFrequency = new A(671, 0x0018, 0x0084, V.DS);
        public static readonly A ImagedNucleus = new A(672, 0x0018, 0x0085, V.SH);
        public static readonly A EchoNumbers = new A(673, 0x0018, 0x0086, V.IS);
        public static readonly A MagneticFieldStrength = new A(674, 0x0018, 0x0087, V.DS);
        public static readonly A SpacingBetweenSlices = new A(675, 0x0018, 0x0088, V.DS);
        public static readonly A NumberOfPhaseEncodingSteps = new A(676, 0x0018, 0x0089, V.IS);
        public static readonly A DataCollectionDiameter = new A(677, 0x0018, 0x0090, V.DS);
        public static readonly A EchoTrainLength = new A(678, 0x0018, 0x0091, V.IS);
        public static readonly A PercentSampling = new A(679, 0x0018, 0x0093, V.DS);
        public static readonly A PercentPhaseFieldOfView = new A(680, 0x0018, 0x0094, V.DS);
        public static readonly A PixelBandwidth = new A(681, 0x0018, 0x0095, V.DS);
        public static readonly A DeviceSerialNumber = new A(682, 0x0018, 0x1000, V.LO);
        public static readonly A DeviceUID = new A(683, 0x0018, 0x1002, V.UI);
        public static readonly A DeviceID = new A(684, 0x0018, 0x1003, V.LO);
        public static readonly A PlateID = new A(685, 0x0018, 0x1004, V.LO);
        public static readonly A GeneratorID = new A(686, 0x0018, 0x1005, V.LO);
        public static readonly A GridID = new A(687, 0x0018, 0x1006, V.LO);
        public static readonly A CassetteID = new A(688, 0x0018, 0x1007, V.LO);
        public static readonly A GantryID = new A(689, 0x0018, 0x1008, V.LO);
        public static readonly A UniqueDeviceIdentifier = new A(690, 0x0018, 0x1009, V.UT);
        public static readonly A UDISequence = new A(691, 0x0018, 0x100A, V.SQ);
        public static readonly A ManufacturerDeviceClassUID = new A(692, 0x0018, 0x100B, V.UI);
        public static readonly A SecondaryCaptureDeviceID = new A(693, 0x0018, 0x1010, V.LO);
        public static readonly A DateOfSecondaryCapture = new A(694, 0x0018, 0x1012, V.DA);
        public static readonly A TimeOfSecondaryCapture = new A(695, 0x0018, 0x1014, V.TM);
        public static readonly A SecondaryCaptureDeviceManufacturer = new A(696, 0x0018, 0x1016, V.LO);
        public static readonly A SecondaryCaptureDeviceManufacturerModelName = new A(697, 0x0018, 0x1018, V.LO);
        public static readonly A SecondaryCaptureDeviceSoftwareVersions = new A(698, 0x0018, 0x1019, V.LO);
        public static readonly A SoftwareVersions = new A(699, 0x0018, 0x1020, V.LO);
        public static readonly A VideoImageFormatAcquired = new A(700, 0x0018, 0x1022, V.SH);
        public static readonly A DigitalImageFormatAcquired = new A(701, 0x0018, 0x1023, V.LO);
        public static readonly A ProtocolName = new A(702, 0x0018, 0x1030, V.LO);
        public static readonly A ContrastBolusRoute = new A(703, 0x0018, 0x1040, V.LO);
        public static readonly A ContrastBolusVolume = new A(704, 0x0018, 0x1041, V.DS);
        public static readonly A ContrastBolusStartTime = new A(705, 0x0018, 0x1042, V.TM);
        public static readonly A ContrastBolusStopTime = new A(706, 0x0018, 0x1043, V.TM);
        public static readonly A ContrastBolusTotalDose = new A(707, 0x0018, 0x1044, V.DS);
        public static readonly A SyringeCounts = new A(708, 0x0018, 0x1045, V.IS);
        public static readonly A ContrastFlowRate = new A(709, 0x0018, 0x1046, V.DS);
        public static readonly A ContrastFlowDuration = new A(710, 0x0018, 0x1047, V.DS);
        public static readonly A ContrastBolusIngredient = new A(711, 0x0018, 0x1048, V.CS);
        public static readonly A ContrastBolusIngredientConcentration = new A(712, 0x0018, 0x1049, V.DS);
        public static readonly A SpatialResolution = new A(713, 0x0018, 0x1050, V.DS);
        public static readonly A TriggerTime = new A(714, 0x0018, 0x1060, V.DS);
        public static readonly A TriggerSourceOrType = new A(715, 0x0018, 0x1061, V.LO);
        public static readonly A NominalInterval = new A(716, 0x0018, 0x1062, V.IS);
        public static readonly A FrameTime = new A(717, 0x0018, 0x1063, V.DS);
        public static readonly A CardiacFramingType = new A(718, 0x0018, 0x1064, V.LO);
        public static readonly A FrameTimeVector = new A(719, 0x0018, 0x1065, V.DS);
        public static readonly A FrameDelay = new A(720, 0x0018, 0x1066, V.DS);
        public static readonly A ImageTriggerDelay = new A(721, 0x0018, 0x1067, V.DS);
        public static readonly A MultiplexGroupTimeOffset = new A(722, 0x0018, 0x1068, V.DS);
        public static readonly A TriggerTimeOffset = new A(723, 0x0018, 0x1069, V.DS);
        public static readonly A SynchronizationTrigger = new A(724, 0x0018, 0x106A, V.CS);
        public static readonly A SynchronizationChannel = new A(725, 0x0018, 0x106C, V.US);
        public static readonly A TriggerSamplePosition = new A(726, 0x0018, 0x106E, V.UL);
        public static readonly A RadiopharmaceuticalRoute = new A(727, 0x0018, 0x1070, V.LO);
        public static readonly A RadiopharmaceuticalVolume = new A(728, 0x0018, 0x1071, V.DS);
        public static readonly A RadiopharmaceuticalStartTime = new A(729, 0x0018, 0x1072, V.TM);
        public static readonly A RadiopharmaceuticalStopTime = new A(730, 0x0018, 0x1073, V.TM);
        public static readonly A RadionuclideTotalDose = new A(731, 0x0018, 0x1074, V.DS);
        public static readonly A RadionuclideHalfLife = new A(732, 0x0018, 0x1075, V.DS);
        public static readonly A RadionuclidePositronFraction = new A(733, 0x0018, 0x1076, V.DS);
        public static readonly A RadiopharmaceuticalSpecificActivity = new A(734, 0x0018, 0x1077, V.DS);
        public static readonly A RadiopharmaceuticalStartDateTime = new A(735, 0x0018, 0x1078, V.DT);
        public static readonly A RadiopharmaceuticalStopDateTime = new A(736, 0x0018, 0x1079, V.DT);
        public static readonly A BeatRejectionFlag = new A(737, 0x0018, 0x1080, V.CS);
        public static readonly A LowRRValue = new A(738, 0x0018, 0x1081, V.IS);
        public static readonly A HighRRValue = new A(739, 0x0018, 0x1082, V.IS);
        public static readonly A IntervalsAcquired = new A(740, 0x0018, 0x1083, V.IS);
        public static readonly A IntervalsRejected = new A(741, 0x0018, 0x1084, V.IS);
        public static readonly A PVCRejection = new A(742, 0x0018, 0x1085, V.LO);
        public static readonly A SkipBeats = new A(743, 0x0018, 0x1086, V.IS);
        public static readonly A HeartRate = new A(744, 0x0018, 0x1088, V.IS);
        public static readonly A CardiacNumberOfImages = new A(745, 0x0018, 0x1090, V.IS);
        public static readonly A TriggerWindow = new A(746, 0x0018, 0x1094, V.IS);
        public static readonly A ReconstructionDiameter = new A(747, 0x0018, 0x1100, V.DS);
        public static readonly A DistanceSourceToDetector = new A(748, 0x0018, 0x1110, V.DS);
        public static readonly A DistanceSourceToPatient = new A(749, 0x0018, 0x1111, V.DS);
        public static readonly A EstimatedRadiographicMagnificationFactor = new A(750, 0x0018, 0x1114, V.DS);
        public static readonly A GantryDetectorTilt = new A(751, 0x0018, 0x1120, V.DS);
        public static readonly A GantryDetectorSlew = new A(752, 0x0018, 0x1121, V.DS);
        public static readonly A TableHeight = new A(753, 0x0018, 0x1130, V.DS);
        public static readonly A TableTraverse = new A(754, 0x0018, 0x1131, V.DS);
        public static readonly A TableMotion = new A(755, 0x0018, 0x1134, V.CS);
        public static readonly A TableVerticalIncrement = new A(756, 0x0018, 0x1135, V.DS);
        public static readonly A TableLateralIncrement = new A(757, 0x0018, 0x1136, V.DS);
        public static readonly A TableLongitudinalIncrement = new A(758, 0x0018, 0x1137, V.DS);
        public static readonly A TableAngle = new A(759, 0x0018, 0x1138, V.DS);
        public static readonly A TableType = new A(760, 0x0018, 0x113A, V.CS);
        public static readonly A RotationDirection = new A(761, 0x0018, 0x1140, V.CS);
        public static readonly A RadialPosition = new A(762, 0x0018, 0x1142, V.DS);
        public static readonly A ScanArc = new A(763, 0x0018, 0x1143, V.DS);
        public static readonly A AngularStep = new A(764, 0x0018, 0x1144, V.DS);
        public static readonly A CenterOfRotationOffset = new A(765, 0x0018, 0x1145, V.DS);
        public static readonly A FieldOfViewShape = new A(766, 0x0018, 0x1147, V.CS);
        public static readonly A FieldOfViewDimensions = new A(767, 0x0018, 0x1149, V.IS);
        public static readonly A ExposureTime = new A(768, 0x0018, 0x1150, V.IS);
        public static readonly A XRayTubeCurrent = new A(769, 0x0018, 0x1151, V.IS);
        public static readonly A Exposure = new A(770, 0x0018, 0x1152, V.IS);
        public static readonly A ExposureInuAs = new A(771, 0x0018, 0x1153, V.IS);
        public static readonly A AveragePulseWidth = new A(772, 0x0018, 0x1154, V.DS);
        public static readonly A RadiationSetting = new A(773, 0x0018, 0x1155, V.CS);
        public static readonly A RectificationType = new A(774, 0x0018, 0x1156, V.CS);
        public static readonly A RadiationMode = new A(775, 0x0018, 0x115A, V.CS);
        public static readonly A ImageAndFluoroscopyAreaDoseProduct = new A(776, 0x0018, 0x115E, V.DS);
        public static readonly A FilterType = new A(777, 0x0018, 0x1160, V.SH);
        public static readonly A TypeOfFilters = new A(778, 0x0018, 0x1161, V.LO);
        public static readonly A IntensifierSize = new A(779, 0x0018, 0x1162, V.DS);
        public static readonly A ImagerPixelSpacing = new A(780, 0x0018, 0x1164, V.DS);
        public static readonly A Grid = new A(781, 0x0018, 0x1166, V.CS);
        public static readonly A GeneratorPower = new A(782, 0x0018, 0x1170, V.IS);
        public static readonly A CollimatorGridName = new A(783, 0x0018, 0x1180, V.SH);
        public static readonly A CollimatorType = new A(784, 0x0018, 0x1181, V.CS);
        public static readonly A FocalDistance = new A(785, 0x0018, 0x1182, V.IS);
        public static readonly A XFocusCenter = new A(786, 0x0018, 0x1183, V.DS);
        public static readonly A YFocusCenter = new A(787, 0x0018, 0x1184, V.DS);
        public static readonly A FocalSpots = new A(788, 0x0018, 0x1190, V.DS);
        public static readonly A AnodeTargetMaterial = new A(789, 0x0018, 0x1191, V.CS);
        public static readonly A BodyPartThickness = new A(790, 0x0018, 0x11A0, V.DS);
        public static readonly A CompressionForce = new A(791, 0x0018, 0x11A2, V.DS);
        public static readonly A CompressionPressure = new A(792, 0x0018, 0x11A3, V.DS);
        public static readonly A PaddleDescription = new A(793, 0x0018, 0x11A4, V.LO);
        public static readonly A CompressionContactArea = new A(794, 0x0018, 0x11A5, V.DS);
        public static readonly A DateOfLastCalibration = new A(795, 0x0018, 0x1200, V.DA);
        public static readonly A TimeOfLastCalibration = new A(796, 0x0018, 0x1201, V.TM);
        public static readonly A DateTimeOfLastCalibration = new A(797, 0x0018, 0x1202, V.DT);
        public static readonly A ConvolutionKernel = new A(798, 0x0018, 0x1210, V.SH);
        public static readonly A ActualFrameDuration = new A(799, 0x0018, 0x1242, V.IS);
        public static readonly A CountRate = new A(800, 0x0018, 0x1243, V.IS);
        public static readonly A PreferredPlaybackSequencing = new A(801, 0x0018, 0x1244, V.US);
        public static readonly A ReceiveCoilName = new A(802, 0x0018, 0x1250, V.SH);
        public static readonly A TransmitCoilName = new A(803, 0x0018, 0x1251, V.SH);
        public static readonly A PlateType = new A(804, 0x0018, 0x1260, V.SH);
        public static readonly A PhosphorType = new A(805, 0x0018, 0x1261, V.LO);
        public static readonly A WaterEquivalentDiameter = new A(806, 0x0018, 0x1271, V.FD);
        public static readonly A WaterEquivalentDiameterCalculationMethodCodeSequence = new A(807, 0x0018, 0x1272, V.SQ);
        public static readonly A ScanVelocity = new A(808, 0x0018, 0x1300, V.DS);
        public static readonly A WholeBodyTechnique = new A(809, 0x0018, 0x1301, V.CS);
        public static readonly A ScanLength = new A(810, 0x0018, 0x1302, V.IS);
        public static readonly A AcquisitionMatrix = new A(811, 0x0018, 0x1310, V.US);
        public static readonly A InPlanePhaseEncodingDirection = new A(812, 0x0018, 0x1312, V.CS);
        public static readonly A FlipAngle = new A(813, 0x0018, 0x1314, V.DS);
        public static readonly A VariableFlipAngleFlag = new A(814, 0x0018, 0x1315, V.CS);
        public static readonly A SAR = new A(815, 0x0018, 0x1316, V.DS);
        public static readonly A dBdt = new A(816, 0x0018, 0x1318, V.DS);
        public static readonly A B1rms = new A(817, 0x0018, 0x1320, V.FL);
        public static readonly A AcquisitionDeviceProcessingDescription = new A(818, 0x0018, 0x1400, V.LO);
        public static readonly A AcquisitionDeviceProcessingCode = new A(819, 0x0018, 0x1401, V.LO);
        public static readonly A CassetteOrientation = new A(820, 0x0018, 0x1402, V.CS);
        public static readonly A CassetteSize = new A(821, 0x0018, 0x1403, V.CS);
        public static readonly A ExposuresOnPlate = new A(822, 0x0018, 0x1404, V.US);
        public static readonly A RelativeXRayExposure = new A(823, 0x0018, 0x1405, V.IS);
        public static readonly A ExposureIndex = new A(824, 0x0018, 0x1411, V.DS);
        public static readonly A TargetExposureIndex = new A(825, 0x0018, 0x1412, V.DS);
        public static readonly A DeviationIndex = new A(826, 0x0018, 0x1413, V.DS);
        public static readonly A ColumnAngulation = new A(827, 0x0018, 0x1450, V.DS);
        public static readonly A TomoLayerHeight = new A(828, 0x0018, 0x1460, V.DS);
        public static readonly A TomoAngle = new A(829, 0x0018, 0x1470, V.DS);
        public static readonly A TomoTime = new A(830, 0x0018, 0x1480, V.DS);
        public static readonly A TomoType = new A(831, 0x0018, 0x1490, V.CS);
        public static readonly A TomoClass = new A(832, 0x0018, 0x1491, V.CS);
        public static readonly A NumberOfTomosynthesisSourceImages = new A(833, 0x0018, 0x1495, V.IS);
        public static readonly A PositionerMotion = new A(834, 0x0018, 0x1500, V.CS);
        public static readonly A PositionerType = new A(835, 0x0018, 0x1508, V.CS);
        public static readonly A PositionerPrimaryAngle = new A(836, 0x0018, 0x1510, V.DS);
        public static readonly A PositionerSecondaryAngle = new A(837, 0x0018, 0x1511, V.DS);
        public static readonly A PositionerPrimaryAngleIncrement = new A(838, 0x0018, 0x1520, V.DS);
        public static readonly A PositionerSecondaryAngleIncrement = new A(839, 0x0018, 0x1521, V.DS);
        public static readonly A DetectorPrimaryAngle = new A(840, 0x0018, 0x1530, V.DS);
        public static readonly A DetectorSecondaryAngle = new A(841, 0x0018, 0x1531, V.DS);
        public static readonly A ShutterShape = new A(842, 0x0018, 0x1600, V.CS);
        public static readonly A ShutterLeftVerticalEdge = new A(843, 0x0018, 0x1602, V.IS);
        public static readonly A ShutterRightVerticalEdge = new A(844, 0x0018, 0x1604, V.IS);
        public static readonly A ShutterUpperHorizontalEdge = new A(845, 0x0018, 0x1606, V.IS);
        public static readonly A ShutterLowerHorizontalEdge = new A(846, 0x0018, 0x1608, V.IS);
        public static readonly A CenterOfCircularShutter = new A(847, 0x0018, 0x1610, V.IS);
        public static readonly A RadiusOfCircularShutter = new A(848, 0x0018, 0x1612, V.IS);
        public static readonly A VerticesOfThePolygonalShutter = new A(849, 0x0018, 0x1620, V.IS);
        public static readonly A ShutterPresentationValue = new A(850, 0x0018, 0x1622, V.US);
        public static readonly A ShutterOverlayGroup = new A(851, 0x0018, 0x1623, V.US);
        public static readonly A ShutterPresentationColorCIELabValue = new A(852, 0x0018, 0x1624, V.US);
        public static readonly A OutlineShapeType = new A(853, 0x0018, 0x1630, V.CS);
        public static readonly A OutlineLeftVerticalEdge = new A(854, 0x0018, 0x1631, V.FD);
        public static readonly A OutlineRightVerticalEdge = new A(855, 0x0018, 0x1632, V.FD);
        public static readonly A OutlineUpperHorizontalEdge = new A(856, 0x0018, 0x1633, V.FD);
        public static readonly A OutlineLowerHorizontalEdge = new A(857, 0x0018, 0x1634, V.FD);
        public static readonly A CenterOfCircularOutline = new A(858, 0x0018, 0x1635, V.FD);
        public static readonly A DiameterOfCircularOutline = new A(859, 0x0018, 0x1636, V.FD);
        public static readonly A NumberOfPolygonalVertices = new A(860, 0x0018, 0x1637, V.UL);
        public static readonly A VerticesOfThePolygonalOutline = new A(861, 0x0018, 0x1638, V.OF);
        public static readonly A CollimatorShape = new A(862, 0x0018, 0x1700, V.CS);
        public static readonly A CollimatorLeftVerticalEdge = new A(863, 0x0018, 0x1702, V.IS);
        public static readonly A CollimatorRightVerticalEdge = new A(864, 0x0018, 0x1704, V.IS);
        public static readonly A CollimatorUpperHorizontalEdge = new A(865, 0x0018, 0x1706, V.IS);
        public static readonly A CollimatorLowerHorizontalEdge = new A(866, 0x0018, 0x1708, V.IS);
        public static readonly A CenterOfCircularCollimator = new A(867, 0x0018, 0x1710, V.IS);
        public static readonly A RadiusOfCircularCollimator = new A(868, 0x0018, 0x1712, V.IS);
        public static readonly A VerticesOfThePolygonalCollimator = new A(869, 0x0018, 0x1720, V.IS);
        public static readonly A AcquisitionTimeSynchronized = new A(870, 0x0018, 0x1800, V.CS);
        public static readonly A TimeSource = new A(871, 0x0018, 0x1801, V.SH);
        public static readonly A TimeDistributionProtocol = new A(872, 0x0018, 0x1802, V.CS);
        public static readonly A NTPSourceAddress = new A(873, 0x0018, 0x1803, V.LO);
        public static readonly A PageNumberVector = new A(874, 0x0018, 0x2001, V.IS);
        public static readonly A FrameLabelVector = new A(875, 0x0018, 0x2002, V.SH);
        public static readonly A FramePrimaryAngleVector = new A(876, 0x0018, 0x2003, V.DS);
        public static readonly A FrameSecondaryAngleVector = new A(877, 0x0018, 0x2004, V.DS);
        public static readonly A SliceLocationVector = new A(878, 0x0018, 0x2005, V.DS);
        public static readonly A DisplayWindowLabelVector = new A(879, 0x0018, 0x2006, V.SH);
        public static readonly A NominalScannedPixelSpacing = new A(880, 0x0018, 0x2010, V.DS);
        public static readonly A DigitizingDeviceTransportDirection = new A(881, 0x0018, 0x2020, V.CS);
        public static readonly A RotationOfScannedFilm = new A(882, 0x0018, 0x2030, V.DS);
        public static readonly A BiopsyTargetSequence = new A(883, 0x0018, 0x2041, V.SQ);
        public static readonly A TargetUID = new A(884, 0x0018, 0x2042, V.UI);
        public static readonly A LocalizingCursorPosition = new A(885, 0x0018, 0x2043, V.FL);
        public static readonly A CalculatedTargetPosition = new A(886, 0x0018, 0x2044, V.FL);
        public static readonly A TargetLabel = new A(887, 0x0018, 0x2045, V.SH);
        public static readonly A DisplayedZValue = new A(888, 0x0018, 0x2046, V.FL);
        public static readonly A IVUSAcquisition = new A(889, 0x0018, 0x3100, V.CS);
        public static readonly A IVUSPullbackRate = new A(890, 0x0018, 0x3101, V.DS);
        public static readonly A IVUSGatedRate = new A(891, 0x0018, 0x3102, V.DS);
        public static readonly A IVUSPullbackStartFrameNumber = new A(892, 0x0018, 0x3103, V.IS);
        public static readonly A IVUSPullbackStopFrameNumber = new A(893, 0x0018, 0x3104, V.IS);
        public static readonly A LesionNumber = new A(894, 0x0018, 0x3105, V.IS);
        public static readonly A OutputPower = new A(895, 0x0018, 0x5000, V.SH);
        public static readonly A TransducerData = new A(896, 0x0018, 0x5010, V.LO);
        public static readonly A FocusDepth = new A(897, 0x0018, 0x5012, V.DS);
        public static readonly A ProcessingFunction = new A(898, 0x0018, 0x5020, V.LO);
        public static readonly A MechanicalIndex = new A(899, 0x0018, 0x5022, V.DS);
        public static readonly A BoneThermalIndex = new A(900, 0x0018, 0x5024, V.DS);
        public static readonly A CranialThermalIndex = new A(901, 0x0018, 0x5026, V.DS);
        public static readonly A SoftTissueThermalIndex = new A(902, 0x0018, 0x5027, V.DS);
        public static readonly A SoftTissueFocusThermalIndex = new A(903, 0x0018, 0x5028, V.DS);
        public static readonly A SoftTissueSurfaceThermalIndex = new A(904, 0x0018, 0x5029, V.DS);
        public static readonly A DepthOfScanField = new A(905, 0x0018, 0x5050, V.IS);
        public static readonly A PatientPosition = new A(906, 0x0018, 0x5100, V.CS);
        public static readonly A ViewPosition = new A(907, 0x0018, 0x5101, V.CS);
        public static readonly A ProjectionEponymousNameCodeSequence = new A(908, 0x0018, 0x5104, V.SQ);
        public static readonly A Sensitivity = new A(909, 0x0018, 0x6000, V.DS);
        public static readonly A SequenceOfUltrasoundRegions = new A(910, 0x0018, 0x6011, V.SQ);
        public static readonly A RegionSpatialFormat = new A(911, 0x0018, 0x6012, V.US);
        public static readonly A RegionDataType = new A(912, 0x0018, 0x6014, V.US);
        public static readonly A RegionFlags = new A(913, 0x0018, 0x6016, V.UL);
        public static readonly A RegionLocationMinX0 = new A(914, 0x0018, 0x6018, V.UL);
        public static readonly A RegionLocationMinY0 = new A(915, 0x0018, 0x601A, V.UL);
        public static readonly A RegionLocationMaxX1 = new A(916, 0x0018, 0x601C, V.UL);
        public static readonly A RegionLocationMaxY1 = new A(917, 0x0018, 0x601E, V.UL);
        public static readonly A ReferencePixelX0 = new A(918, 0x0018, 0x6020, V.SL);
        public static readonly A ReferencePixelY0 = new A(919, 0x0018, 0x6022, V.SL);
        public static readonly A PhysicalUnitsXDirection = new A(920, 0x0018, 0x6024, V.US);
        public static readonly A PhysicalUnitsYDirection = new A(921, 0x0018, 0x6026, V.US);
        public static readonly A ReferencePixelPhysicalValueX = new A(922, 0x0018, 0x6028, V.FD);
        public static readonly A ReferencePixelPhysicalValueY = new A(923, 0x0018, 0x602A, V.FD);
        public static readonly A PhysicalDeltaX = new A(924, 0x0018, 0x602C, V.FD);
        public static readonly A PhysicalDeltaY = new A(925, 0x0018, 0x602E, V.FD);
        public static readonly A TransducerFrequency = new A(926, 0x0018, 0x6030, V.UL);
        public static readonly A TransducerType = new A(927, 0x0018, 0x6031, V.CS);
        public static readonly A PulseRepetitionFrequency = new A(928, 0x0018, 0x6032, V.UL);
        public static readonly A DopplerCorrectionAngle = new A(929, 0x0018, 0x6034, V.FD);
        public static readonly A SteeringAngle = new A(930, 0x0018, 0x6036, V.FD);
        public static readonly A DopplerSampleVolumeXPosition = new A(931, 0x0018, 0x6039, V.SL);
        public static readonly A DopplerSampleVolumeYPosition = new A(932, 0x0018, 0x603B, V.SL);
        public static readonly A TMLinePositionX0 = new A(933, 0x0018, 0x603D, V.SL);
        public static readonly A TMLinePositionY0 = new A(934, 0x0018, 0x603F, V.SL);
        public static readonly A TMLinePositionX1 = new A(935, 0x0018, 0x6041, V.SL);
        public static readonly A TMLinePositionY1 = new A(936, 0x0018, 0x6043, V.SL);
        public static readonly A PixelComponentOrganization = new A(937, 0x0018, 0x6044, V.US);
        public static readonly A PixelComponentMask = new A(938, 0x0018, 0x6046, V.UL);
        public static readonly A PixelComponentRangeStart = new A(939, 0x0018, 0x6048, V.UL);
        public static readonly A PixelComponentRangeStop = new A(940, 0x0018, 0x604A, V.UL);
        public static readonly A PixelComponentPhysicalUnits = new A(941, 0x0018, 0x604C, V.US);
        public static readonly A PixelComponentDataType = new A(942, 0x0018, 0x604E, V.US);
        public static readonly A NumberOfTableBreakPoints = new A(943, 0x0018, 0x6050, V.UL);
        public static readonly A TableOfXBreakPoints = new A(944, 0x0018, 0x6052, V.UL);
        public static readonly A TableOfYBreakPoints = new A(945, 0x0018, 0x6054, V.FD);
        public static readonly A NumberOfTableEntries = new A(946, 0x0018, 0x6056, V.UL);
        public static readonly A TableOfPixelValues = new A(947, 0x0018, 0x6058, V.UL);
        public static readonly A TableOfParameterValues = new A(948, 0x0018, 0x605A, V.FL);
        public static readonly A RWaveTimeVector = new A(949, 0x0018, 0x6060, V.FL);
        public static readonly A DetectorConditionsNominalFlag = new A(950, 0x0018, 0x7000, V.CS);
        public static readonly A DetectorTemperature = new A(951, 0x0018, 0x7001, V.DS);
        public static readonly A DetectorType = new A(952, 0x0018, 0x7004, V.CS);
        public static readonly A DetectorConfiguration = new A(953, 0x0018, 0x7005, V.CS);
        public static readonly A DetectorDescription = new A(954, 0x0018, 0x7006, V.LT);
        public static readonly A DetectorMode = new A(955, 0x0018, 0x7008, V.LT);
        public static readonly A DetectorID = new A(956, 0x0018, 0x700A, V.SH);
        public static readonly A DateOfLastDetectorCalibration = new A(957, 0x0018, 0x700C, V.DA);
        public static readonly A TimeOfLastDetectorCalibration = new A(958, 0x0018, 0x700E, V.TM);
        public static readonly A ExposuresOnDetectorSinceLastCalibration = new A(959, 0x0018, 0x7010, V.IS);
        public static readonly A ExposuresOnDetectorSinceManufactured = new A(960, 0x0018, 0x7011, V.IS);
        public static readonly A DetectorTimeSinceLastExposure = new A(961, 0x0018, 0x7012, V.DS);
        public static readonly A DetectorActiveTime = new A(962, 0x0018, 0x7014, V.DS);
        public static readonly A DetectorActivationOffsetFromExposure = new A(963, 0x0018, 0x7016, V.DS);
        public static readonly A DetectorBinning = new A(964, 0x0018, 0x701A, V.DS);
        public static readonly A DetectorElementPhysicalSize = new A(965, 0x0018, 0x7020, V.DS);
        public static readonly A DetectorElementSpacing = new A(966, 0x0018, 0x7022, V.DS);
        public static readonly A DetectorActiveShape = new A(967, 0x0018, 0x7024, V.CS);
        public static readonly A DetectorActiveDimensions = new A(968, 0x0018, 0x7026, V.DS);
        public static readonly A DetectorActiveOrigin = new A(969, 0x0018, 0x7028, V.DS);
        public static readonly A DetectorManufacturerName = new A(970, 0x0018, 0x702A, V.LO);
        public static readonly A DetectorManufacturerModelName = new A(971, 0x0018, 0x702B, V.LO);
        public static readonly A FieldOfViewOrigin = new A(972, 0x0018, 0x7030, V.DS);
        public static readonly A FieldOfViewRotation = new A(973, 0x0018, 0x7032, V.DS);
        public static readonly A FieldOfViewHorizontalFlip = new A(974, 0x0018, 0x7034, V.CS);
        public static readonly A PixelDataAreaOriginRelativeToFOV = new A(975, 0x0018, 0x7036, V.FL);
        public static readonly A PixelDataAreaRotationAngleRelativeToFOV = new A(976, 0x0018, 0x7038, V.FL);
        public static readonly A GridAbsorbingMaterial = new A(977, 0x0018, 0x7040, V.LT);
        public static readonly A GridSpacingMaterial = new A(978, 0x0018, 0x7041, V.LT);
        public static readonly A GridThickness = new A(979, 0x0018, 0x7042, V.DS);
        public static readonly A GridPitch = new A(980, 0x0018, 0x7044, V.DS);
        public static readonly A GridAspectRatio = new A(981, 0x0018, 0x7046, V.IS);
        public static readonly A GridPeriod = new A(982, 0x0018, 0x7048, V.DS);
        public static readonly A GridFocalDistance = new A(983, 0x0018, 0x704C, V.DS);
        public static readonly A FilterMaterial = new A(984, 0x0018, 0x7050, V.CS);
        public static readonly A FilterThicknessMinimum = new A(985, 0x0018, 0x7052, V.DS);
        public static readonly A FilterThicknessMaximum = new A(986, 0x0018, 0x7054, V.DS);
        public static readonly A FilterBeamPathLengthMinimum = new A(987, 0x0018, 0x7056, V.FL);
        public static readonly A FilterBeamPathLengthMaximum = new A(988, 0x0018, 0x7058, V.FL);
        public static readonly A ExposureControlMode = new A(989, 0x0018, 0x7060, V.CS);
        public static readonly A ExposureControlModeDescription = new A(990, 0x0018, 0x7062, V.LT);
        public static readonly A ExposureStatus = new A(991, 0x0018, 0x7064, V.CS);
        public static readonly A PhototimerSetting = new A(992, 0x0018, 0x7065, V.DS);
        public static readonly A ExposureTimeInuS = new A(993, 0x0018, 0x8150, V.DS);
        public static readonly A XRayTubeCurrentInuA = new A(994, 0x0018, 0x8151, V.DS);
        public static readonly A ContentQualification = new A(995, 0x0018, 0x9004, V.CS);
        public static readonly A PulseSequenceName = new A(996, 0x0018, 0x9005, V.SH);
        public static readonly A MRImagingModifierSequence = new A(997, 0x0018, 0x9006, V.SQ);
        public static readonly A EchoPulseSequence = new A(998, 0x0018, 0x9008, V.CS);
        public static readonly A InversionRecovery = new A(999, 0x0018, 0x9009, V.CS);
        public static readonly A FlowCompensation = new A(1000, 0x0018, 0x9010, V.CS);
        public static readonly A MultipleSpinEcho = new A(1001, 0x0018, 0x9011, V.CS);
        public static readonly A MultiPlanarExcitation = new A(1002, 0x0018, 0x9012, V.CS);
        public static readonly A PhaseContrast = new A(1003, 0x0018, 0x9014, V.CS);
        public static readonly A TimeOfFlightContrast = new A(1004, 0x0018, 0x9015, V.CS);
        public static readonly A Spoiling = new A(1005, 0x0018, 0x9016, V.CS);
        public static readonly A SteadyStatePulseSequence = new A(1006, 0x0018, 0x9017, V.CS);
        public static readonly A EchoPlanarPulseSequence = new A(1007, 0x0018, 0x9018, V.CS);
        public static readonly A TagAngleFirstAxis = new A(1008, 0x0018, 0x9019, V.FD);
        public static readonly A MagnetizationTransfer = new A(1009, 0x0018, 0x9020, V.CS);
        public static readonly A T2Preparation = new A(1010, 0x0018, 0x9021, V.CS);
        public static readonly A BloodSignalNulling = new A(1011, 0x0018, 0x9022, V.CS);
        public static readonly A SaturationRecovery = new A(1012, 0x0018, 0x9024, V.CS);
        public static readonly A SpectrallySelectedSuppression = new A(1013, 0x0018, 0x9025, V.CS);
        public static readonly A SpectrallySelectedExcitation = new A(1014, 0x0018, 0x9026, V.CS);
        public static readonly A SpatialPresaturation = new A(1015, 0x0018, 0x9027, V.CS);
        public static readonly A Tagging = new A(1016, 0x0018, 0x9028, V.CS);
        public static readonly A OversamplingPhase = new A(1017, 0x0018, 0x9029, V.CS);
        public static readonly A TagSpacingFirstDimension = new A(1018, 0x0018, 0x9030, V.FD);
        public static readonly A GeometryOfKSpaceTraversal = new A(1019, 0x0018, 0x9032, V.CS);
        public static readonly A SegmentedKSpaceTraversal = new A(1020, 0x0018, 0x9033, V.CS);
        public static readonly A RectilinearPhaseEncodeReordering = new A(1021, 0x0018, 0x9034, V.CS);
        public static readonly A TagThickness = new A(1022, 0x0018, 0x9035, V.FD);
        public static readonly A PartialFourierDirection = new A(1023, 0x0018, 0x9036, V.CS);
        public static readonly A CardiacSynchronizationTechnique = new A(1024, 0x0018, 0x9037, V.CS);
        public static readonly A ReceiveCoilManufacturerName = new A(1025, 0x0018, 0x9041, V.LO);
        public static readonly A MRReceiveCoilSequence = new A(1026, 0x0018, 0x9042, V.SQ);
        public static readonly A ReceiveCoilType = new A(1027, 0x0018, 0x9043, V.CS);
        public static readonly A QuadratureReceiveCoil = new A(1028, 0x0018, 0x9044, V.CS);
        public static readonly A MultiCoilDefinitionSequence = new A(1029, 0x0018, 0x9045, V.SQ);
        public static readonly A MultiCoilConfiguration = new A(1030, 0x0018, 0x9046, V.LO);
        public static readonly A MultiCoilElementName = new A(1031, 0x0018, 0x9047, V.SH);
        public static readonly A MultiCoilElementUsed = new A(1032, 0x0018, 0x9048, V.CS);
        public static readonly A MRTransmitCoilSequence = new A(1033, 0x0018, 0x9049, V.SQ);
        public static readonly A TransmitCoilManufacturerName = new A(1034, 0x0018, 0x9050, V.LO);
        public static readonly A TransmitCoilType = new A(1035, 0x0018, 0x9051, V.CS);
        public static readonly A SpectralWidth = new A(1036, 0x0018, 0x9052, V.FD);
        public static readonly A ChemicalShiftReference = new A(1037, 0x0018, 0x9053, V.FD);
        public static readonly A VolumeLocalizationTechnique = new A(1038, 0x0018, 0x9054, V.CS);
        public static readonly A MRAcquisitionFrequencyEncodingSteps = new A(1039, 0x0018, 0x9058, V.US);
        public static readonly A Decoupling = new A(1040, 0x0018, 0x9059, V.CS);
        public static readonly A DecoupledNucleus = new A(1041, 0x0018, 0x9060, V.CS);
        public static readonly A DecouplingFrequency = new A(1042, 0x0018, 0x9061, V.FD);
        public static readonly A DecouplingMethod = new A(1043, 0x0018, 0x9062, V.CS);
        public static readonly A DecouplingChemicalShiftReference = new A(1044, 0x0018, 0x9063, V.FD);
        public static readonly A KSpaceFiltering = new A(1045, 0x0018, 0x9064, V.CS);
        public static readonly A TimeDomainFiltering = new A(1046, 0x0018, 0x9065, V.CS);
        public static readonly A NumberOfZeroFills = new A(1047, 0x0018, 0x9066, V.US);
        public static readonly A BaselineCorrection = new A(1048, 0x0018, 0x9067, V.CS);
        public static readonly A ParallelReductionFactorInPlane = new A(1049, 0x0018, 0x9069, V.FD);
        public static readonly A CardiacRRIntervalSpecified = new A(1050, 0x0018, 0x9070, V.FD);
        public static readonly A AcquisitionDuration = new A(1051, 0x0018, 0x9073, V.FD);
        public static readonly A FrameAcquisitionDateTime = new A(1052, 0x0018, 0x9074, V.DT);
        public static readonly A DiffusionDirectionality = new A(1053, 0x0018, 0x9075, V.CS);
        public static readonly A DiffusionGradientDirectionSequence = new A(1054, 0x0018, 0x9076, V.SQ);
        public static readonly A ParallelAcquisition = new A(1055, 0x0018, 0x9077, V.CS);
        public static readonly A ParallelAcquisitionTechnique = new A(1056, 0x0018, 0x9078, V.CS);
        public static readonly A InversionTimes = new A(1057, 0x0018, 0x9079, V.FD);
        public static readonly A MetaboliteMapDescription = new A(1058, 0x0018, 0x9080, V.ST);
        public static readonly A PartialFourier = new A(1059, 0x0018, 0x9081, V.CS);
        public static readonly A EffectiveEchoTime = new A(1060, 0x0018, 0x9082, V.FD);
        public static readonly A MetaboliteMapCodeSequence = new A(1061, 0x0018, 0x9083, V.SQ);
        public static readonly A ChemicalShiftSequence = new A(1062, 0x0018, 0x9084, V.SQ);
        public static readonly A CardiacSignalSource = new A(1063, 0x0018, 0x9085, V.CS);
        public static readonly A DiffusionBValue = new A(1064, 0x0018, 0x9087, V.FD);
        public static readonly A DiffusionGradientOrientation = new A(1065, 0x0018, 0x9089, V.FD);
        public static readonly A VelocityEncodingDirection = new A(1066, 0x0018, 0x9090, V.FD);
        public static readonly A VelocityEncodingMinimumValue = new A(1067, 0x0018, 0x9091, V.FD);
        public static readonly A VelocityEncodingAcquisitionSequence = new A(1068, 0x0018, 0x9092, V.SQ);
        public static readonly A NumberOfKSpaceTrajectories = new A(1069, 0x0018, 0x9093, V.US);
        public static readonly A CoverageOfKSpace = new A(1070, 0x0018, 0x9094, V.CS);
        public static readonly A SpectroscopyAcquisitionPhaseRows = new A(1071, 0x0018, 0x9095, V.UL);
        public static readonly A TransmitterFrequency = new A(1072, 0x0018, 0x9098, V.FD);
        public static readonly A ResonantNucleus = new A(1073, 0x0018, 0x9100, V.CS);
        public static readonly A FrequencyCorrection = new A(1074, 0x0018, 0x9101, V.CS);
        public static readonly A MRSpectroscopyFOVGeometrySequence = new A(1075, 0x0018, 0x9103, V.SQ);
        public static readonly A SlabThickness = new A(1076, 0x0018, 0x9104, V.FD);
        public static readonly A SlabOrientation = new A(1077, 0x0018, 0x9105, V.FD);
        public static readonly A MidSlabPosition = new A(1078, 0x0018, 0x9106, V.FD);
        public static readonly A MRSpatialSaturationSequence = new A(1079, 0x0018, 0x9107, V.SQ);
        public static readonly A MRTimingAndRelatedParametersSequence = new A(1080, 0x0018, 0x9112, V.SQ);
        public static readonly A MREchoSequence = new A(1081, 0x0018, 0x9114, V.SQ);
        public static readonly A MRModifierSequence = new A(1082, 0x0018, 0x9115, V.SQ);
        public static readonly A MRDiffusionSequence = new A(1083, 0x0018, 0x9117, V.SQ);
        public static readonly A CardiacSynchronizationSequence = new A(1084, 0x0018, 0x9118, V.SQ);
        public static readonly A MRAveragesSequence = new A(1085, 0x0018, 0x9119, V.SQ);
        public static readonly A MRFOVGeometrySequence = new A(1086, 0x0018, 0x9125, V.SQ);
        public static readonly A VolumeLocalizationSequence = new A(1087, 0x0018, 0x9126, V.SQ);
        public static readonly A SpectroscopyAcquisitionDataColumns = new A(1088, 0x0018, 0x9127, V.UL);
        public static readonly A DiffusionAnisotropyType = new A(1089, 0x0018, 0x9147, V.CS);
        public static readonly A FrameReferenceDateTime = new A(1090, 0x0018, 0x9151, V.DT);
        public static readonly A MRMetaboliteMapSequence = new A(1091, 0x0018, 0x9152, V.SQ);
        public static readonly A ParallelReductionFactorOutOfPlane = new A(1092, 0x0018, 0x9155, V.FD);
        public static readonly A SpectroscopyAcquisitionOutOfPlanePhaseSteps = new A(1093, 0x0018, 0x9159, V.UL);
        public static readonly A ParallelReductionFactorSecondInPlane = new A(1094, 0x0018, 0x9168, V.FD);
        public static readonly A CardiacBeatRejectionTechnique = new A(1095, 0x0018, 0x9169, V.CS);
        public static readonly A RespiratoryMotionCompensationTechnique = new A(1096, 0x0018, 0x9170, V.CS);
        public static readonly A RespiratorySignalSource = new A(1097, 0x0018, 0x9171, V.CS);
        public static readonly A BulkMotionCompensationTechnique = new A(1098, 0x0018, 0x9172, V.CS);
        public static readonly A BulkMotionSignalSource = new A(1099, 0x0018, 0x9173, V.CS);
        public static readonly A ApplicableSafetyStandardAgency = new A(1100, 0x0018, 0x9174, V.CS);
        public static readonly A ApplicableSafetyStandardDescription = new A(1101, 0x0018, 0x9175, V.LO);
        public static readonly A OperatingModeSequence = new A(1102, 0x0018, 0x9176, V.SQ);
        public static readonly A OperatingModeType = new A(1103, 0x0018, 0x9177, V.CS);
        public static readonly A OperatingMode = new A(1104, 0x0018, 0x9178, V.CS);
        public static readonly A SpecificAbsorptionRateDefinition = new A(1105, 0x0018, 0x9179, V.CS);
        public static readonly A GradientOutputType = new A(1106, 0x0018, 0x9180, V.CS);
        public static readonly A SpecificAbsorptionRateValue = new A(1107, 0x0018, 0x9181, V.FD);
        public static readonly A GradientOutput = new A(1108, 0x0018, 0x9182, V.FD);
        public static readonly A FlowCompensationDirection = new A(1109, 0x0018, 0x9183, V.CS);
        public static readonly A TaggingDelay = new A(1110, 0x0018, 0x9184, V.FD);
        public static readonly A RespiratoryMotionCompensationTechniqueDescription = new A(1111, 0x0018, 0x9185, V.ST);
        public static readonly A RespiratorySignalSourceID = new A(1112, 0x0018, 0x9186, V.SH);
        public static readonly A MRVelocityEncodingSequence = new A(1113, 0x0018, 0x9197, V.SQ);
        public static readonly A FirstOrderPhaseCorrection = new A(1114, 0x0018, 0x9198, V.CS);
        public static readonly A WaterReferencedPhaseCorrection = new A(1115, 0x0018, 0x9199, V.CS);
        public static readonly A MRSpectroscopyAcquisitionType = new A(1116, 0x0018, 0x9200, V.CS);
        public static readonly A RespiratoryCyclePosition = new A(1117, 0x0018, 0x9214, V.CS);
        public static readonly A VelocityEncodingMaximumValue = new A(1118, 0x0018, 0x9217, V.FD);
        public static readonly A TagSpacingSecondDimension = new A(1119, 0x0018, 0x9218, V.FD);
        public static readonly A TagAngleSecondAxis = new A(1120, 0x0018, 0x9219, V.SS);
        public static readonly A FrameAcquisitionDuration = new A(1121, 0x0018, 0x9220, V.FD);
        public static readonly A MRImageFrameTypeSequence = new A(1122, 0x0018, 0x9226, V.SQ);
        public static readonly A MRSpectroscopyFrameTypeSequence = new A(1123, 0x0018, 0x9227, V.SQ);
        public static readonly A MRAcquisitionPhaseEncodingStepsInPlane = new A(1124, 0x0018, 0x9231, V.US);
        public static readonly A MRAcquisitionPhaseEncodingStepsOutOfPlane = new A(1125, 0x0018, 0x9232, V.US);
        public static readonly A SpectroscopyAcquisitionPhaseColumns = new A(1126, 0x0018, 0x9234, V.UL);
        public static readonly A CardiacCyclePosition = new A(1127, 0x0018, 0x9236, V.CS);
        public static readonly A SpecificAbsorptionRateSequence = new A(1128, 0x0018, 0x9239, V.SQ);
        public static readonly A RFEchoTrainLength = new A(1129, 0x0018, 0x9240, V.US);
        public static readonly A GradientEchoTrainLength = new A(1130, 0x0018, 0x9241, V.US);
        public static readonly A ArterialSpinLabelingContrast = new A(1131, 0x0018, 0x9250, V.CS);
        public static readonly A MRArterialSpinLabelingSequence = new A(1132, 0x0018, 0x9251, V.SQ);
        public static readonly A ASLTechniqueDescription = new A(1133, 0x0018, 0x9252, V.LO);
        public static readonly A ASLSlabNumber = new A(1134, 0x0018, 0x9253, V.US);
        public static readonly A ASLSlabThickness = new A(1135, 0x0018, 0x9254, V.FD);
        public static readonly A ASLSlabOrientation = new A(1136, 0x0018, 0x9255, V.FD);
        public static readonly A ASLMidSlabPosition = new A(1137, 0x0018, 0x9256, V.FD);
        public static readonly A ASLContext = new A(1138, 0x0018, 0x9257, V.CS);
        public static readonly A ASLPulseTrainDuration = new A(1139, 0x0018, 0x9258, V.UL);
        public static readonly A ASLCrusherFlag = new A(1140, 0x0018, 0x9259, V.CS);
        public static readonly A ASLCrusherFlowLimit = new A(1141, 0x0018, 0x925A, V.FD);
        public static readonly A ASLCrusherDescription = new A(1142, 0x0018, 0x925B, V.LO);
        public static readonly A ASLBolusCutoffFlag = new A(1143, 0x0018, 0x925C, V.CS);
        public static readonly A ASLBolusCutoffTimingSequence = new A(1144, 0x0018, 0x925D, V.SQ);
        public static readonly A ASLBolusCutoffTechnique = new A(1145, 0x0018, 0x925E, V.LO);
        public static readonly A ASLBolusCutoffDelayTime = new A(1146, 0x0018, 0x925F, V.UL);
        public static readonly A ASLSlabSequence = new A(1147, 0x0018, 0x9260, V.SQ);
        public static readonly A ChemicalShiftMinimumIntegrationLimitInppm = new A(1148, 0x0018, 0x9295, V.FD);
        public static readonly A ChemicalShiftMaximumIntegrationLimitInppm = new A(1149, 0x0018, 0x9296, V.FD);
        public static readonly A WaterReferenceAcquisition = new A(1150, 0x0018, 0x9297, V.CS);
        public static readonly A EchoPeakPosition = new A(1151, 0x0018, 0x9298, V.IS);
        public static readonly A CTAcquisitionTypeSequence = new A(1152, 0x0018, 0x9301, V.SQ);
        public static readonly A AcquisitionType = new A(1153, 0x0018, 0x9302, V.CS);
        public static readonly A TubeAngle = new A(1154, 0x0018, 0x9303, V.FD);
        public static readonly A CTAcquisitionDetailsSequence = new A(1155, 0x0018, 0x9304, V.SQ);
        public static readonly A RevolutionTime = new A(1156, 0x0018, 0x9305, V.FD);
        public static readonly A SingleCollimationWidth = new A(1157, 0x0018, 0x9306, V.FD);
        public static readonly A TotalCollimationWidth = new A(1158, 0x0018, 0x9307, V.FD);
        public static readonly A CTTableDynamicsSequence = new A(1159, 0x0018, 0x9308, V.SQ);
        public static readonly A TableSpeed = new A(1160, 0x0018, 0x9309, V.FD);
        public static readonly A TableFeedPerRotation = new A(1161, 0x0018, 0x9310, V.FD);
        public static readonly A SpiralPitchFactor = new A(1162, 0x0018, 0x9311, V.FD);
        public static readonly A CTGeometrySequence = new A(1163, 0x0018, 0x9312, V.SQ);
        public static readonly A DataCollectionCenterPatient = new A(1164, 0x0018, 0x9313, V.FD);
        public static readonly A CTReconstructionSequence = new A(1165, 0x0018, 0x9314, V.SQ);
        public static readonly A ReconstructionAlgorithm = new A(1166, 0x0018, 0x9315, V.CS);
        public static readonly A ConvolutionKernelGroup = new A(1167, 0x0018, 0x9316, V.CS);
        public static readonly A ReconstructionFieldOfView = new A(1168, 0x0018, 0x9317, V.FD);
        public static readonly A ReconstructionTargetCenterPatient = new A(1169, 0x0018, 0x9318, V.FD);
        public static readonly A ReconstructionAngle = new A(1170, 0x0018, 0x9319, V.FD);
        public static readonly A ImageFilter = new A(1171, 0x0018, 0x9320, V.SH);
        public static readonly A CTExposureSequence = new A(1172, 0x0018, 0x9321, V.SQ);
        public static readonly A ReconstructionPixelSpacing = new A(1173, 0x0018, 0x9322, V.FD);
        public static readonly A ExposureModulationType = new A(1174, 0x0018, 0x9323, V.CS);
        public static readonly A EstimatedDoseSaving = new A(1175, 0x0018, 0x9324, V.FD);
        public static readonly A CTXRayDetailsSequence = new A(1176, 0x0018, 0x9325, V.SQ);
        public static readonly A CTPositionSequence = new A(1177, 0x0018, 0x9326, V.SQ);
        public static readonly A TablePosition = new A(1178, 0x0018, 0x9327, V.FD);
        public static readonly A ExposureTimeInms = new A(1179, 0x0018, 0x9328, V.FD);
        public static readonly A CTImageFrameTypeSequence = new A(1180, 0x0018, 0x9329, V.SQ);
        public static readonly A XRayTubeCurrentInmA = new A(1181, 0x0018, 0x9330, V.FD);
        public static readonly A ExposureInmAs = new A(1182, 0x0018, 0x9332, V.FD);
        public static readonly A ConstantVolumeFlag = new A(1183, 0x0018, 0x9333, V.CS);
        public static readonly A FluoroscopyFlag = new A(1184, 0x0018, 0x9334, V.CS);
        public static readonly A DistanceSourceToDataCollectionCenter = new A(1185, 0x0018, 0x9335, V.FD);
        public static readonly A ContrastBolusAgentNumber = new A(1186, 0x0018, 0x9337, V.US);
        public static readonly A ContrastBolusIngredientCodeSequence = new A(1187, 0x0018, 0x9338, V.SQ);
        public static readonly A ContrastAdministrationProfileSequence = new A(1188, 0x0018, 0x9340, V.SQ);
        public static readonly A ContrastBolusUsageSequence = new A(1189, 0x0018, 0x9341, V.SQ);
        public static readonly A ContrastBolusAgentAdministered = new A(1190, 0x0018, 0x9342, V.CS);
        public static readonly A ContrastBolusAgentDetected = new A(1191, 0x0018, 0x9343, V.CS);
        public static readonly A ContrastBolusAgentPhase = new A(1192, 0x0018, 0x9344, V.CS);
        public static readonly A CTDIvol = new A(1193, 0x0018, 0x9345, V.FD);
        public static readonly A CTDIPhantomTypeCodeSequence = new A(1194, 0x0018, 0x9346, V.SQ);
        public static readonly A CalciumScoringMassFactorPatient = new A(1195, 0x0018, 0x9351, V.FL);
        public static readonly A CalciumScoringMassFactorDevice = new A(1196, 0x0018, 0x9352, V.FL);
        public static readonly A EnergyWeightingFactor = new A(1197, 0x0018, 0x9353, V.FL);
        public static readonly A CTAdditionalXRaySourceSequence = new A(1198, 0x0018, 0x9360, V.SQ);
        public static readonly A MultienergyCTAcquisition = new A(1199, 0x0018, 0x9361, V.CS);
        public static readonly A MultienergyCTAcquisitionSequence = new A(1200, 0x0018, 0x9362, V.SQ);
        public static readonly A MultienergyCTProcessingSequence = new A(1201, 0x0018, 0x9363, V.SQ);
        public static readonly A MultienergyCTCharacteristicsSequence = new A(1202, 0x0018, 0x9364, V.SQ);
        public static readonly A MultienergyCTXRaySourceSequence = new A(1203, 0x0018, 0x9365, V.SQ);
        public static readonly A XRaySourceIndex = new A(1204, 0x0018, 0x9366, V.US);
        public static readonly A XRaySourceID = new A(1205, 0x0018, 0x9367, V.UC);
        public static readonly A MultienergySourceTechnique = new A(1206, 0x0018, 0x9368, V.CS);
        public static readonly A SourceStartDateTime = new A(1207, 0x0018, 0x9369, V.DT);
        public static readonly A SourceEndDateTime = new A(1208, 0x0018, 0x936A, V.DT);
        public static readonly A SwitchingPhaseNumber = new A(1209, 0x0018, 0x936B, V.US);
        public static readonly A SwitchingPhaseNominalDuration = new A(1210, 0x0018, 0x936C, V.DS);
        public static readonly A SwitchingPhaseTransitionDuration = new A(1211, 0x0018, 0x936D, V.DS);
        public static readonly A EffectiveBinEnergy = new A(1212, 0x0018, 0x936E, V.DS);
        public static readonly A MultienergyCTXRayDetectorSequence = new A(1213, 0x0018, 0x936F, V.SQ);
        public static readonly A XRayDetectorIndex = new A(1214, 0x0018, 0x9370, V.US);
        public static readonly A XRayDetectorID = new A(1215, 0x0018, 0x9371, V.UC);
        public static readonly A MultienergyDetectorType = new A(1216, 0x0018, 0x9372, V.CS);
        public static readonly A XRayDetectorLabel = new A(1217, 0x0018, 0x9373, V.ST);
        public static readonly A NominalMaxEnergy = new A(1218, 0x0018, 0x9374, V.DS);
        public static readonly A NominalMinEnergy = new A(1219, 0x0018, 0x9375, V.DS);
        public static readonly A ReferencedXRayDetectorIndex = new A(1220, 0x0018, 0x9376, V.US);
        public static readonly A ReferencedXRaySourceIndex = new A(1221, 0x0018, 0x9377, V.US);
        public static readonly A ReferencedPathIndex = new A(1222, 0x0018, 0x9378, V.US);
        public static readonly A MultienergyCTPathSequence = new A(1223, 0x0018, 0x9379, V.SQ);
        public static readonly A MultienergyCTPathIndex = new A(1224, 0x0018, 0x937A, V.US);
        public static readonly A MultienergyAcquisitionDescription = new A(1225, 0x0018, 0x937B, V.UT);
        public static readonly A MonoenergeticEnergyEquivalent = new A(1226, 0x0018, 0x937C, V.FD);
        public static readonly A MaterialCodeSequence = new A(1227, 0x0018, 0x937D, V.SQ);
        public static readonly A DecompositionMethod = new A(1228, 0x0018, 0x937E, V.CS);
        public static readonly A DecompositionDescription = new A(1229, 0x0018, 0x937F, V.UT);
        public static readonly A DecompositionAlgorithmIdentificationSequence = new A(1230, 0x0018, 0x9380, V.SQ);
        public static readonly A DecompositionMaterialSequence = new A(1231, 0x0018, 0x9381, V.SQ);
        public static readonly A MaterialAttenuationSequence = new A(1232, 0x0018, 0x9382, V.SQ);
        public static readonly A PhotonEnergy = new A(1233, 0x0018, 0x9383, V.DS);
        public static readonly A XRayMassAttenuationCoefficient = new A(1234, 0x0018, 0x9384, V.DS);
        public static readonly A ProjectionPixelCalibrationSequence = new A(1235, 0x0018, 0x9401, V.SQ);
        public static readonly A DistanceSourceToIsocenter = new A(1236, 0x0018, 0x9402, V.FL);
        public static readonly A DistanceObjectToTableTop = new A(1237, 0x0018, 0x9403, V.FL);
        public static readonly A ObjectPixelSpacingInCenterOfBeam = new A(1238, 0x0018, 0x9404, V.FL);
        public static readonly A PositionerPositionSequence = new A(1239, 0x0018, 0x9405, V.SQ);
        public static readonly A TablePositionSequence = new A(1240, 0x0018, 0x9406, V.SQ);
        public static readonly A CollimatorShapeSequence = new A(1241, 0x0018, 0x9407, V.SQ);
        public static readonly A PlanesInAcquisition = new A(1242, 0x0018, 0x9410, V.CS);
        public static readonly A XAXRFFrameCharacteristicsSequence = new A(1243, 0x0018, 0x9412, V.SQ);
        public static readonly A FrameAcquisitionSequence = new A(1244, 0x0018, 0x9417, V.SQ);
        public static readonly A XRayReceptorType = new A(1245, 0x0018, 0x9420, V.CS);
        public static readonly A AcquisitionProtocolName = new A(1246, 0x0018, 0x9423, V.LO);
        public static readonly A AcquisitionProtocolDescription = new A(1247, 0x0018, 0x9424, V.LT);
        public static readonly A ContrastBolusIngredientOpaque = new A(1248, 0x0018, 0x9425, V.CS);
        public static readonly A DistanceReceptorPlaneToDetectorHousing = new A(1249, 0x0018, 0x9426, V.FL);
        public static readonly A IntensifierActiveShape = new A(1250, 0x0018, 0x9427, V.CS);
        public static readonly A IntensifierActiveDimensions = new A(1251, 0x0018, 0x9428, V.FL);
        public static readonly A PhysicalDetectorSize = new A(1252, 0x0018, 0x9429, V.FL);
        public static readonly A PositionOfIsocenterProjection = new A(1253, 0x0018, 0x9430, V.FL);
        public static readonly A FieldOfViewSequence = new A(1254, 0x0018, 0x9432, V.SQ);
        public static readonly A FieldOfViewDescription = new A(1255, 0x0018, 0x9433, V.LO);
        public static readonly A ExposureControlSensingRegionsSequence = new A(1256, 0x0018, 0x9434, V.SQ);
        public static readonly A ExposureControlSensingRegionShape = new A(1257, 0x0018, 0x9435, V.CS);
        public static readonly A ExposureControlSensingRegionLeftVerticalEdge = new A(1258, 0x0018, 0x9436, V.SS);
        public static readonly A ExposureControlSensingRegionRightVerticalEdge = new A(1259, 0x0018, 0x9437, V.SS);
        public static readonly A ExposureControlSensingRegionUpperHorizontalEdge = new A(1260, 0x0018, 0x9438, V.SS);
        public static readonly A ExposureControlSensingRegionLowerHorizontalEdge = new A(1261, 0x0018, 0x9439, V.SS);
        public static readonly A CenterOfCircularExposureControlSensingRegion = new A(1262, 0x0018, 0x9440, V.SS);
        public static readonly A RadiusOfCircularExposureControlSensingRegion = new A(1263, 0x0018, 0x9441, V.US);
        public static readonly A VerticesOfThePolygonalExposureControlSensingRegion = new A(1264, 0x0018, 0x9442, V.SS);
        public static readonly A ColumnAngulationPatient = new A(1265, 0x0018, 0x9447, V.FL);
        public static readonly A BeamAngle = new A(1266, 0x0018, 0x9449, V.FL);
        public static readonly A FrameDetectorParametersSequence = new A(1267, 0x0018, 0x9451, V.SQ);
        public static readonly A CalculatedAnatomyThickness = new A(1268, 0x0018, 0x9452, V.FL);
        public static readonly A CalibrationSequence = new A(1269, 0x0018, 0x9455, V.SQ);
        public static readonly A ObjectThicknessSequence = new A(1270, 0x0018, 0x9456, V.SQ);
        public static readonly A PlaneIdentification = new A(1271, 0x0018, 0x9457, V.CS);
        public static readonly A FieldOfViewDimensionsInFloat = new A(1272, 0x0018, 0x9461, V.FL);
        public static readonly A IsocenterReferenceSystemSequence = new A(1273, 0x0018, 0x9462, V.SQ);
        public static readonly A PositionerIsocenterPrimaryAngle = new A(1274, 0x0018, 0x9463, V.FL);
        public static readonly A PositionerIsocenterSecondaryAngle = new A(1275, 0x0018, 0x9464, V.FL);
        public static readonly A PositionerIsocenterDetectorRotationAngle = new A(1276, 0x0018, 0x9465, V.FL);
        public static readonly A TableXPositionToIsocenter = new A(1277, 0x0018, 0x9466, V.FL);
        public static readonly A TableYPositionToIsocenter = new A(1278, 0x0018, 0x9467, V.FL);
        public static readonly A TableZPositionToIsocenter = new A(1279, 0x0018, 0x9468, V.FL);
        public static readonly A TableHorizontalRotationAngle = new A(1280, 0x0018, 0x9469, V.FL);
        public static readonly A TableHeadTiltAngle = new A(1281, 0x0018, 0x9470, V.FL);
        public static readonly A TableCradleTiltAngle = new A(1282, 0x0018, 0x9471, V.FL);
        public static readonly A FrameDisplayShutterSequence = new A(1283, 0x0018, 0x9472, V.SQ);
        public static readonly A AcquiredImageAreaDoseProduct = new A(1284, 0x0018, 0x9473, V.FL);
        public static readonly A CArmPositionerTabletopRelationship = new A(1285, 0x0018, 0x9474, V.CS);
        public static readonly A XRayGeometrySequence = new A(1286, 0x0018, 0x9476, V.SQ);
        public static readonly A IrradiationEventIdentificationSequence = new A(1287, 0x0018, 0x9477, V.SQ);
        public static readonly A XRay3DFrameTypeSequence = new A(1288, 0x0018, 0x9504, V.SQ);
        public static readonly A ContributingSourcesSequence = new A(1289, 0x0018, 0x9506, V.SQ);
        public static readonly A XRay3DAcquisitionSequence = new A(1290, 0x0018, 0x9507, V.SQ);
        public static readonly A PrimaryPositionerScanArc = new A(1291, 0x0018, 0x9508, V.FL);
        public static readonly A SecondaryPositionerScanArc = new A(1292, 0x0018, 0x9509, V.FL);
        public static readonly A PrimaryPositionerScanStartAngle = new A(1293, 0x0018, 0x9510, V.FL);
        public static readonly A SecondaryPositionerScanStartAngle = new A(1294, 0x0018, 0x9511, V.FL);
        public static readonly A PrimaryPositionerIncrement = new A(1295, 0x0018, 0x9514, V.FL);
        public static readonly A SecondaryPositionerIncrement = new A(1296, 0x0018, 0x9515, V.FL);
        public static readonly A StartAcquisitionDateTime = new A(1297, 0x0018, 0x9516, V.DT);
        public static readonly A EndAcquisitionDateTime = new A(1298, 0x0018, 0x9517, V.DT);
        public static readonly A PrimaryPositionerIncrementSign = new A(1299, 0x0018, 0x9518, V.SS);
        public static readonly A SecondaryPositionerIncrementSign = new A(1300, 0x0018, 0x9519, V.SS);
        public static readonly A ApplicationName = new A(1301, 0x0018, 0x9524, V.LO);
        public static readonly A ApplicationVersion = new A(1302, 0x0018, 0x9525, V.LO);
        public static readonly A ApplicationManufacturer = new A(1303, 0x0018, 0x9526, V.LO);
        public static readonly A AlgorithmType = new A(1304, 0x0018, 0x9527, V.CS);
        public static readonly A AlgorithmDescription = new A(1305, 0x0018, 0x9528, V.LO);
        public static readonly A XRay3DReconstructionSequence = new A(1306, 0x0018, 0x9530, V.SQ);
        public static readonly A ReconstructionDescription = new A(1307, 0x0018, 0x9531, V.LO);
        public static readonly A PerProjectionAcquisitionSequence = new A(1308, 0x0018, 0x9538, V.SQ);
        public static readonly A DetectorPositionSequence = new A(1309, 0x0018, 0x9541, V.SQ);
        public static readonly A XRayAcquisitionDoseSequence = new A(1310, 0x0018, 0x9542, V.SQ);
        public static readonly A XRaySourceIsocenterPrimaryAngle = new A(1311, 0x0018, 0x9543, V.FD);
        public static readonly A XRaySourceIsocenterSecondaryAngle = new A(1312, 0x0018, 0x9544, V.FD);
        public static readonly A BreastSupportIsocenterPrimaryAngle = new A(1313, 0x0018, 0x9545, V.FD);
        public static readonly A BreastSupportIsocenterSecondaryAngle = new A(1314, 0x0018, 0x9546, V.FD);
        public static readonly A BreastSupportXPositionToIsocenter = new A(1315, 0x0018, 0x9547, V.FD);
        public static readonly A BreastSupportYPositionToIsocenter = new A(1316, 0x0018, 0x9548, V.FD);
        public static readonly A BreastSupportZPositionToIsocenter = new A(1317, 0x0018, 0x9549, V.FD);
        public static readonly A DetectorIsocenterPrimaryAngle = new A(1318, 0x0018, 0x9550, V.FD);
        public static readonly A DetectorIsocenterSecondaryAngle = new A(1319, 0x0018, 0x9551, V.FD);
        public static readonly A DetectorXPositionToIsocenter = new A(1320, 0x0018, 0x9552, V.FD);
        public static readonly A DetectorYPositionToIsocenter = new A(1321, 0x0018, 0x9553, V.FD);
        public static readonly A DetectorZPositionToIsocenter = new A(1322, 0x0018, 0x9554, V.FD);
        public static readonly A XRayGridSequence = new A(1323, 0x0018, 0x9555, V.SQ);
        public static readonly A XRayFilterSequence = new A(1324, 0x0018, 0x9556, V.SQ);
        public static readonly A DetectorActiveAreaTLHCPosition = new A(1325, 0x0018, 0x9557, V.FD);
        public static readonly A DetectorActiveAreaOrientation = new A(1326, 0x0018, 0x9558, V.FD);
        public static readonly A PositionerPrimaryAngleDirection = new A(1327, 0x0018, 0x9559, V.CS);
        public static readonly A DiffusionBMatrixSequence = new A(1328, 0x0018, 0x9601, V.SQ);
        public static readonly A DiffusionBValueXX = new A(1329, 0x0018, 0x9602, V.FD);
        public static readonly A DiffusionBValueXY = new A(1330, 0x0018, 0x9603, V.FD);
        public static readonly A DiffusionBValueXZ = new A(1331, 0x0018, 0x9604, V.FD);
        public static readonly A DiffusionBValueYY = new A(1332, 0x0018, 0x9605, V.FD);
        public static readonly A DiffusionBValueYZ = new A(1333, 0x0018, 0x9606, V.FD);
        public static readonly A DiffusionBValueZZ = new A(1334, 0x0018, 0x9607, V.FD);
        public static readonly A FunctionalMRSequence = new A(1335, 0x0018, 0x9621, V.SQ);
        public static readonly A FunctionalSettlingPhaseFramesPresent = new A(1336, 0x0018, 0x9622, V.CS);
        public static readonly A FunctionalSyncPulse = new A(1337, 0x0018, 0x9623, V.DT);
        public static readonly A SettlingPhaseFrame = new A(1338, 0x0018, 0x9624, V.CS);
        public static readonly A DecayCorrectionDateTime = new A(1339, 0x0018, 0x9701, V.DT);
        public static readonly A StartDensityThreshold = new A(1340, 0x0018, 0x9715, V.FD);
        public static readonly A StartRelativeDensityDifferenceThreshold = new A(1341, 0x0018, 0x9716, V.FD);
        public static readonly A StartCardiacTriggerCountThreshold = new A(1342, 0x0018, 0x9717, V.FD);
        public static readonly A StartRespiratoryTriggerCountThreshold = new A(1343, 0x0018, 0x9718, V.FD);
        public static readonly A TerminationCountsThreshold = new A(1344, 0x0018, 0x9719, V.FD);
        public static readonly A TerminationDensityThreshold = new A(1345, 0x0018, 0x9720, V.FD);
        public static readonly A TerminationRelativeDensityThreshold = new A(1346, 0x0018, 0x9721, V.FD);
        public static readonly A TerminationTimeThreshold = new A(1347, 0x0018, 0x9722, V.FD);
        public static readonly A TerminationCardiacTriggerCountThreshold = new A(1348, 0x0018, 0x9723, V.FD);
        public static readonly A TerminationRespiratoryTriggerCountThreshold = new A(1349, 0x0018, 0x9724, V.FD);
        public static readonly A DetectorGeometry = new A(1350, 0x0018, 0x9725, V.CS);
        public static readonly A TransverseDetectorSeparation = new A(1351, 0x0018, 0x9726, V.FD);
        public static readonly A AxialDetectorDimension = new A(1352, 0x0018, 0x9727, V.FD);
        public static readonly A RadiopharmaceuticalAgentNumber = new A(1353, 0x0018, 0x9729, V.US);
        public static readonly A PETFrameAcquisitionSequence = new A(1354, 0x0018, 0x9732, V.SQ);
        public static readonly A PETDetectorMotionDetailsSequence = new A(1355, 0x0018, 0x9733, V.SQ);
        public static readonly A PETTableDynamicsSequence = new A(1356, 0x0018, 0x9734, V.SQ);
        public static readonly A PETPositionSequence = new A(1357, 0x0018, 0x9735, V.SQ);
        public static readonly A PETFrameCorrectionFactorsSequence = new A(1358, 0x0018, 0x9736, V.SQ);
        public static readonly A RadiopharmaceuticalUsageSequence = new A(1359, 0x0018, 0x9737, V.SQ);
        public static readonly A AttenuationCorrectionSource = new A(1360, 0x0018, 0x9738, V.CS);
        public static readonly A NumberOfIterations = new A(1361, 0x0018, 0x9739, V.US);
        public static readonly A NumberOfSubsets = new A(1362, 0x0018, 0x9740, V.US);
        public static readonly A PETReconstructionSequence = new A(1363, 0x0018, 0x9749, V.SQ);
        public static readonly A PETFrameTypeSequence = new A(1364, 0x0018, 0x9751, V.SQ);
        public static readonly A TimeOfFlightInformationUsed = new A(1365, 0x0018, 0x9755, V.CS);
        public static readonly A ReconstructionType = new A(1366, 0x0018, 0x9756, V.CS);
        public static readonly A DecayCorrected = new A(1367, 0x0018, 0x9758, V.CS);
        public static readonly A AttenuationCorrected = new A(1368, 0x0018, 0x9759, V.CS);
        public static readonly A ScatterCorrected = new A(1369, 0x0018, 0x9760, V.CS);
        public static readonly A DeadTimeCorrected = new A(1370, 0x0018, 0x9761, V.CS);
        public static readonly A GantryMotionCorrected = new A(1371, 0x0018, 0x9762, V.CS);
        public static readonly A PatientMotionCorrected = new A(1372, 0x0018, 0x9763, V.CS);
        public static readonly A CountLossNormalizationCorrected = new A(1373, 0x0018, 0x9764, V.CS);
        public static readonly A RandomsCorrected = new A(1374, 0x0018, 0x9765, V.CS);
        public static readonly A NonUniformRadialSamplingCorrected = new A(1375, 0x0018, 0x9766, V.CS);
        public static readonly A SensitivityCalibrated = new A(1376, 0x0018, 0x9767, V.CS);
        public static readonly A DetectorNormalizationCorrection = new A(1377, 0x0018, 0x9768, V.CS);
        public static readonly A IterativeReconstructionMethod = new A(1378, 0x0018, 0x9769, V.CS);
        public static readonly A AttenuationCorrectionTemporalRelationship = new A(1379, 0x0018, 0x9770, V.CS);
        public static readonly A PatientPhysiologicalStateSequence = new A(1380, 0x0018, 0x9771, V.SQ);
        public static readonly A PatientPhysiologicalStateCodeSequence = new A(1381, 0x0018, 0x9772, V.SQ);
        public static readonly A DepthsOfFocus = new A(1382, 0x0018, 0x9801, V.FD);
        public static readonly A ExcludedIntervalsSequence = new A(1383, 0x0018, 0x9803, V.SQ);
        public static readonly A ExclusionStartDateTime = new A(1384, 0x0018, 0x9804, V.DT);
        public static readonly A ExclusionDuration = new A(1385, 0x0018, 0x9805, V.FD);
        public static readonly A USImageDescriptionSequence = new A(1386, 0x0018, 0x9806, V.SQ);
        public static readonly A ImageDataTypeSequence = new A(1387, 0x0018, 0x9807, V.SQ);
        public static readonly A DataType = new A(1388, 0x0018, 0x9808, V.CS);
        public static readonly A TransducerScanPatternCodeSequence = new A(1389, 0x0018, 0x9809, V.SQ);
        public static readonly A AliasedDataType = new A(1390, 0x0018, 0x980B, V.CS);
        public static readonly A PositionMeasuringDeviceUsed = new A(1391, 0x0018, 0x980C, V.CS);
        public static readonly A TransducerGeometryCodeSequence = new A(1392, 0x0018, 0x980D, V.SQ);
        public static readonly A TransducerBeamSteeringCodeSequence = new A(1393, 0x0018, 0x980E, V.SQ);
        public static readonly A TransducerApplicationCodeSequence = new A(1394, 0x0018, 0x980F, V.SQ);
        public static readonly A ZeroVelocityPixelValue = new A(1395, 0x0018, 0x9810, V.US, V.SS);
        public static readonly A ReferenceLocationLabel = new A(1396, 0x0018, 0x9900, V.LO);
        public static readonly A ReferenceLocationDescription = new A(1397, 0x0018, 0x9901, V.UT);
        public static readonly A ReferenceBasisCodeSequence = new A(1398, 0x0018, 0x9902, V.SQ);
        public static readonly A ReferenceGeometryCodeSequence = new A(1399, 0x0018, 0x9903, V.SQ);
        public static readonly A OffsetDistance = new A(1400, 0x0018, 0x9904, V.DS);
        public static readonly A OffsetDirection = new A(1401, 0x0018, 0x9905, V.CS);
        public static readonly A PotentialScheduledProtocolCodeSequence = new A(1402, 0x0018, 0x9906, V.SQ);
        public static readonly A PotentialRequestedProcedureCodeSequence = new A(1403, 0x0018, 0x9907, V.SQ);
        public static readonly A PotentialReasonsForProcedure = new A(1404, 0x0018, 0x9908, V.UC);
        public static readonly A PotentialReasonsForProcedureCodeSequence = new A(1405, 0x0018, 0x9909, V.SQ);
        public static readonly A PotentialDiagnosticTasks = new A(1406, 0x0018, 0x990A, V.UC);
        public static readonly A ContraindicationsCodeSequence = new A(1407, 0x0018, 0x990B, V.SQ);
        public static readonly A ReferencedDefinedProtocolSequence = new A(1408, 0x0018, 0x990C, V.SQ);
        public static readonly A ReferencedPerformedProtocolSequence = new A(1409, 0x0018, 0x990D, V.SQ);
        public static readonly A PredecessorProtocolSequence = new A(1410, 0x0018, 0x990E, V.SQ);
        public static readonly A ProtocolPlanningInformation = new A(1411, 0x0018, 0x990F, V.UT);
        public static readonly A ProtocolDesignRationale = new A(1412, 0x0018, 0x9910, V.UT);
        public static readonly A PatientSpecificationSequence = new A(1413, 0x0018, 0x9911, V.SQ);
        public static readonly A ModelSpecificationSequence = new A(1414, 0x0018, 0x9912, V.SQ);
        public static readonly A ParametersSpecificationSequence = new A(1415, 0x0018, 0x9913, V.SQ);
        public static readonly A InstructionSequence = new A(1416, 0x0018, 0x9914, V.SQ);
        public static readonly A InstructionIndex = new A(1417, 0x0018, 0x9915, V.US);
        public static readonly A InstructionText = new A(1418, 0x0018, 0x9916, V.LO);
        public static readonly A InstructionDescription = new A(1419, 0x0018, 0x9917, V.UT);
        public static readonly A InstructionPerformedFlag = new A(1420, 0x0018, 0x9918, V.CS);
        public static readonly A InstructionPerformedDateTime = new A(1421, 0x0018, 0x9919, V.DT);
        public static readonly A InstructionPerformanceComment = new A(1422, 0x0018, 0x991A, V.UT);
        public static readonly A PatientPositioningInstructionSequence = new A(1423, 0x0018, 0x991B, V.SQ);
        public static readonly A PositioningMethodCodeSequence = new A(1424, 0x0018, 0x991C, V.SQ);
        public static readonly A PositioningLandmarkSequence = new A(1425, 0x0018, 0x991D, V.SQ);
        public static readonly A TargetFrameOfReferenceUID = new A(1426, 0x0018, 0x991E, V.UI);
        public static readonly A AcquisitionProtocolElementSpecificationSequence = new A(1427, 0x0018, 0x991F, V.SQ);
        public static readonly A AcquisitionProtocolElementSequence = new A(1428, 0x0018, 0x9920, V.SQ);
        public static readonly A ProtocolElementNumber = new A(1429, 0x0018, 0x9921, V.US);
        public static readonly A ProtocolElementName = new A(1430, 0x0018, 0x9922, V.LO);
        public static readonly A ProtocolElementCharacteristicsSummary = new A(1431, 0x0018, 0x9923, V.UT);
        public static readonly A ProtocolElementPurpose = new A(1432, 0x0018, 0x9924, V.UT);
        public static readonly A AcquisitionMotion = new A(1433, 0x0018, 0x9930, V.CS);
        public static readonly A AcquisitionStartLocationSequence = new A(1434, 0x0018, 0x9931, V.SQ);
        public static readonly A AcquisitionEndLocationSequence = new A(1435, 0x0018, 0x9932, V.SQ);
        public static readonly A ReconstructionProtocolElementSpecificationSequence = new A(1436, 0x0018, 0x9933, V.SQ);
        public static readonly A ReconstructionProtocolElementSequence = new A(1437, 0x0018, 0x9934, V.SQ);
        public static readonly A StorageProtocolElementSpecificationSequence = new A(1438, 0x0018, 0x9935, V.SQ);
        public static readonly A StorageProtocolElementSequence = new A(1439, 0x0018, 0x9936, V.SQ);
        public static readonly A RequestedSeriesDescription = new A(1440, 0x0018, 0x9937, V.LO);
        public static readonly A SourceAcquisitionProtocolElementNumber = new A(1441, 0x0018, 0x9938, V.US);
        public static readonly A SourceAcquisitionBeamNumber = new A(1442, 0x0018, 0x9939, V.US);
        public static readonly A SourceReconstructionProtocolElementNumber = new A(1443, 0x0018, 0x993A, V.US);
        public static readonly A ReconstructionStartLocationSequence = new A(1444, 0x0018, 0x993B, V.SQ);
        public static readonly A ReconstructionEndLocationSequence = new A(1445, 0x0018, 0x993C, V.SQ);
        public static readonly A ReconstructionAlgorithmSequence = new A(1446, 0x0018, 0x993D, V.SQ);
        public static readonly A ReconstructionTargetCenterLocationSequence = new A(1447, 0x0018, 0x993E, V.SQ);
        public static readonly A ImageFilterDescription = new A(1448, 0x0018, 0x9941, V.UT);
        public static readonly A CTDIvolNotificationTrigger = new A(1449, 0x0018, 0x9942, V.FD);
        public static readonly A DLPNotificationTrigger = new A(1450, 0x0018, 0x9943, V.FD);
        public static readonly A AutoKVPSelectionType = new A(1451, 0x0018, 0x9944, V.CS);
        public static readonly A AutoKVPUpperBound = new A(1452, 0x0018, 0x9945, V.FD);
        public static readonly A AutoKVPLowerBound = new A(1453, 0x0018, 0x9946, V.FD);
        public static readonly A ProtocolDefinedPatientPosition = new A(1454, 0x0018, 0x9947, V.CS);
        public static readonly A ContributingEquipmentSequence = new A(1455, 0x0018, 0xA001, V.SQ);
        public static readonly A ContributionDateTime = new A(1456, 0x0018, 0xA002, V.DT);
        public static readonly A ContributionDescription = new A(1457, 0x0018, 0xA003, V.ST);
        public static readonly A StudyInstanceUID = new A(1458, 0x0020, 0x000D, V.UI);
        public static readonly A SeriesInstanceUID = new A(1459, 0x0020, 0x000E, V.UI);
        public static readonly A StudyID = new A(1460, 0x0020, 0x0010, V.SH);
        public static readonly A SeriesNumber = new A(1461, 0x0020, 0x0011, V.IS);
        public static readonly A AcquisitionNumber = new A(1462, 0x0020, 0x0012, V.IS);
        public static readonly A InstanceNumber = new A(1463, 0x0020, 0x0013, V.IS);
        public static readonly A ItemNumber = new A(1464, 0x0020, 0x0019, V.IS);
        public static readonly A PatientOrientation = new A(1465, 0x0020, 0x0020, V.CS);
        public static readonly A ImagePositionPatient = new A(1466, 0x0020, 0x0032, V.DS);
        public static readonly A ImageOrientationPatient = new A(1467, 0x0020, 0x0037, V.DS);
        public static readonly A FrameOfReferenceUID = new A(1468, 0x0020, 0x0052, V.UI);
        public static readonly A Laterality = new A(1469, 0x0020, 0x0060, V.CS);
        public static readonly A ImageLaterality = new A(1470, 0x0020, 0x0062, V.CS);
        public static readonly A TemporalPositionIdentifier = new A(1471, 0x0020, 0x0100, V.IS);
        public static readonly A NumberOfTemporalPositions = new A(1472, 0x0020, 0x0105, V.IS);
        public static readonly A TemporalResolution = new A(1473, 0x0020, 0x0110, V.DS);
        public static readonly A SynchronizationFrameOfReferenceUID = new A(1474, 0x0020, 0x0200, V.UI);
        public static readonly A SOPInstanceUIDOfConcatenationSource = new A(1475, 0x0020, 0x0242, V.UI);
        public static readonly A ImagesInAcquisition = new A(1476, 0x0020, 0x1002, V.IS);
        public static readonly A TargetPositionReferenceIndicator = new A(1477, 0x0020, 0x103F, V.LO);
        public static readonly A PositionReferenceIndicator = new A(1478, 0x0020, 0x1040, V.LO);
        public static readonly A SliceLocation = new A(1479, 0x0020, 0x1041, V.DS);
        public static readonly A NumberOfPatientRelatedStudies = new A(1480, 0x0020, 0x1200, V.IS);
        public static readonly A NumberOfPatientRelatedSeries = new A(1481, 0x0020, 0x1202, V.IS);
        public static readonly A NumberOfPatientRelatedInstances = new A(1482, 0x0020, 0x1204, V.IS);
        public static readonly A NumberOfStudyRelatedSeries = new A(1483, 0x0020, 0x1206, V.IS);
        public static readonly A NumberOfStudyRelatedInstances = new A(1484, 0x0020, 0x1208, V.IS);
        public static readonly A NumberOfSeriesRelatedInstances = new A(1485, 0x0020, 0x1209, V.IS);
        public static readonly A ImageComments = new A(1486, 0x0020, 0x4000, V.LT);
        public static readonly A StackID = new A(1487, 0x0020, 0x9056, V.SH);
        public static readonly A InStackPositionNumber = new A(1488, 0x0020, 0x9057, V.UL);
        public static readonly A FrameAnatomySequence = new A(1489, 0x0020, 0x9071, V.SQ);
        public static readonly A FrameLaterality = new A(1490, 0x0020, 0x9072, V.CS);
        public static readonly A FrameContentSequence = new A(1491, 0x0020, 0x9111, V.SQ);
        public static readonly A PlanePositionSequence = new A(1492, 0x0020, 0x9113, V.SQ);
        public static readonly A PlaneOrientationSequence = new A(1493, 0x0020, 0x9116, V.SQ);
        public static readonly A TemporalPositionIndex = new A(1494, 0x0020, 0x9128, V.UL);
        public static readonly A NominalCardiacTriggerDelayTime = new A(1495, 0x0020, 0x9153, V.FD);
        public static readonly A NominalCardiacTriggerTimePriorToRPeak = new A(1496, 0x0020, 0x9154, V.FL);
        public static readonly A ActualCardiacTriggerTimePriorToRPeak = new A(1497, 0x0020, 0x9155, V.FL);
        public static readonly A FrameAcquisitionNumber = new A(1498, 0x0020, 0x9156, V.US);
        public static readonly A DimensionIndexValues = new A(1499, 0x0020, 0x9157, V.UL);
        public static readonly A FrameComments = new A(1500, 0x0020, 0x9158, V.LT);
        public static readonly A ConcatenationUID = new A(1501, 0x0020, 0x9161, V.UI);
        public static readonly A InConcatenationNumber = new A(1502, 0x0020, 0x9162, V.US);
        public static readonly A InConcatenationTotalNumber = new A(1503, 0x0020, 0x9163, V.US);
        public static readonly A DimensionOrganizationUID = new A(1504, 0x0020, 0x9164, V.UI);
        public static readonly A DimensionIndexPointer = new A(1505, 0x0020, 0x9165, V.AT);
        public static readonly A FunctionalGroupPointer = new A(1506, 0x0020, 0x9167, V.AT);
        public static readonly A UnassignedSharedConvertedAttributesSequence = new A(1507, 0x0020, 0x9170, V.SQ);
        public static readonly A UnassignedPerFrameConvertedAttributesSequence = new A(1508, 0x0020, 0x9171, V.SQ);
        public static readonly A ConversionSourceAttributesSequence = new A(1509, 0x0020, 0x9172, V.SQ);
        public static readonly A DimensionIndexPrivateCreator = new A(1510, 0x0020, 0x9213, V.LO);
        public static readonly A DimensionOrganizationSequence = new A(1511, 0x0020, 0x9221, V.SQ);
        public static readonly A DimensionIndexSequence = new A(1512, 0x0020, 0x9222, V.SQ);
        public static readonly A ConcatenationFrameOffsetNumber = new A(1513, 0x0020, 0x9228, V.UL);
        public static readonly A FunctionalGroupPrivateCreator = new A(1514, 0x0020, 0x9238, V.LO);
        public static readonly A NominalPercentageOfCardiacPhase = new A(1515, 0x0020, 0x9241, V.FL);
        public static readonly A NominalPercentageOfRespiratoryPhase = new A(1516, 0x0020, 0x9245, V.FL);
        public static readonly A StartingRespiratoryAmplitude = new A(1517, 0x0020, 0x9246, V.FL);
        public static readonly A StartingRespiratoryPhase = new A(1518, 0x0020, 0x9247, V.CS);
        public static readonly A EndingRespiratoryAmplitude = new A(1519, 0x0020, 0x9248, V.FL);
        public static readonly A EndingRespiratoryPhase = new A(1520, 0x0020, 0x9249, V.CS);
        public static readonly A RespiratoryTriggerType = new A(1521, 0x0020, 0x9250, V.CS);
        public static readonly A RRIntervalTimeNominal = new A(1522, 0x0020, 0x9251, V.FD);
        public static readonly A ActualCardiacTriggerDelayTime = new A(1523, 0x0020, 0x9252, V.FD);
        public static readonly A RespiratorySynchronizationSequence = new A(1524, 0x0020, 0x9253, V.SQ);
        public static readonly A RespiratoryIntervalTime = new A(1525, 0x0020, 0x9254, V.FD);
        public static readonly A NominalRespiratoryTriggerDelayTime = new A(1526, 0x0020, 0x9255, V.FD);
        public static readonly A RespiratoryTriggerDelayThreshold = new A(1527, 0x0020, 0x9256, V.FD);
        public static readonly A ActualRespiratoryTriggerDelayTime = new A(1528, 0x0020, 0x9257, V.FD);
        public static readonly A ImagePositionVolume = new A(1529, 0x0020, 0x9301, V.FD);
        public static readonly A ImageOrientationVolume = new A(1530, 0x0020, 0x9302, V.FD);
        public static readonly A UltrasoundAcquisitionGeometry = new A(1531, 0x0020, 0x9307, V.CS);
        public static readonly A ApexPosition = new A(1532, 0x0020, 0x9308, V.FD);
        public static readonly A VolumeToTransducerMappingMatrix = new A(1533, 0x0020, 0x9309, V.FD);
        public static readonly A VolumeToTableMappingMatrix = new A(1534, 0x0020, 0x930A, V.FD);
        public static readonly A VolumeToTransducerRelationship = new A(1535, 0x0020, 0x930B, V.CS);
        public static readonly A PatientFrameOfReferenceSource = new A(1536, 0x0020, 0x930C, V.CS);
        public static readonly A TemporalPositionTimeOffset = new A(1537, 0x0020, 0x930D, V.FD);
        public static readonly A PlanePositionVolumeSequence = new A(1538, 0x0020, 0x930E, V.SQ);
        public static readonly A PlaneOrientationVolumeSequence = new A(1539, 0x0020, 0x930F, V.SQ);
        public static readonly A TemporalPositionSequence = new A(1540, 0x0020, 0x9310, V.SQ);
        public static readonly A DimensionOrganizationType = new A(1541, 0x0020, 0x9311, V.CS);
        public static readonly A VolumeFrameOfReferenceUID = new A(1542, 0x0020, 0x9312, V.UI);
        public static readonly A TableFrameOfReferenceUID = new A(1543, 0x0020, 0x9313, V.UI);
        public static readonly A DimensionDescriptionLabel = new A(1544, 0x0020, 0x9421, V.LO);
        public static readonly A PatientOrientationInFrameSequence = new A(1545, 0x0020, 0x9450, V.SQ);
        public static readonly A FrameLabel = new A(1546, 0x0020, 0x9453, V.LO);
        public static readonly A AcquisitionIndex = new A(1547, 0x0020, 0x9518, V.US);
        public static readonly A ContributingSOPInstancesReferenceSequence = new A(1548, 0x0020, 0x9529, V.SQ);
        public static readonly A ReconstructionIndex = new A(1549, 0x0020, 0x9536, V.US);
        public static readonly A LightPathFilterPassThroughWavelength = new A(1550, 0x0022, 0x0001, V.US);
        public static readonly A LightPathFilterPassBand = new A(1551, 0x0022, 0x0002, V.US);
        public static readonly A ImagePathFilterPassThroughWavelength = new A(1552, 0x0022, 0x0003, V.US);
        public static readonly A ImagePathFilterPassBand = new A(1553, 0x0022, 0x0004, V.US);
        public static readonly A PatientEyeMovementCommanded = new A(1554, 0x0022, 0x0005, V.CS);
        public static readonly A PatientEyeMovementCommandCodeSequence = new A(1555, 0x0022, 0x0006, V.SQ);
        public static readonly A SphericalLensPower = new A(1556, 0x0022, 0x0007, V.FL);
        public static readonly A CylinderLensPower = new A(1557, 0x0022, 0x0008, V.FL);
        public static readonly A CylinderAxis = new A(1558, 0x0022, 0x0009, V.FL);
        public static readonly A EmmetropicMagnification = new A(1559, 0x0022, 0x000A, V.FL);
        public static readonly A IntraOcularPressure = new A(1560, 0x0022, 0x000B, V.FL);
        public static readonly A HorizontalFieldOfView = new A(1561, 0x0022, 0x000C, V.FL);
        public static readonly A PupilDilated = new A(1562, 0x0022, 0x000D, V.CS);
        public static readonly A DegreeOfDilation = new A(1563, 0x0022, 0x000E, V.FL);
        public static readonly A StereoBaselineAngle = new A(1564, 0x0022, 0x0010, V.FL);
        public static readonly A StereoBaselineDisplacement = new A(1565, 0x0022, 0x0011, V.FL);
        public static readonly A StereoHorizontalPixelOffset = new A(1566, 0x0022, 0x0012, V.FL);
        public static readonly A StereoVerticalPixelOffset = new A(1567, 0x0022, 0x0013, V.FL);
        public static readonly A StereoRotation = new A(1568, 0x0022, 0x0014, V.FL);
        public static readonly A AcquisitionDeviceTypeCodeSequence = new A(1569, 0x0022, 0x0015, V.SQ);
        public static readonly A IlluminationTypeCodeSequence = new A(1570, 0x0022, 0x0016, V.SQ);
        public static readonly A LightPathFilterTypeStackCodeSequence = new A(1571, 0x0022, 0x0017, V.SQ);
        public static readonly A ImagePathFilterTypeStackCodeSequence = new A(1572, 0x0022, 0x0018, V.SQ);
        public static readonly A LensesCodeSequence = new A(1573, 0x0022, 0x0019, V.SQ);
        public static readonly A ChannelDescriptionCodeSequence = new A(1574, 0x0022, 0x001A, V.SQ);
        public static readonly A RefractiveStateSequence = new A(1575, 0x0022, 0x001B, V.SQ);
        public static readonly A MydriaticAgentCodeSequence = new A(1576, 0x0022, 0x001C, V.SQ);
        public static readonly A RelativeImagePositionCodeSequence = new A(1577, 0x0022, 0x001D, V.SQ);
        public static readonly A CameraAngleOfView = new A(1578, 0x0022, 0x001E, V.FL);
        public static readonly A StereoPairsSequence = new A(1579, 0x0022, 0x0020, V.SQ);
        public static readonly A LeftImageSequence = new A(1580, 0x0022, 0x0021, V.SQ);
        public static readonly A RightImageSequence = new A(1581, 0x0022, 0x0022, V.SQ);
        public static readonly A StereoPairsPresent = new A(1582, 0x0022, 0x0028, V.CS);
        public static readonly A AxialLengthOfTheEye = new A(1583, 0x0022, 0x0030, V.FL);
        public static readonly A OphthalmicFrameLocationSequence = new A(1584, 0x0022, 0x0031, V.SQ);
        public static readonly A ReferenceCoordinates = new A(1585, 0x0022, 0x0032, V.FL);
        public static readonly A DepthSpatialResolution = new A(1586, 0x0022, 0x0035, V.FL);
        public static readonly A MaximumDepthDistortion = new A(1587, 0x0022, 0x0036, V.FL);
        public static readonly A AlongScanSpatialResolution = new A(1588, 0x0022, 0x0037, V.FL);
        public static readonly A MaximumAlongScanDistortion = new A(1589, 0x0022, 0x0038, V.FL);
        public static readonly A OphthalmicImageOrientation = new A(1590, 0x0022, 0x0039, V.CS);
        public static readonly A DepthOfTransverseImage = new A(1591, 0x0022, 0x0041, V.FL);
        public static readonly A MydriaticAgentConcentrationUnitsSequence = new A(1592, 0x0022, 0x0042, V.SQ);
        public static readonly A AcrossScanSpatialResolution = new A(1593, 0x0022, 0x0048, V.FL);
        public static readonly A MaximumAcrossScanDistortion = new A(1594, 0x0022, 0x0049, V.FL);
        public static readonly A MydriaticAgentConcentration = new A(1595, 0x0022, 0x004E, V.DS);
        public static readonly A IlluminationWaveLength = new A(1596, 0x0022, 0x0055, V.FL);
        public static readonly A IlluminationPower = new A(1597, 0x0022, 0x0056, V.FL);
        public static readonly A IlluminationBandwidth = new A(1598, 0x0022, 0x0057, V.FL);
        public static readonly A MydriaticAgentSequence = new A(1599, 0x0022, 0x0058, V.SQ);
        public static readonly A OphthalmicAxialMeasurementsRightEyeSequence = new A(1600, 0x0022, 0x1007, V.SQ);
        public static readonly A OphthalmicAxialMeasurementsLeftEyeSequence = new A(1601, 0x0022, 0x1008, V.SQ);
        public static readonly A OphthalmicAxialMeasurementsDeviceType = new A(1602, 0x0022, 0x1009, V.CS);
        public static readonly A OphthalmicAxialLengthMeasurementsType = new A(1603, 0x0022, 0x1010, V.CS);
        public static readonly A OphthalmicAxialLengthSequence = new A(1604, 0x0022, 0x1012, V.SQ);
        public static readonly A OphthalmicAxialLength = new A(1605, 0x0022, 0x1019, V.FL);
        public static readonly A LensStatusCodeSequence = new A(1606, 0x0022, 0x1024, V.SQ);
        public static readonly A VitreousStatusCodeSequence = new A(1607, 0x0022, 0x1025, V.SQ);
        public static readonly A IOLFormulaCodeSequence = new A(1608, 0x0022, 0x1028, V.SQ);
        public static readonly A IOLFormulaDetail = new A(1609, 0x0022, 0x1029, V.LO);
        public static readonly A KeratometerIndex = new A(1610, 0x0022, 0x1033, V.FL);
        public static readonly A SourceOfOphthalmicAxialLengthCodeSequence = new A(1611, 0x0022, 0x1035, V.SQ);
        public static readonly A SourceOfCornealSizeDataCodeSequence = new A(1612, 0x0022, 0x1036, V.SQ);
        public static readonly A TargetRefraction = new A(1613, 0x0022, 0x1037, V.FL);
        public static readonly A RefractiveProcedureOccurred = new A(1614, 0x0022, 0x1039, V.CS);
        public static readonly A RefractiveSurgeryTypeCodeSequence = new A(1615, 0x0022, 0x1040, V.SQ);
        public static readonly A OphthalmicUltrasoundMethodCodeSequence = new A(1616, 0x0022, 0x1044, V.SQ);
        public static readonly A SurgicallyInducedAstigmatismSequence = new A(1617, 0x0022, 0x1045, V.SQ);
        public static readonly A TypeOfOpticalCorrection = new A(1618, 0x0022, 0x1046, V.CS);
        public static readonly A ToricIOLPowerSequence = new A(1619, 0x0022, 0x1047, V.SQ);
        public static readonly A PredictedToricErrorSequence = new A(1620, 0x0022, 0x1048, V.SQ);
        public static readonly A PreSelectedForImplantation = new A(1621, 0x0022, 0x1049, V.CS);
        public static readonly A ToricIOLPowerForExactEmmetropiaSequence = new A(1622, 0x0022, 0x104A, V.SQ);
        public static readonly A ToricIOLPowerForExactTargetRefractionSequence = new A(1623, 0x0022, 0x104B, V.SQ);
        public static readonly A OphthalmicAxialLengthMeasurementsSequence = new A(1624, 0x0022, 0x1050, V.SQ);
        public static readonly A IOLPower = new A(1625, 0x0022, 0x1053, V.FL);
        public static readonly A PredictedRefractiveError = new A(1626, 0x0022, 0x1054, V.FL);
        public static readonly A OphthalmicAxialLengthVelocity = new A(1627, 0x0022, 0x1059, V.FL);
        public static readonly A LensStatusDescription = new A(1628, 0x0022, 0x1065, V.LO);
        public static readonly A VitreousStatusDescription = new A(1629, 0x0022, 0x1066, V.LO);
        public static readonly A IOLPowerSequence = new A(1630, 0x0022, 0x1090, V.SQ);
        public static readonly A LensConstantSequence = new A(1631, 0x0022, 0x1092, V.SQ);
        public static readonly A IOLManufacturer = new A(1632, 0x0022, 0x1093, V.LO);
        public static readonly A ImplantName = new A(1633, 0x0022, 0x1095, V.LO);
        public static readonly A KeratometryMeasurementTypeCodeSequence = new A(1634, 0x0022, 0x1096, V.SQ);
        public static readonly A ImplantPartNumber = new A(1635, 0x0022, 0x1097, V.LO);
        public static readonly A ReferencedOphthalmicAxialMeasurementsSequence = new A(1636, 0x0022, 0x1100, V.SQ);
        public static readonly A OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence = new A(1637, 0x0022, 0x1101, V.SQ);
        public static readonly A RefractiveErrorBeforeRefractiveSurgeryCodeSequence = new A(1638, 0x0022, 0x1103, V.SQ);
        public static readonly A IOLPowerForExactEmmetropia = new A(1639, 0x0022, 0x1121, V.FL);
        public static readonly A IOLPowerForExactTargetRefraction = new A(1640, 0x0022, 0x1122, V.FL);
        public static readonly A AnteriorChamberDepthDefinitionCodeSequence = new A(1641, 0x0022, 0x1125, V.SQ);
        public static readonly A LensThicknessSequence = new A(1642, 0x0022, 0x1127, V.SQ);
        public static readonly A AnteriorChamberDepthSequence = new A(1643, 0x0022, 0x1128, V.SQ);
        public static readonly A CalculationCommentSequence = new A(1644, 0x0022, 0x112A, V.SQ);
        public static readonly A CalculationCommentType = new A(1645, 0x0022, 0x112B, V.CS);
        public static readonly A CalculationComment = new A(1646, 0x0022, 0x112C, V.LT);
        public static readonly A LensThickness = new A(1647, 0x0022, 0x1130, V.FL);
        public static readonly A AnteriorChamberDepth = new A(1648, 0x0022, 0x1131, V.FL);
        public static readonly A SourceOfLensThicknessDataCodeSequence = new A(1649, 0x0022, 0x1132, V.SQ);
        public static readonly A SourceOfAnteriorChamberDepthDataCodeSequence = new A(1650, 0x0022, 0x1133, V.SQ);
        public static readonly A SourceOfRefractiveMeasurementsSequence = new A(1651, 0x0022, 0x1134, V.SQ);
        public static readonly A SourceOfRefractiveMeasurementsCodeSequence = new A(1652, 0x0022, 0x1135, V.SQ);
        public static readonly A OphthalmicAxialLengthMeasurementModified = new A(1653, 0x0022, 0x1140, V.CS);
        public static readonly A OphthalmicAxialLengthDataSourceCodeSequence = new A(1654, 0x0022, 0x1150, V.SQ);
        public static readonly A SignalToNoiseRatio = new A(1655, 0x0022, 0x1155, V.FL);
        public static readonly A OphthalmicAxialLengthDataSourceDescription = new A(1656, 0x0022, 0x1159, V.LO);
        public static readonly A OphthalmicAxialLengthMeasurementsTotalLengthSequence = new A(1657, 0x0022, 0x1210, V.SQ);
        public static readonly A OphthalmicAxialLengthMeasurementsSegmentalLengthSequence = new A(1658, 0x0022, 0x1211, V.SQ);
        public static readonly A OphthalmicAxialLengthMeasurementsLengthSummationSequence = new A(1659, 0x0022, 0x1212, V.SQ);
        public static readonly A UltrasoundOphthalmicAxialLengthMeasurementsSequence = new A(1660, 0x0022, 0x1220, V.SQ);
        public static readonly A OpticalOphthalmicAxialLengthMeasurementsSequence = new A(1661, 0x0022, 0x1225, V.SQ);
        public static readonly A UltrasoundSelectedOphthalmicAxialLengthSequence = new A(1662, 0x0022, 0x1230, V.SQ);
        public static readonly A OphthalmicAxialLengthSelectionMethodCodeSequence = new A(1663, 0x0022, 0x1250, V.SQ);
        public static readonly A OpticalSelectedOphthalmicAxialLengthSequence = new A(1664, 0x0022, 0x1255, V.SQ);
        public static readonly A SelectedSegmentalOphthalmicAxialLengthSequence = new A(1665, 0x0022, 0x1257, V.SQ);
        public static readonly A SelectedTotalOphthalmicAxialLengthSequence = new A(1666, 0x0022, 0x1260, V.SQ);
        public static readonly A OphthalmicAxialLengthQualityMetricSequence = new A(1667, 0x0022, 0x1262, V.SQ);
        public static readonly A IntraocularLensCalculationsRightEyeSequence = new A(1668, 0x0022, 0x1300, V.SQ);
        public static readonly A IntraocularLensCalculationsLeftEyeSequence = new A(1669, 0x0022, 0x1310, V.SQ);
        public static readonly A ReferencedOphthalmicAxialLengthMeasurementQCImageSequence = new A(1670, 0x0022, 0x1330, V.SQ);
        public static readonly A OphthalmicMappingDeviceType = new A(1671, 0x0022, 0x1415, V.CS);
        public static readonly A AcquisitionMethodCodeSequence = new A(1672, 0x0022, 0x1420, V.SQ);
        public static readonly A AcquisitionMethodAlgorithmSequence = new A(1673, 0x0022, 0x1423, V.SQ);
        public static readonly A OphthalmicThicknessMapTypeCodeSequence = new A(1674, 0x0022, 0x1436, V.SQ);
        public static readonly A OphthalmicThicknessMappingNormalsSequence = new A(1675, 0x0022, 0x1443, V.SQ);
        public static readonly A RetinalThicknessDefinitionCodeSequence = new A(1676, 0x0022, 0x1445, V.SQ);
        public static readonly A PixelValueMappingToCodedConceptSequence = new A(1677, 0x0022, 0x1450, V.SQ);
        public static readonly A MappedPixelValue = new A(1678, 0x0022, 0x1452, V.US, V.SS);
        public static readonly A PixelValueMappingExplanation = new A(1679, 0x0022, 0x1454, V.LO);
        public static readonly A OphthalmicThicknessMapQualityThresholdSequence = new A(1680, 0x0022, 0x1458, V.SQ);
        public static readonly A OphthalmicThicknessMapThresholdQualityRating = new A(1681, 0x0022, 0x1460, V.FL);
        public static readonly A AnatomicStructureReferencePoint = new A(1682, 0x0022, 0x1463, V.FL);
        public static readonly A RegistrationToLocalizerSequence = new A(1683, 0x0022, 0x1465, V.SQ);
        public static readonly A RegisteredLocalizerUnits = new A(1684, 0x0022, 0x1466, V.CS);
        public static readonly A RegisteredLocalizerTopLeftHandCorner = new A(1685, 0x0022, 0x1467, V.FL);
        public static readonly A RegisteredLocalizerBottomRightHandCorner = new A(1686, 0x0022, 0x1468, V.FL);
        public static readonly A OphthalmicThicknessMapQualityRatingSequence = new A(1687, 0x0022, 0x1470, V.SQ);
        public static readonly A RelevantOPTAttributesSequence = new A(1688, 0x0022, 0x1472, V.SQ);
        public static readonly A TransformationMethodCodeSequence = new A(1689, 0x0022, 0x1512, V.SQ);
        public static readonly A TransformationAlgorithmSequence = new A(1690, 0x0022, 0x1513, V.SQ);
        public static readonly A OphthalmicAxialLengthMethod = new A(1691, 0x0022, 0x1515, V.CS);
        public static readonly A OphthalmicFOV = new A(1692, 0x0022, 0x1517, V.FL);
        public static readonly A TwoDimensionalToThreeDimensionalMapSequence = new A(1693, 0x0022, 0x1518, V.SQ);
        public static readonly A WideFieldOphthalmicPhotographyQualityRatingSequence = new A(1694, 0x0022, 0x1525, V.SQ);
        public static readonly A WideFieldOphthalmicPhotographyQualityThresholdSequence = new A(1695, 0x0022, 0x1526, V.SQ);
        public static readonly A WideFieldOphthalmicPhotographyThresholdQualityRating = new A(1696, 0x0022, 0x1527, V.FL);
        public static readonly A XCoordinatesCenterPixelViewAngle = new A(1697, 0x0022, 0x1528, V.FL);
        public static readonly A YCoordinatesCenterPixelViewAngle = new A(1698, 0x0022, 0x1529, V.FL);
        public static readonly A NumberOfMapPoints = new A(1699, 0x0022, 0x1530, V.UL);
        public static readonly A TwoDimensionalToThreeDimensionalMapData = new A(1700, 0x0022, 0x1531, V.OF);
        public static readonly A DerivationAlgorithmSequence = new A(1701, 0x0022, 0x1612, V.SQ);
        public static readonly A OphthalmicImageTypeCodeSequence = new A(1702, 0x0022, 0x1615, V.SQ);
        public static readonly A OphthalmicImageTypeDescription = new A(1703, 0x0022, 0x1616, V.LO);
        public static readonly A ScanPatternTypeCodeSequence = new A(1704, 0x0022, 0x1618, V.SQ);
        public static readonly A ReferencedSurfaceMeshIdentificationSequence = new A(1705, 0x0022, 0x1620, V.SQ);
        public static readonly A OphthalmicVolumetricPropertiesFlag = new A(1706, 0x0022, 0x1622, V.CS);
        public static readonly A OphthalmicAnatomicReferencePointXCoordinate = new A(1707, 0x0022, 0x1624, V.FL);
        public static readonly A OphthalmicAnatomicReferencePointYCoordinate = new A(1708, 0x0022, 0x1626, V.FL);
        public static readonly A OphthalmicEnFaceImageQualityRatingSequence = new A(1709, 0x0022, 0x1628, V.SQ);
        public static readonly A QualityThreshold = new A(1710, 0x0022, 0x1630, V.DS);
        public static readonly A OCTBscanAnalysisAcquisitionParametersSequence = new A(1711, 0x0022, 0x1640, V.SQ);
        public static readonly A NumberofBscansPerFrame = new A(1712, 0x0022, 0x1642, V.UL);
        public static readonly A BscanSlabThickness = new A(1713, 0x0022, 0x1643, V.FL);
        public static readonly A DistanceBetweenBscanSlabs = new A(1714, 0x0022, 0x1644, V.FL);
        public static readonly A BscanCycleTime = new A(1715, 0x0022, 0x1645, V.FL);
        public static readonly A BscanCycleTimeVector = new A(1716, 0x0022, 0x1646, V.FL);
        public static readonly A AscanRate = new A(1717, 0x0022, 0x1649, V.FL);
        public static readonly A BscanRate = new A(1718, 0x0022, 0x1650, V.FL);
        public static readonly A SurfaceMeshZPixelOffset = new A(1719, 0x0022, 0x1658, V.UL);
        public static readonly A VisualFieldHorizontalExtent = new A(1720, 0x0024, 0x0010, V.FL);
        public static readonly A VisualFieldVerticalExtent = new A(1721, 0x0024, 0x0011, V.FL);
        public static readonly A VisualFieldShape = new A(1722, 0x0024, 0x0012, V.CS);
        public static readonly A ScreeningTestModeCodeSequence = new A(1723, 0x0024, 0x0016, V.SQ);
        public static readonly A MaximumStimulusLuminance = new A(1724, 0x0024, 0x0018, V.FL);
        public static readonly A BackgroundLuminance = new A(1725, 0x0024, 0x0020, V.FL);
        public static readonly A StimulusColorCodeSequence = new A(1726, 0x0024, 0x0021, V.SQ);
        public static readonly A BackgroundIlluminationColorCodeSequence = new A(1727, 0x0024, 0x0024, V.SQ);
        public static readonly A StimulusArea = new A(1728, 0x0024, 0x0025, V.FL);
        public static readonly A StimulusPresentationTime = new A(1729, 0x0024, 0x0028, V.FL);
        public static readonly A FixationSequence = new A(1730, 0x0024, 0x0032, V.SQ);
        public static readonly A FixationMonitoringCodeSequence = new A(1731, 0x0024, 0x0033, V.SQ);
        public static readonly A VisualFieldCatchTrialSequence = new A(1732, 0x0024, 0x0034, V.SQ);
        public static readonly A FixationCheckedQuantity = new A(1733, 0x0024, 0x0035, V.US);
        public static readonly A PatientNotProperlyFixatedQuantity = new A(1734, 0x0024, 0x0036, V.US);
        public static readonly A PresentedVisualStimuliDataFlag = new A(1735, 0x0024, 0x0037, V.CS);
        public static readonly A NumberOfVisualStimuli = new A(1736, 0x0024, 0x0038, V.US);
        public static readonly A ExcessiveFixationLossesDataFlag = new A(1737, 0x0024, 0x0039, V.CS);
        public static readonly A ExcessiveFixationLosses = new A(1738, 0x0024, 0x0040, V.CS);
        public static readonly A StimuliRetestingQuantity = new A(1739, 0x0024, 0x0042, V.US);
        public static readonly A CommentsOnPatientPerformanceOfVisualField = new A(1740, 0x0024, 0x0044, V.LT);
        public static readonly A FalseNegativesEstimateFlag = new A(1741, 0x0024, 0x0045, V.CS);
        public static readonly A FalseNegativesEstimate = new A(1742, 0x0024, 0x0046, V.FL);
        public static readonly A NegativeCatchTrialsQuantity = new A(1743, 0x0024, 0x0048, V.US);
        public static readonly A FalseNegativesQuantity = new A(1744, 0x0024, 0x0050, V.US);
        public static readonly A ExcessiveFalseNegativesDataFlag = new A(1745, 0x0024, 0x0051, V.CS);
        public static readonly A ExcessiveFalseNegatives = new A(1746, 0x0024, 0x0052, V.CS);
        public static readonly A FalsePositivesEstimateFlag = new A(1747, 0x0024, 0x0053, V.CS);
        public static readonly A FalsePositivesEstimate = new A(1748, 0x0024, 0x0054, V.FL);
        public static readonly A CatchTrialsDataFlag = new A(1749, 0x0024, 0x0055, V.CS);
        public static readonly A PositiveCatchTrialsQuantity = new A(1750, 0x0024, 0x0056, V.US);
        public static readonly A TestPointNormalsDataFlag = new A(1751, 0x0024, 0x0057, V.CS);
        public static readonly A TestPointNormalsSequence = new A(1752, 0x0024, 0x0058, V.SQ);
        public static readonly A GlobalDeviationProbabilityNormalsFlag = new A(1753, 0x0024, 0x0059, V.CS);
        public static readonly A FalsePositivesQuantity = new A(1754, 0x0024, 0x0060, V.US);
        public static readonly A ExcessiveFalsePositivesDataFlag = new A(1755, 0x0024, 0x0061, V.CS);
        public static readonly A ExcessiveFalsePositives = new A(1756, 0x0024, 0x0062, V.CS);
        public static readonly A VisualFieldTestNormalsFlag = new A(1757, 0x0024, 0x0063, V.CS);
        public static readonly A ResultsNormalsSequence = new A(1758, 0x0024, 0x0064, V.SQ);
        public static readonly A AgeCorrectedSensitivityDeviationAlgorithmSequence = new A(1759, 0x0024, 0x0065, V.SQ);
        public static readonly A GlobalDeviationFromNormal = new A(1760, 0x0024, 0x0066, V.FL);
        public static readonly A GeneralizedDefectSensitivityDeviationAlgorithmSequence = new A(1761, 0x0024, 0x0067, V.SQ);
        public static readonly A LocalizedDeviationFromNormal = new A(1762, 0x0024, 0x0068, V.FL);
        public static readonly A PatientReliabilityIndicator = new A(1763, 0x0024, 0x0069, V.LO);
        public static readonly A VisualFieldMeanSensitivity = new A(1764, 0x0024, 0x0070, V.FL);
        public static readonly A GlobalDeviationProbability = new A(1765, 0x0024, 0x0071, V.FL);
        public static readonly A LocalDeviationProbabilityNormalsFlag = new A(1766, 0x0024, 0x0072, V.CS);
        public static readonly A LocalizedDeviationProbability = new A(1767, 0x0024, 0x0073, V.FL);
        public static readonly A ShortTermFluctuationCalculated = new A(1768, 0x0024, 0x0074, V.CS);
        public static readonly A ShortTermFluctuation = new A(1769, 0x0024, 0x0075, V.FL);
        public static readonly A ShortTermFluctuationProbabilityCalculated = new A(1770, 0x0024, 0x0076, V.CS);
        public static readonly A ShortTermFluctuationProbability = new A(1771, 0x0024, 0x0077, V.FL);
        public static readonly A CorrectedLocalizedDeviationFromNormalCalculated = new A(1772, 0x0024, 0x0078, V.CS);
        public static readonly A CorrectedLocalizedDeviationFromNormal = new A(1773, 0x0024, 0x0079, V.FL);
        public static readonly A CorrectedLocalizedDeviationFromNormalProbabilityCalculated = new A(1774, 0x0024, 0x0080, V.CS);
        public static readonly A CorrectedLocalizedDeviationFromNormalProbability = new A(1775, 0x0024, 0x0081, V.FL);
        public static readonly A GlobalDeviationProbabilitySequence = new A(1776, 0x0024, 0x0083, V.SQ);
        public static readonly A LocalizedDeviationProbabilitySequence = new A(1777, 0x0024, 0x0085, V.SQ);
        public static readonly A FovealSensitivityMeasured = new A(1778, 0x0024, 0x0086, V.CS);
        public static readonly A FovealSensitivity = new A(1779, 0x0024, 0x0087, V.FL);
        public static readonly A VisualFieldTestDuration = new A(1780, 0x0024, 0x0088, V.FL);
        public static readonly A VisualFieldTestPointSequence = new A(1781, 0x0024, 0x0089, V.SQ);
        public static readonly A VisualFieldTestPointXCoordinate = new A(1782, 0x0024, 0x0090, V.FL);
        public static readonly A VisualFieldTestPointYCoordinate = new A(1783, 0x0024, 0x0091, V.FL);
        public static readonly A AgeCorrectedSensitivityDeviationValue = new A(1784, 0x0024, 0x0092, V.FL);
        public static readonly A StimulusResults = new A(1785, 0x0024, 0x0093, V.CS);
        public static readonly A SensitivityValue = new A(1786, 0x0024, 0x0094, V.FL);
        public static readonly A RetestStimulusSeen = new A(1787, 0x0024, 0x0095, V.CS);
        public static readonly A RetestSensitivityValue = new A(1788, 0x0024, 0x0096, V.FL);
        public static readonly A VisualFieldTestPointNormalsSequence = new A(1789, 0x0024, 0x0097, V.SQ);
        public static readonly A QuantifiedDefect = new A(1790, 0x0024, 0x0098, V.FL);
        public static readonly A AgeCorrectedSensitivityDeviationProbabilityValue = new A(1791, 0x0024, 0x0100, V.FL);
        public static readonly A GeneralizedDefectCorrectedSensitivityDeviationFlag = new A(1792, 0x0024, 0x0102, V.CS);
        public static readonly A GeneralizedDefectCorrectedSensitivityDeviationValue = new A(1793, 0x0024, 0x0103, V.FL);
        public static readonly A GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue = new A(1794, 0x0024, 0x0104, V.FL);
        public static readonly A MinimumSensitivityValue = new A(1795, 0x0024, 0x0105, V.FL);
        public static readonly A BlindSpotLocalized = new A(1796, 0x0024, 0x0106, V.CS);
        public static readonly A BlindSpotXCoordinate = new A(1797, 0x0024, 0x0107, V.FL);
        public static readonly A BlindSpotYCoordinate = new A(1798, 0x0024, 0x0108, V.FL);
        public static readonly A VisualAcuityMeasurementSequence = new A(1799, 0x0024, 0x0110, V.SQ);
        public static readonly A RefractiveParametersUsedOnPatientSequence = new A(1800, 0x0024, 0x0112, V.SQ);
        public static readonly A MeasurementLaterality = new A(1801, 0x0024, 0x0113, V.CS);
        public static readonly A OphthalmicPatientClinicalInformationLeftEyeSequence = new A(1802, 0x0024, 0x0114, V.SQ);
        public static readonly A OphthalmicPatientClinicalInformationRightEyeSequence = new A(1803, 0x0024, 0x0115, V.SQ);
        public static readonly A FovealPointNormativeDataFlag = new A(1804, 0x0024, 0x0117, V.CS);
        public static readonly A FovealPointProbabilityValue = new A(1805, 0x0024, 0x0118, V.FL);
        public static readonly A ScreeningBaselineMeasured = new A(1806, 0x0024, 0x0120, V.CS);
        public static readonly A ScreeningBaselineMeasuredSequence = new A(1807, 0x0024, 0x0122, V.SQ);
        public static readonly A ScreeningBaselineType = new A(1808, 0x0024, 0x0124, V.CS);
        public static readonly A ScreeningBaselineValue = new A(1809, 0x0024, 0x0126, V.FL);
        public static readonly A AlgorithmSource = new A(1810, 0x0024, 0x0202, V.LO);
        public static readonly A DataSetName = new A(1811, 0x0024, 0x0306, V.LO);
        public static readonly A DataSetVersion = new A(1812, 0x0024, 0x0307, V.LO);
        public static readonly A DataSetSource = new A(1813, 0x0024, 0x0308, V.LO);
        public static readonly A DataSetDescription = new A(1814, 0x0024, 0x0309, V.LO);
        public static readonly A VisualFieldTestReliabilityGlobalIndexSequence = new A(1815, 0x0024, 0x0317, V.SQ);
        public static readonly A VisualFieldGlobalResultsIndexSequence = new A(1816, 0x0024, 0x0320, V.SQ);
        public static readonly A DataObservationSequence = new A(1817, 0x0024, 0x0325, V.SQ);
        public static readonly A IndexNormalsFlag = new A(1818, 0x0024, 0x0338, V.CS);
        public static readonly A IndexProbability = new A(1819, 0x0024, 0x0341, V.FL);
        public static readonly A IndexProbabilitySequence = new A(1820, 0x0024, 0x0344, V.SQ);
        public static readonly A SamplesPerPixel = new A(1821, 0x0028, 0x0002, V.US);
        public static readonly A SamplesPerPixelUsed = new A(1822, 0x0028, 0x0003, V.US);
        public static readonly A PhotometricInterpretation = new A(1823, 0x0028, 0x0004, V.CS);
        public static readonly A PlanarConfiguration = new A(1824, 0x0028, 0x0006, V.US);
        public static readonly A NumberOfFrames = new A(1825, 0x0028, 0x0008, V.IS);
        public static readonly A FrameIncrementPointer = new A(1826, 0x0028, 0x0009, V.AT);
        public static readonly A FrameDimensionPointer = new A(1827, 0x0028, 0x000A, V.AT);
        public static readonly A Rows = new A(1828, 0x0028, 0x0010, V.US);
        public static readonly A Columns = new A(1829, 0x0028, 0x0011, V.US);
        public static readonly A UltrasoundColorDataPresent = new A(1830, 0x0028, 0x0014, V.US);
        public static readonly A PixelSpacing = new A(1831, 0x0028, 0x0030, V.DS);
        public static readonly A ZoomFactor = new A(1832, 0x0028, 0x0031, V.DS);
        public static readonly A ZoomCenter = new A(1833, 0x0028, 0x0032, V.DS);
        public static readonly A PixelAspectRatio = new A(1834, 0x0028, 0x0034, V.IS);
        public static readonly A CorrectedImage = new A(1835, 0x0028, 0x0051, V.CS);
        public static readonly A BitsAllocated = new A(1836, 0x0028, 0x0100, V.US);
        public static readonly A BitsStored = new A(1837, 0x0028, 0x0101, V.US);
        public static readonly A HighBit = new A(1838, 0x0028, 0x0102, V.US);
        public static readonly A PixelRepresentation = new A(1839, 0x0028, 0x0103, V.US);
        public static readonly A SmallestImagePixelValue = new A(1840, 0x0028, 0x0106, V.US, V.SS);
        public static readonly A LargestImagePixelValue = new A(1841, 0x0028, 0x0107, V.US, V.SS);
        public static readonly A SmallestPixelValueInSeries = new A(1842, 0x0028, 0x0108, V.US, V.SS);
        public static readonly A LargestPixelValueInSeries = new A(1843, 0x0028, 0x0109, V.US, V.SS);
        public static readonly A PixelPaddingValue = new A(1844, 0x0028, 0x0120, V.US, V.SS);
        public static readonly A PixelPaddingRangeLimit = new A(1845, 0x0028, 0x0121, V.US, V.SS);
        public static readonly A FloatPixelPaddingValue = new A(1846, 0x0028, 0x0122, V.FL);
        public static readonly A DoubleFloatPixelPaddingValue = new A(1847, 0x0028, 0x0123, V.FD);
        public static readonly A FloatPixelPaddingRangeLimit = new A(1848, 0x0028, 0x0124, V.FL);
        public static readonly A DoubleFloatPixelPaddingRangeLimit = new A(1849, 0x0028, 0x0125, V.FD);
        public static readonly A QualityControlImage = new A(1850, 0x0028, 0x0300, V.CS);
        public static readonly A BurnedInAnnotation = new A(1851, 0x0028, 0x0301, V.CS);
        public static readonly A RecognizableVisualFeatures = new A(1852, 0x0028, 0x0302, V.CS);
        public static readonly A LongitudinalTemporalInformationModified = new A(1853, 0x0028, 0x0303, V.CS);
        public static readonly A ReferencedColorPaletteInstanceUID = new A(1854, 0x0028, 0x0304, V.UI);
        public static readonly A PixelSpacingCalibrationType = new A(1855, 0x0028, 0x0A02, V.CS);
        public static readonly A PixelSpacingCalibrationDescription = new A(1856, 0x0028, 0x0A04, V.LO);
        public static readonly A PixelIntensityRelationship = new A(1857, 0x0028, 0x1040, V.CS);
        public static readonly A PixelIntensityRelationshipSign = new A(1858, 0x0028, 0x1041, V.SS);
        public static readonly A WindowCenter = new A(1859, 0x0028, 0x1050, V.DS);
        public static readonly A WindowWidth = new A(1860, 0x0028, 0x1051, V.DS);
        public static readonly A RescaleIntercept = new A(1861, 0x0028, 0x1052, V.DS);
        public static readonly A RescaleSlope = new A(1862, 0x0028, 0x1053, V.DS);
        public static readonly A RescaleType = new A(1863, 0x0028, 0x1054, V.LO);
        public static readonly A WindowCenterWidthExplanation = new A(1864, 0x0028, 0x1055, V.LO);
        public static readonly A VOILUTFunction = new A(1865, 0x0028, 0x1056, V.CS);
        public static readonly A RecommendedViewingMode = new A(1866, 0x0028, 0x1090, V.CS);
        public static readonly A RedPaletteColorLookupTableDescriptor = new A(1867, 0x0028, 0x1101, V.US, V.SS);
        public static readonly A GreenPaletteColorLookupTableDescriptor = new A(1868, 0x0028, 0x1102, V.US, V.SS);
        public static readonly A BluePaletteColorLookupTableDescriptor = new A(1869, 0x0028, 0x1103, V.US, V.SS);
        public static readonly A AlphaPaletteColorLookupTableDescriptor = new A(1870, 0x0028, 0x1104, V.US);
        public static readonly A PaletteColorLookupTableUID = new A(1871, 0x0028, 0x1199, V.UI);
        public static readonly A RedPaletteColorLookupTableData = new A(1872, 0x0028, 0x1201, V.OW);
        public static readonly A GreenPaletteColorLookupTableData = new A(1873, 0x0028, 0x1202, V.OW);
        public static readonly A BluePaletteColorLookupTableData = new A(1874, 0x0028, 0x1203, V.OW);
        public static readonly A AlphaPaletteColorLookupTableData = new A(1875, 0x0028, 0x1204, V.OW);
        public static readonly A SegmentedRedPaletteColorLookupTableData = new A(1876, 0x0028, 0x1221, V.OW);
        public static readonly A SegmentedGreenPaletteColorLookupTableData = new A(1877, 0x0028, 0x1222, V.OW);
        public static readonly A SegmentedBluePaletteColorLookupTableData = new A(1878, 0x0028, 0x1223, V.OW);
        public static readonly A SegmentedAlphaPaletteColorLookupTableData = new A(1879, 0x0028, 0x1224, V.OW);
        public static readonly A StoredValueColorRangeSequence = new A(1880, 0x0028, 0x1230, V.SQ);
        public static readonly A MinimumStoredValueMapped = new A(1881, 0x0028, 0x1231, V.FD);
        public static readonly A MaximumStoredValueMapped = new A(1882, 0x0028, 0x1232, V.FD);
        public static readonly A BreastImplantPresent = new A(1883, 0x0028, 0x1300, V.CS);
        public static readonly A PartialView = new A(1884, 0x0028, 0x1350, V.CS);
        public static readonly A PartialViewDescription = new A(1885, 0x0028, 0x1351, V.ST);
        public static readonly A PartialViewCodeSequence = new A(1886, 0x0028, 0x1352, V.SQ);
        public static readonly A SpatialLocationsPreserved = new A(1887, 0x0028, 0x135A, V.CS);
        public static readonly A DataFrameAssignmentSequence = new A(1888, 0x0028, 0x1401, V.SQ);
        public static readonly A DataPathAssignment = new A(1889, 0x0028, 0x1402, V.CS);
        public static readonly A BitsMappedToColorLookupTable = new A(1890, 0x0028, 0x1403, V.US);
        public static readonly A BlendingLUT1Sequence = new A(1891, 0x0028, 0x1404, V.SQ);
        public static readonly A BlendingLUT1TransferFunction = new A(1892, 0x0028, 0x1405, V.CS);
        public static readonly A BlendingWeightConstant = new A(1893, 0x0028, 0x1406, V.FD);
        public static readonly A BlendingLookupTableDescriptor = new A(1894, 0x0028, 0x1407, V.US);
        public static readonly A BlendingLookupTableData = new A(1895, 0x0028, 0x1408, V.OW);
        public static readonly A EnhancedPaletteColorLookupTableSequence = new A(1896, 0x0028, 0x140B, V.SQ);
        public static readonly A BlendingLUT2Sequence = new A(1897, 0x0028, 0x140C, V.SQ);
        public static readonly A BlendingLUT2TransferFunction = new A(1898, 0x0028, 0x140D, V.CS);
        public static readonly A DataPathID = new A(1899, 0x0028, 0x140E, V.CS);
        public static readonly A RGBLUTTransferFunction = new A(1900, 0x0028, 0x140F, V.CS);
        public static readonly A AlphaLUTTransferFunction = new A(1901, 0x0028, 0x1410, V.CS);
        public static readonly A ICCProfile = new A(1902, 0x0028, 0x2000, V.OB);
        public static readonly A ColorSpace = new A(1903, 0x0028, 0x2002, V.CS);
        public static readonly A LossyImageCompression = new A(1904, 0x0028, 0x2110, V.CS);
        public static readonly A LossyImageCompressionRatio = new A(1905, 0x0028, 0x2112, V.DS);
        public static readonly A LossyImageCompressionMethod = new A(1906, 0x0028, 0x2114, V.CS);
        public static readonly A ModalityLUTSequence = new A(1907, 0x0028, 0x3000, V.SQ);
        public static readonly A LUTDescriptor = new A(1908, 0x0028, 0x3002, V.US, V.SS);
        public static readonly A LUTExplanation = new A(1909, 0x0028, 0x3003, V.LO);
        public static readonly A ModalityLUTType = new A(1910, 0x0028, 0x3004, V.LO);
        public static readonly A LUTData = new A(1911, 0x0028, 0x3006, V.US, V.OW);
        public static readonly A VOILUTSequence = new A(1912, 0x0028, 0x3010, V.SQ);
        public static readonly A SoftcopyVOILUTSequence = new A(1913, 0x0028, 0x3110, V.SQ);
        public static readonly A RepresentativeFrameNumber = new A(1914, 0x0028, 0x6010, V.US);
        public static readonly A FrameNumbersOfInterest = new A(1915, 0x0028, 0x6020, V.US);
        public static readonly A FrameOfInterestDescription = new A(1916, 0x0028, 0x6022, V.LO);
        public static readonly A FrameOfInterestType = new A(1917, 0x0028, 0x6023, V.CS);
        public static readonly A RWavePointer = new A(1918, 0x0028, 0x6040, V.US);
        public static readonly A MaskSubtractionSequence = new A(1919, 0x0028, 0x6100, V.SQ);
        public static readonly A MaskOperation = new A(1920, 0x0028, 0x6101, V.CS);
        public static readonly A ApplicableFrameRange = new A(1921, 0x0028, 0x6102, V.US);
        public static readonly A MaskFrameNumbers = new A(1922, 0x0028, 0x6110, V.US);
        public static readonly A ContrastFrameAveraging = new A(1923, 0x0028, 0x6112, V.US);
        public static readonly A MaskSubPixelShift = new A(1924, 0x0028, 0x6114, V.FL);
        public static readonly A TIDOffset = new A(1925, 0x0028, 0x6120, V.SS);
        public static readonly A MaskOperationExplanation = new A(1926, 0x0028, 0x6190, V.ST);
        public static readonly A EquipmentAdministratorSequence = new A(1927, 0x0028, 0x7000, V.SQ);
        public static readonly A NumberOfDisplaySubsystems = new A(1928, 0x0028, 0x7001, V.US);
        public static readonly A CurrentConfigurationID = new A(1929, 0x0028, 0x7002, V.US);
        public static readonly A DisplaySubsystemID = new A(1930, 0x0028, 0x7003, V.US);
        public static readonly A DisplaySubsystemName = new A(1931, 0x0028, 0x7004, V.SH);
        public static readonly A DisplaySubsystemDescription = new A(1932, 0x0028, 0x7005, V.LO);
        public static readonly A SystemStatus = new A(1933, 0x0028, 0x7006, V.CS);
        public static readonly A SystemStatusComment = new A(1934, 0x0028, 0x7007, V.LO);
        public static readonly A TargetLuminanceCharacteristicsSequence = new A(1935, 0x0028, 0x7008, V.SQ);
        public static readonly A LuminanceCharacteristicsID = new A(1936, 0x0028, 0x7009, V.US);
        public static readonly A DisplaySubsystemConfigurationSequence = new A(1937, 0x0028, 0x700A, V.SQ);
        public static readonly A ConfigurationID = new A(1938, 0x0028, 0x700B, V.US);
        public static readonly A ConfigurationName = new A(1939, 0x0028, 0x700C, V.SH);
        public static readonly A ConfigurationDescription = new A(1940, 0x0028, 0x700D, V.LO);
        public static readonly A ReferencedTargetLuminanceCharacteristicsID = new A(1941, 0x0028, 0x700E, V.US);
        public static readonly A QAResultsSequence = new A(1942, 0x0028, 0x700F, V.SQ);
        public static readonly A DisplaySubsystemQAResultsSequence = new A(1943, 0x0028, 0x7010, V.SQ);
        public static readonly A ConfigurationQAResultsSequence = new A(1944, 0x0028, 0x7011, V.SQ);
        public static readonly A MeasurementEquipmentSequence = new A(1945, 0x0028, 0x7012, V.SQ);
        public static readonly A MeasurementFunctions = new A(1946, 0x0028, 0x7013, V.CS);
        public static readonly A MeasurementEquipmentType = new A(1947, 0x0028, 0x7014, V.CS);
        public static readonly A VisualEvaluationResultSequence = new A(1948, 0x0028, 0x7015, V.SQ);
        public static readonly A DisplayCalibrationResultSequence = new A(1949, 0x0028, 0x7016, V.SQ);
        public static readonly A DDLValue = new A(1950, 0x0028, 0x7017, V.US);
        public static readonly A CIExyWhitePoint = new A(1951, 0x0028, 0x7018, V.FL);
        public static readonly A DisplayFunctionType = new A(1952, 0x0028, 0x7019, V.CS);
        public static readonly A GammaValue = new A(1953, 0x0028, 0x701A, V.FL);
        public static readonly A NumberOfLuminancePoints = new A(1954, 0x0028, 0x701B, V.US);
        public static readonly A LuminanceResponseSequence = new A(1955, 0x0028, 0x701C, V.SQ);
        public static readonly A TargetMinimumLuminance = new A(1956, 0x0028, 0x701D, V.FL);
        public static readonly A TargetMaximumLuminance = new A(1957, 0x0028, 0x701E, V.FL);
        public static readonly A LuminanceValue = new A(1958, 0x0028, 0x701F, V.FL);
        public static readonly A LuminanceResponseDescription = new A(1959, 0x0028, 0x7020, V.LO);
        public static readonly A WhitePointFlag = new A(1960, 0x0028, 0x7021, V.CS);
        public static readonly A DisplayDeviceTypeCodeSequence = new A(1961, 0x0028, 0x7022, V.SQ);
        public static readonly A DisplaySubsystemSequence = new A(1962, 0x0028, 0x7023, V.SQ);
        public static readonly A LuminanceResultSequence = new A(1963, 0x0028, 0x7024, V.SQ);
        public static readonly A AmbientLightValueSource = new A(1964, 0x0028, 0x7025, V.CS);
        public static readonly A MeasuredCharacteristics = new A(1965, 0x0028, 0x7026, V.CS);
        public static readonly A LuminanceUniformityResultSequence = new A(1966, 0x0028, 0x7027, V.SQ);
        public static readonly A VisualEvaluationTestSequence = new A(1967, 0x0028, 0x7028, V.SQ);
        public static readonly A TestResult = new A(1968, 0x0028, 0x7029, V.CS);
        public static readonly A TestResultComment = new A(1969, 0x0028, 0x702A, V.LO);
        public static readonly A TestImageValidation = new A(1970, 0x0028, 0x702B, V.CS);
        public static readonly A TestPatternCodeSequence = new A(1971, 0x0028, 0x702C, V.SQ);
        public static readonly A MeasurementPatternCodeSequence = new A(1972, 0x0028, 0x702D, V.SQ);
        public static readonly A VisualEvaluationMethodCodeSequence = new A(1973, 0x0028, 0x702E, V.SQ);
        public static readonly A PixelDataProviderURL = new A(1974, 0x0028, 0x7FE0, V.UR);
        public static readonly A DataPointRows = new A(1975, 0x0028, 0x9001, V.UL);
        public static readonly A DataPointColumns = new A(1976, 0x0028, 0x9002, V.UL);
        public static readonly A SignalDomainColumns = new A(1977, 0x0028, 0x9003, V.CS);
        public static readonly A DataRepresentation = new A(1978, 0x0028, 0x9108, V.CS);
        public static readonly A PixelMeasuresSequence = new A(1979, 0x0028, 0x9110, V.SQ);
        public static readonly A FrameVOILUTSequence = new A(1980, 0x0028, 0x9132, V.SQ);
        public static readonly A PixelValueTransformationSequence = new A(1981, 0x0028, 0x9145, V.SQ);
        public static readonly A SignalDomainRows = new A(1982, 0x0028, 0x9235, V.CS);
        public static readonly A DisplayFilterPercentage = new A(1983, 0x0028, 0x9411, V.FL);
        public static readonly A FramePixelShiftSequence = new A(1984, 0x0028, 0x9415, V.SQ);
        public static readonly A SubtractionItemID = new A(1985, 0x0028, 0x9416, V.US);
        public static readonly A PixelIntensityRelationshipLUTSequence = new A(1986, 0x0028, 0x9422, V.SQ);
        public static readonly A FramePixelDataPropertiesSequence = new A(1987, 0x0028, 0x9443, V.SQ);
        public static readonly A GeometricalProperties = new A(1988, 0x0028, 0x9444, V.CS);
        public static readonly A GeometricMaximumDistortion = new A(1989, 0x0028, 0x9445, V.FL);
        public static readonly A ImageProcessingApplied = new A(1990, 0x0028, 0x9446, V.CS);
        public static readonly A MaskSelectionMode = new A(1991, 0x0028, 0x9454, V.CS);
        public static readonly A LUTFunction = new A(1992, 0x0028, 0x9474, V.CS);
        public static readonly A MaskVisibilityPercentage = new A(1993, 0x0028, 0x9478, V.FL);
        public static readonly A PixelShiftSequence = new A(1994, 0x0028, 0x9501, V.SQ);
        public static readonly A RegionPixelShiftSequence = new A(1995, 0x0028, 0x9502, V.SQ);
        public static readonly A VerticesOfTheRegion = new A(1996, 0x0028, 0x9503, V.SS);
        public static readonly A MultiFramePresentationSequence = new A(1997, 0x0028, 0x9505, V.SQ);
        public static readonly A PixelShiftFrameRange = new A(1998, 0x0028, 0x9506, V.US);
        public static readonly A LUTFrameRange = new A(1999, 0x0028, 0x9507, V.US);
        public static readonly A ImageToEquipmentMappingMatrix = new A(2000, 0x0028, 0x9520, V.DS);
        public static readonly A EquipmentCoordinateSystemIdentification = new A(2001, 0x0028, 0x9537, V.CS);
        public static readonly A RequestingPhysicianIdentificationSequence = new A(2002, 0x0032, 0x1031, V.SQ);
        public static readonly A RequestingPhysician = new A(2003, 0x0032, 0x1032, V.PN);
        public static readonly A RequestingService = new A(2004, 0x0032, 0x1033, V.LO);
        public static readonly A RequestingServiceCodeSequence = new A(2005, 0x0032, 0x1034, V.SQ);
        public static readonly A RequestedProcedureDescription = new A(2006, 0x0032, 0x1060, V.LO);
        public static readonly A RequestedProcedureCodeSequence = new A(2007, 0x0032, 0x1064, V.SQ);
        public static readonly A ReasonForVisit = new A(2008, 0x0032, 0x1066, V.UT);
        public static readonly A ReasonForVisitCodeSequence = new A(2009, 0x0032, 0x1067, V.SQ);
        public static readonly A RequestedContrastAgent = new A(2010, 0x0032, 0x1070, V.LO);
        public static readonly A FlowIdentifierSequence = new A(2011, 0x0034, 0x0001, V.SQ);
        public static readonly A FlowIdentifier = new A(2012, 0x0034, 0x0002, V.OB);
        public static readonly A FlowTransferSyntaxUID = new A(2013, 0x0034, 0x0003, V.UI);
        public static readonly A FlowRTPSamplingRate = new A(2014, 0x0034, 0x0004, V.UL);
        public static readonly A SourceIdentifier = new A(2015, 0x0034, 0x0005, V.OB);
        public static readonly A FrameOriginTimestamp = new A(2016, 0x0034, 0x0007, V.OB);
        public static readonly A IncludesImagingSubject = new A(2017, 0x0034, 0x0008, V.CS);
        public static readonly A FrameUsefulnessGroupSequence = new A(2018, 0x0034, 0x0009, V.SQ);
        public static readonly A RealTimeBulkDataFlowSequence = new A(2019, 0x0034, 0x000A, V.SQ);
        public static readonly A CameraPositionGroupSequence = new A(2020, 0x0034, 0x000B, V.SQ);
        public static readonly A IncludesInformation = new A(2021, 0x0034, 0x000C, V.CS);
        public static readonly A TimeOfFrameGroupSequence = new A(2022, 0x0034, 0x000D, V.SQ);
        public static readonly A ReferencedPatientAliasSequence = new A(2023, 0x0038, 0x0004, V.SQ);
        public static readonly A VisitStatusID = new A(2024, 0x0038, 0x0008, V.CS);
        public static readonly A AdmissionID = new A(2025, 0x0038, 0x0010, V.LO);
        public static readonly A IssuerOfAdmissionIDSequence = new A(2026, 0x0038, 0x0014, V.SQ);
        public static readonly A RouteOfAdmissions = new A(2027, 0x0038, 0x0016, V.LO);
        public static readonly A AdmittingDate = new A(2028, 0x0038, 0x0020, V.DA);
        public static readonly A AdmittingTime = new A(2029, 0x0038, 0x0021, V.TM);
        public static readonly A SpecialNeeds = new A(2030, 0x0038, 0x0050, V.LO);
        public static readonly A ServiceEpisodeID = new A(2031, 0x0038, 0x0060, V.LO);
        public static readonly A ServiceEpisodeDescription = new A(2032, 0x0038, 0x0062, V.LO);
        public static readonly A IssuerOfServiceEpisodeIDSequence = new A(2033, 0x0038, 0x0064, V.SQ);
        public static readonly A PertinentDocumentsSequence = new A(2034, 0x0038, 0x0100, V.SQ);
        public static readonly A PertinentResourcesSequence = new A(2035, 0x0038, 0x0101, V.SQ);
        public static readonly A ResourceDescription = new A(2036, 0x0038, 0x0102, V.LO);
        public static readonly A CurrentPatientLocation = new A(2037, 0x0038, 0x0300, V.LO);
        public static readonly A PatientInstitutionResidence = new A(2038, 0x0038, 0x0400, V.LO);
        public static readonly A PatientState = new A(2039, 0x0038, 0x0500, V.LO);
        public static readonly A PatientClinicalTrialParticipationSequence = new A(2040, 0x0038, 0x0502, V.SQ);
        public static readonly A VisitComments = new A(2041, 0x0038, 0x4000, V.LT);
        public static readonly A WaveformOriginality = new A(2042, 0x003A, 0x0004, V.CS);
        public static readonly A NumberOfWaveformChannels = new A(2043, 0x003A, 0x0005, V.US);
        public static readonly A NumberOfWaveformSamples = new A(2044, 0x003A, 0x0010, V.UL);
        public static readonly A SamplingFrequency = new A(2045, 0x003A, 0x001A, V.DS);
        public static readonly A MultiplexGroupLabel = new A(2046, 0x003A, 0x0020, V.SH);
        public static readonly A ChannelDefinitionSequence = new A(2047, 0x003A, 0x0200, V.SQ);
        public static readonly A WaveformChannelNumber = new A(2048, 0x003A, 0x0202, V.IS);
        public static readonly A ChannelLabel = new A(2049, 0x003A, 0x0203, V.SH);
        public static readonly A ChannelStatus = new A(2050, 0x003A, 0x0205, V.CS);
        public static readonly A ChannelSourceSequence = new A(2051, 0x003A, 0x0208, V.SQ);
        public static readonly A ChannelSourceModifiersSequence = new A(2052, 0x003A, 0x0209, V.SQ);
        public static readonly A SourceWaveformSequence = new A(2053, 0x003A, 0x020A, V.SQ);
        public static readonly A ChannelDerivationDescription = new A(2054, 0x003A, 0x020C, V.LO);
        public static readonly A ChannelSensitivity = new A(2055, 0x003A, 0x0210, V.DS);
        public static readonly A ChannelSensitivityUnitsSequence = new A(2056, 0x003A, 0x0211, V.SQ);
        public static readonly A ChannelSensitivityCorrectionFactor = new A(2057, 0x003A, 0x0212, V.DS);
        public static readonly A ChannelBaseline = new A(2058, 0x003A, 0x0213, V.DS);
        public static readonly A ChannelTimeSkew = new A(2059, 0x003A, 0x0214, V.DS);
        public static readonly A ChannelSampleSkew = new A(2060, 0x003A, 0x0215, V.DS);
        public static readonly A ChannelOffset = new A(2061, 0x003A, 0x0218, V.DS);
        public static readonly A WaveformBitsStored = new A(2062, 0x003A, 0x021A, V.US);
        public static readonly A FilterLowFrequency = new A(2063, 0x003A, 0x0220, V.DS);
        public static readonly A FilterHighFrequency = new A(2064, 0x003A, 0x0221, V.DS);
        public static readonly A NotchFilterFrequency = new A(2065, 0x003A, 0x0222, V.DS);
        public static readonly A NotchFilterBandwidth = new A(2066, 0x003A, 0x0223, V.DS);
        public static readonly A WaveformDataDisplayScale = new A(2067, 0x003A, 0x0230, V.FL);
        public static readonly A WaveformDisplayBackgroundCIELabValue = new A(2068, 0x003A, 0x0231, V.US);
        public static readonly A WaveformPresentationGroupSequence = new A(2069, 0x003A, 0x0240, V.SQ);
        public static readonly A PresentationGroupNumber = new A(2070, 0x003A, 0x0241, V.US);
        public static readonly A ChannelDisplaySequence = new A(2071, 0x003A, 0x0242, V.SQ);
        public static readonly A ChannelRecommendedDisplayCIELabValue = new A(2072, 0x003A, 0x0244, V.US);
        public static readonly A ChannelPosition = new A(2073, 0x003A, 0x0245, V.FL);
        public static readonly A DisplayShadingFlag = new A(2074, 0x003A, 0x0246, V.CS);
        public static readonly A FractionalChannelDisplayScale = new A(2075, 0x003A, 0x0247, V.FL);
        public static readonly A AbsoluteChannelDisplayScale = new A(2076, 0x003A, 0x0248, V.FL);
        public static readonly A MultiplexedAudioChannelsDescriptionCodeSequence = new A(2077, 0x003A, 0x0300, V.SQ);
        public static readonly A ChannelIdentificationCode = new A(2078, 0x003A, 0x0301, V.IS);
        public static readonly A ChannelMode = new A(2079, 0x003A, 0x0302, V.CS);
        public static readonly A ScheduledStationAETitle = new A(2080, 0x0040, 0x0001, V.AE);
        public static readonly A ScheduledProcedureStepStartDate = new A(2081, 0x0040, 0x0002, V.DA);
        public static readonly A ScheduledProcedureStepStartTime = new A(2082, 0x0040, 0x0003, V.TM);
        public static readonly A ScheduledProcedureStepEndDate = new A(2083, 0x0040, 0x0004, V.DA);
        public static readonly A ScheduledProcedureStepEndTime = new A(2084, 0x0040, 0x0005, V.TM);
        public static readonly A ScheduledPerformingPhysicianName = new A(2085, 0x0040, 0x0006, V.PN);
        public static readonly A ScheduledProcedureStepDescription = new A(2086, 0x0040, 0x0007, V.LO);
        public static readonly A ScheduledProtocolCodeSequence = new A(2087, 0x0040, 0x0008, V.SQ);
        public static readonly A ScheduledProcedureStepID = new A(2088, 0x0040, 0x0009, V.SH);
        public static readonly A StageCodeSequence = new A(2089, 0x0040, 0x000A, V.SQ);
        public static readonly A ScheduledPerformingPhysicianIdentificationSequence = new A(2090, 0x0040, 0x000B, V.SQ);
        public static readonly A ScheduledStationName = new A(2091, 0x0040, 0x0010, V.SH);
        public static readonly A ScheduledProcedureStepLocation = new A(2092, 0x0040, 0x0011, V.SH);
        public static readonly A PreMedication = new A(2093, 0x0040, 0x0012, V.LO);
        public static readonly A ScheduledProcedureStepStatus = new A(2094, 0x0040, 0x0020, V.CS);
        public static readonly A OrderPlacerIdentifierSequence = new A(2095, 0x0040, 0x0026, V.SQ);
        public static readonly A OrderFillerIdentifierSequence = new A(2096, 0x0040, 0x0027, V.SQ);
        public static readonly A LocalNamespaceEntityID = new A(2097, 0x0040, 0x0031, V.UT);
        public static readonly A UniversalEntityID = new A(2098, 0x0040, 0x0032, V.UT);
        public static readonly A UniversalEntityIDType = new A(2099, 0x0040, 0x0033, V.CS);
        public static readonly A IdentifierTypeCode = new A(2100, 0x0040, 0x0035, V.CS);
        public static readonly A AssigningFacilitySequence = new A(2101, 0x0040, 0x0036, V.SQ);
        public static readonly A AssigningJurisdictionCodeSequence = new A(2102, 0x0040, 0x0039, V.SQ);
        public static readonly A AssigningAgencyOrDepartmentCodeSequence = new A(2103, 0x0040, 0x003A, V.SQ);
        public static readonly A ScheduledProcedureStepSequence = new A(2104, 0x0040, 0x0100, V.SQ);
        public static readonly A ReferencedNonImageCompositeSOPInstanceSequence = new A(2105, 0x0040, 0x0220, V.SQ);
        public static readonly A PerformedStationAETitle = new A(2106, 0x0040, 0x0241, V.AE);
        public static readonly A PerformedStationName = new A(2107, 0x0040, 0x0242, V.SH);
        public static readonly A PerformedLocation = new A(2108, 0x0040, 0x0243, V.SH);
        public static readonly A PerformedProcedureStepStartDate = new A(2109, 0x0040, 0x0244, V.DA);
        public static readonly A PerformedProcedureStepStartTime = new A(2110, 0x0040, 0x0245, V.TM);
        public static readonly A PerformedProcedureStepEndDate = new A(2111, 0x0040, 0x0250, V.DA);
        public static readonly A PerformedProcedureStepEndTime = new A(2112, 0x0040, 0x0251, V.TM);
        public static readonly A PerformedProcedureStepStatus = new A(2113, 0x0040, 0x0252, V.CS);
        public static readonly A PerformedProcedureStepID = new A(2114, 0x0040, 0x0253, V.SH);
        public static readonly A PerformedProcedureStepDescription = new A(2115, 0x0040, 0x0254, V.LO);
        public static readonly A PerformedProcedureTypeDescription = new A(2116, 0x0040, 0x0255, V.LO);
        public static readonly A PerformedProtocolCodeSequence = new A(2117, 0x0040, 0x0260, V.SQ);
        public static readonly A PerformedProtocolType = new A(2118, 0x0040, 0x0261, V.CS);
        public static readonly A ScheduledStepAttributesSequence = new A(2119, 0x0040, 0x0270, V.SQ);
        public static readonly A RequestAttributesSequence = new A(2120, 0x0040, 0x0275, V.SQ);
        public static readonly A CommentsOnThePerformedProcedureStep = new A(2121, 0x0040, 0x0280, V.ST);
        public static readonly A PerformedProcedureStepDiscontinuationReasonCodeSequence = new A(2122, 0x0040, 0x0281, V.SQ);
        public static readonly A QuantitySequence = new A(2123, 0x0040, 0x0293, V.SQ);
        public static readonly A Quantity = new A(2124, 0x0040, 0x0294, V.DS);
        public static readonly A MeasuringUnitsSequence = new A(2125, 0x0040, 0x0295, V.SQ);
        public static readonly A BillingItemSequence = new A(2126, 0x0040, 0x0296, V.SQ);
        public static readonly A EntranceDose = new A(2127, 0x0040, 0x0302, V.US);
        public static readonly A ExposedArea = new A(2128, 0x0040, 0x0303, V.US);
        public static readonly A DistanceSourceToEntrance = new A(2129, 0x0040, 0x0306, V.DS);
        public static readonly A CommentsOnRadiationDose = new A(2130, 0x0040, 0x0310, V.ST);
        public static readonly A XRayOutput = new A(2131, 0x0040, 0x0312, V.DS);
        public static readonly A HalfValueLayer = new A(2132, 0x0040, 0x0314, V.DS);
        public static readonly A OrganDose = new A(2133, 0x0040, 0x0316, V.DS);
        public static readonly A OrganExposed = new A(2134, 0x0040, 0x0318, V.CS);
        public static readonly A BillingProcedureStepSequence = new A(2135, 0x0040, 0x0320, V.SQ);
        public static readonly A FilmConsumptionSequence = new A(2136, 0x0040, 0x0321, V.SQ);
        public static readonly A BillingSuppliesAndDevicesSequence = new A(2137, 0x0040, 0x0324, V.SQ);
        public static readonly A PerformedSeriesSequence = new A(2138, 0x0040, 0x0340, V.SQ);
        public static readonly A CommentsOnTheScheduledProcedureStep = new A(2139, 0x0040, 0x0400, V.LT);
        public static readonly A ProtocolContextSequence = new A(2140, 0x0040, 0x0440, V.SQ);
        public static readonly A ContentItemModifierSequence = new A(2141, 0x0040, 0x0441, V.SQ);
        public static readonly A ScheduledSpecimenSequence = new A(2142, 0x0040, 0x0500, V.SQ);
        public static readonly A ContainerIdentifier = new A(2143, 0x0040, 0x0512, V.LO);
        public static readonly A IssuerOfTheContainerIdentifierSequence = new A(2144, 0x0040, 0x0513, V.SQ);
        public static readonly A AlternateContainerIdentifierSequence = new A(2145, 0x0040, 0x0515, V.SQ);
        public static readonly A ContainerTypeCodeSequence = new A(2146, 0x0040, 0x0518, V.SQ);
        public static readonly A ContainerDescription = new A(2147, 0x0040, 0x051A, V.LO);
        public static readonly A ContainerComponentSequence = new A(2148, 0x0040, 0x0520, V.SQ);
        public static readonly A SpecimenIdentifier = new A(2149, 0x0040, 0x0551, V.LO);
        public static readonly A SpecimenUID = new A(2150, 0x0040, 0x0554, V.UI);
        public static readonly A AcquisitionContextSequence = new A(2151, 0x0040, 0x0555, V.SQ);
        public static readonly A AcquisitionContextDescription = new A(2152, 0x0040, 0x0556, V.ST);
        public static readonly A SpecimenDescriptionSequence = new A(2153, 0x0040, 0x0560, V.SQ);
        public static readonly A IssuerOfTheSpecimenIdentifierSequence = new A(2154, 0x0040, 0x0562, V.SQ);
        public static readonly A SpecimenTypeCodeSequence = new A(2155, 0x0040, 0x059A, V.SQ);
        public static readonly A SpecimenShortDescription = new A(2156, 0x0040, 0x0600, V.LO);
        public static readonly A SpecimenDetailedDescription = new A(2157, 0x0040, 0x0602, V.UT);
        public static readonly A SpecimenPreparationSequence = new A(2158, 0x0040, 0x0610, V.SQ);
        public static readonly A SpecimenPreparationStepContentItemSequence = new A(2159, 0x0040, 0x0612, V.SQ);
        public static readonly A SpecimenLocalizationContentItemSequence = new A(2160, 0x0040, 0x0620, V.SQ);
        public static readonly A WholeSlideMicroscopyImageFrameTypeSequence = new A(2161, 0x0040, 0x0710, V.SQ);
        public static readonly A ImageCenterPointCoordinatesSequence = new A(2162, 0x0040, 0x071A, V.SQ);
        public static readonly A XOffsetInSlideCoordinateSystem = new A(2163, 0x0040, 0x072A, V.DS);
        public static readonly A YOffsetInSlideCoordinateSystem = new A(2164, 0x0040, 0x073A, V.DS);
        public static readonly A ZOffsetInSlideCoordinateSystem = new A(2165, 0x0040, 0x074A, V.DS);
        public static readonly A MeasurementUnitsCodeSequence = new A(2166, 0x0040, 0x08EA, V.SQ);
        public static readonly A RequestedProcedureID = new A(2167, 0x0040, 0x1001, V.SH);
        public static readonly A ReasonForTheRequestedProcedure = new A(2168, 0x0040, 0x1002, V.LO);
        public static readonly A RequestedProcedurePriority = new A(2169, 0x0040, 0x1003, V.SH);
        public static readonly A PatientTransportArrangements = new A(2170, 0x0040, 0x1004, V.LO);
        public static readonly A RequestedProcedureLocation = new A(2171, 0x0040, 0x1005, V.LO);
        public static readonly A ConfidentialityCode = new A(2172, 0x0040, 0x1008, V.LO);
        public static readonly A ReportingPriority = new A(2173, 0x0040, 0x1009, V.SH);
        public static readonly A ReasonForRequestedProcedureCodeSequence = new A(2174, 0x0040, 0x100A, V.SQ);
        public static readonly A NamesOfIntendedRecipientsOfResults = new A(2175, 0x0040, 0x1010, V.PN);
        public static readonly A IntendedRecipientsOfResultsIdentificationSequence = new A(2176, 0x0040, 0x1011, V.SQ);
        public static readonly A ReasonForPerformedProcedureCodeSequence = new A(2177, 0x0040, 0x1012, V.SQ);
        public static readonly A PersonIdentificationCodeSequence = new A(2178, 0x0040, 0x1101, V.SQ);
        public static readonly A PersonAddress = new A(2179, 0x0040, 0x1102, V.ST);
        public static readonly A PersonTelephoneNumbers = new A(2180, 0x0040, 0x1103, V.LO);
        public static readonly A PersonTelecomInformation = new A(2181, 0x0040, 0x1104, V.LT);
        public static readonly A RequestedProcedureComments = new A(2182, 0x0040, 0x1400, V.LT);
        public static readonly A IssueDateOfImagingServiceRequest = new A(2183, 0x0040, 0x2004, V.DA);
        public static readonly A IssueTimeOfImagingServiceRequest = new A(2184, 0x0040, 0x2005, V.TM);
        public static readonly A OrderEnteredBy = new A(2185, 0x0040, 0x2008, V.PN);
        public static readonly A OrderEntererLocation = new A(2186, 0x0040, 0x2009, V.SH);
        public static readonly A OrderCallbackPhoneNumber = new A(2187, 0x0040, 0x2010, V.SH);
        public static readonly A OrderCallbackTelecomInformation = new A(2188, 0x0040, 0x2011, V.LT);
        public static readonly A PlacerOrderNumberImagingServiceRequest = new A(2189, 0x0040, 0x2016, V.LO);
        public static readonly A FillerOrderNumberImagingServiceRequest = new A(2190, 0x0040, 0x2017, V.LO);
        public static readonly A ImagingServiceRequestComments = new A(2191, 0x0040, 0x2400, V.LT);
        public static readonly A ConfidentialityConstraintOnPatientDataDescription = new A(2192, 0x0040, 0x3001, V.LO);
        public static readonly A ScheduledProcedureStepStartDateTime = new A(2193, 0x0040, 0x4005, V.DT);
        public static readonly A ScheduledProcedureStepExpirationDateTime = new A(2194, 0x0040, 0x4008, V.DT);
        public static readonly A HumanPerformerCodeSequence = new A(2195, 0x0040, 0x4009, V.SQ);
        public static readonly A ScheduledProcedureStepModificationDateTime = new A(2196, 0x0040, 0x4010, V.DT);
        public static readonly A ExpectedCompletionDateTime = new A(2197, 0x0040, 0x4011, V.DT);
        public static readonly A ScheduledWorkitemCodeSequence = new A(2198, 0x0040, 0x4018, V.SQ);
        public static readonly A PerformedWorkitemCodeSequence = new A(2199, 0x0040, 0x4019, V.SQ);
        public static readonly A InputInformationSequence = new A(2200, 0x0040, 0x4021, V.SQ);
        public static readonly A ScheduledStationNameCodeSequence = new A(2201, 0x0040, 0x4025, V.SQ);
        public static readonly A ScheduledStationClassCodeSequence = new A(2202, 0x0040, 0x4026, V.SQ);
        public static readonly A ScheduledStationGeographicLocationCodeSequence = new A(2203, 0x0040, 0x4027, V.SQ);
        public static readonly A PerformedStationNameCodeSequence = new A(2204, 0x0040, 0x4028, V.SQ);
        public static readonly A PerformedStationClassCodeSequence = new A(2205, 0x0040, 0x4029, V.SQ);
        public static readonly A PerformedStationGeographicLocationCodeSequence = new A(2206, 0x0040, 0x4030, V.SQ);
        public static readonly A OutputInformationSequence = new A(2207, 0x0040, 0x4033, V.SQ);
        public static readonly A ScheduledHumanPerformersSequence = new A(2208, 0x0040, 0x4034, V.SQ);
        public static readonly A ActualHumanPerformersSequence = new A(2209, 0x0040, 0x4035, V.SQ);
        public static readonly A HumanPerformerOrganization = new A(2210, 0x0040, 0x4036, V.LO);
        public static readonly A HumanPerformerName = new A(2211, 0x0040, 0x4037, V.PN);
        public static readonly A RawDataHandling = new A(2212, 0x0040, 0x4040, V.CS);
        public static readonly A InputReadinessState = new A(2213, 0x0040, 0x4041, V.CS);
        public static readonly A PerformedProcedureStepStartDateTime = new A(2214, 0x0040, 0x4050, V.DT);
        public static readonly A PerformedProcedureStepEndDateTime = new A(2215, 0x0040, 0x4051, V.DT);
        public static readonly A ProcedureStepCancellationDateTime = new A(2216, 0x0040, 0x4052, V.DT);
        public static readonly A OutputDestinationSequence = new A(2217, 0x0040, 0x4070, V.SQ);
        public static readonly A DICOMStorageSequence = new A(2218, 0x0040, 0x4071, V.SQ);
        public static readonly A STOWRSStorageSequence = new A(2219, 0x0040, 0x4072, V.SQ);
        public static readonly A StorageURL = new A(2220, 0x0040, 0x4073, V.UR);
        public static readonly A XDSStorageSequence = new A(2221, 0x0040, 0x4074, V.SQ);
        public static readonly A EntranceDoseInmGy = new A(2222, 0x0040, 0x8302, V.DS);
        public static readonly A EntranceDoseDerivation = new A(2223, 0x0040, 0x8303, V.CS);
        public static readonly A ParametricMapFrameTypeSequence = new A(2224, 0x0040, 0x9092, V.SQ);
        public static readonly A ReferencedImageRealWorldValueMappingSequence = new A(2225, 0x0040, 0x9094, V.SQ);
        public static readonly A RealWorldValueMappingSequence = new A(2226, 0x0040, 0x9096, V.SQ);
        public static readonly A PixelValueMappingCodeSequence = new A(2227, 0x0040, 0x9098, V.SQ);
        public static readonly A LUTLabel = new A(2228, 0x0040, 0x9210, V.SH);
        public static readonly A RealWorldValueLastValueMapped = new A(2229, 0x0040, 0x9211, V.US, V.SS);
        public static readonly A RealWorldValueLUTData = new A(2230, 0x0040, 0x9212, V.FD);
        public static readonly A DoubleFloatRealWorldValueLastValueMapped = new A(2231, 0x0040, 0x9213, V.FD);
        public static readonly A DoubleFloatRealWorldValueFirstValueMapped = new A(2232, 0x0040, 0x9214, V.FD);
        public static readonly A RealWorldValueFirstValueMapped = new A(2233, 0x0040, 0x9216, V.US, V.SS);
        public static readonly A QuantityDefinitionSequence = new A(2234, 0x0040, 0x9220, V.SQ);
        public static readonly A RealWorldValueIntercept = new A(2235, 0x0040, 0x9224, V.FD);
        public static readonly A RealWorldValueSlope = new A(2236, 0x0040, 0x9225, V.FD);
        public static readonly A RelationshipType = new A(2237, 0x0040, 0xA010, V.CS);
        public static readonly A VerifyingOrganization = new A(2238, 0x0040, 0xA027, V.LO);
        public static readonly A VerificationDateTime = new A(2239, 0x0040, 0xA030, V.DT);
        public static readonly A ObservationDateTime = new A(2240, 0x0040, 0xA032, V.DT);
        public static readonly A ValueType = new A(2241, 0x0040, 0xA040, V.CS);
        public static readonly A ConceptNameCodeSequence = new A(2242, 0x0040, 0xA043, V.SQ);
        public static readonly A ContinuityOfContent = new A(2243, 0x0040, 0xA050, V.CS);
        public static readonly A VerifyingObserverSequence = new A(2244, 0x0040, 0xA073, V.SQ);
        public static readonly A VerifyingObserverName = new A(2245, 0x0040, 0xA075, V.PN);
        public static readonly A AuthorObserverSequence = new A(2246, 0x0040, 0xA078, V.SQ);
        public static readonly A ParticipantSequence = new A(2247, 0x0040, 0xA07A, V.SQ);
        public static readonly A CustodialOrganizationSequence = new A(2248, 0x0040, 0xA07C, V.SQ);
        public static readonly A ParticipationType = new A(2249, 0x0040, 0xA080, V.CS);
        public static readonly A ParticipationDateTime = new A(2250, 0x0040, 0xA082, V.DT);
        public static readonly A ObserverType = new A(2251, 0x0040, 0xA084, V.CS);
        public static readonly A VerifyingObserverIdentificationCodeSequence = new A(2252, 0x0040, 0xA088, V.SQ);
        public static readonly A ReferencedWaveformChannels = new A(2253, 0x0040, 0xA0B0, V.US);
        public static readonly A DateTime = new A(2254, 0x0040, 0xA120, V.DT);
        public static readonly A Date = new A(2255, 0x0040, 0xA121, V.DA);
        public static readonly A Time = new A(2256, 0x0040, 0xA122, V.TM);
        public static readonly A PersonName = new A(2257, 0x0040, 0xA123, V.PN);
        public static readonly A UID = new A(2258, 0x0040, 0xA124, V.UI);
        public static readonly A TemporalRangeType = new A(2259, 0x0040, 0xA130, V.CS);
        public static readonly A ReferencedSamplePositions = new A(2260, 0x0040, 0xA132, V.UL);
        public static readonly A ReferencedTimeOffsets = new A(2261, 0x0040, 0xA138, V.DS);
        public static readonly A ReferencedDateTime = new A(2262, 0x0040, 0xA13A, V.DT);
        public static readonly A TextValue = new A(2263, 0x0040, 0xA160, V.UT);
        public static readonly A FloatingPointValue = new A(2264, 0x0040, 0xA161, V.FD);
        public static readonly A RationalNumeratorValue = new A(2265, 0x0040, 0xA162, V.SL);
        public static readonly A RationalDenominatorValue = new A(2266, 0x0040, 0xA163, V.UL);
        public static readonly A ConceptCodeSequence = new A(2267, 0x0040, 0xA168, V.SQ);
        public static readonly A PurposeOfReferenceCodeSequence = new A(2268, 0x0040, 0xA170, V.SQ);
        public static readonly A ObservationUID = new A(2269, 0x0040, 0xA171, V.UI);
        public static readonly A AnnotationGroupNumber = new A(2270, 0x0040, 0xA180, V.US);
        public static readonly A ModifierCodeSequence = new A(2271, 0x0040, 0xA195, V.SQ);
        public static readonly A MeasuredValueSequence = new A(2272, 0x0040, 0xA300, V.SQ);
        public static readonly A NumericValueQualifierCodeSequence = new A(2273, 0x0040, 0xA301, V.SQ);
        public static readonly A NumericValue = new A(2274, 0x0040, 0xA30A, V.DS);
        public static readonly A PredecessorDocumentsSequence = new A(2275, 0x0040, 0xA360, V.SQ);
        public static readonly A ReferencedRequestSequence = new A(2276, 0x0040, 0xA370, V.SQ);
        public static readonly A PerformedProcedureCodeSequence = new A(2277, 0x0040, 0xA372, V.SQ);
        public static readonly A CurrentRequestedProcedureEvidenceSequence = new A(2278, 0x0040, 0xA375, V.SQ);
        public static readonly A PertinentOtherEvidenceSequence = new A(2279, 0x0040, 0xA385, V.SQ);
        public static readonly A HL7StructuredDocumentReferenceSequence = new A(2280, 0x0040, 0xA390, V.SQ);
        public static readonly A CompletionFlag = new A(2281, 0x0040, 0xA491, V.CS);
        public static readonly A CompletionFlagDescription = new A(2282, 0x0040, 0xA492, V.LO);
        public static readonly A VerificationFlag = new A(2283, 0x0040, 0xA493, V.CS);
        public static readonly A ArchiveRequested = new A(2284, 0x0040, 0xA494, V.CS);
        public static readonly A PreliminaryFlag = new A(2285, 0x0040, 0xA496, V.CS);
        public static readonly A ContentTemplateSequence = new A(2286, 0x0040, 0xA504, V.SQ);
        public static readonly A IdenticalDocumentsSequence = new A(2287, 0x0040, 0xA525, V.SQ);
        public static readonly A ContentSequence = new A(2288, 0x0040, 0xA730, V.SQ);
        public static readonly A WaveformAnnotationSequence = new A(2289, 0x0040, 0xB020, V.SQ);
        public static readonly A TemplateIdentifier = new A(2290, 0x0040, 0xDB00, V.CS);
        public static readonly A ReferencedContentItemIdentifier = new A(2291, 0x0040, 0xDB73, V.UL);
        public static readonly A HL7InstanceIdentifier = new A(2292, 0x0040, 0xE001, V.ST);
        public static readonly A HL7DocumentEffectiveTime = new A(2293, 0x0040, 0xE004, V.DT);
        public static readonly A HL7DocumentTypeCodeSequence = new A(2294, 0x0040, 0xE006, V.SQ);
        public static readonly A DocumentClassCodeSequence = new A(2295, 0x0040, 0xE008, V.SQ);
        public static readonly A RetrieveURI = new A(2296, 0x0040, 0xE010, V.UR);
        public static readonly A RetrieveLocationUID = new A(2297, 0x0040, 0xE011, V.UI);
        public static readonly A TypeOfInstances = new A(2298, 0x0040, 0xE020, V.CS);
        public static readonly A DICOMRetrievalSequence = new A(2299, 0x0040, 0xE021, V.SQ);
        public static readonly A DICOMMediaRetrievalSequence = new A(2300, 0x0040, 0xE022, V.SQ);
        public static readonly A WADORetrievalSequence = new A(2301, 0x0040, 0xE023, V.SQ);
        public static readonly A XDSRetrievalSequence = new A(2302, 0x0040, 0xE024, V.SQ);
        public static readonly A WADORSRetrievalSequence = new A(2303, 0x0040, 0xE025, V.SQ);
        public static readonly A RepositoryUniqueID = new A(2304, 0x0040, 0xE030, V.UI);
        public static readonly A HomeCommunityID = new A(2305, 0x0040, 0xE031, V.UI);
        public static readonly A DocumentTitle = new A(2306, 0x0042, 0x0010, V.ST);
        public static readonly A EncapsulatedDocument = new A(2307, 0x0042, 0x0011, V.OB);
        public static readonly A MIMETypeOfEncapsulatedDocument = new A(2308, 0x0042, 0x0012, V.LO);
        public static readonly A SourceInstanceSequence = new A(2309, 0x0042, 0x0013, V.SQ);
        public static readonly A ListOfMIMETypes = new A(2310, 0x0042, 0x0014, V.LO);
        public static readonly A EncapsulatedDocumentLength = new A(2311, 0x0042, 0x0015, V.UL);
        public static readonly A ProductPackageIdentifier = new A(2312, 0x0044, 0x0001, V.ST);
        public static readonly A SubstanceAdministrationApproval = new A(2313, 0x0044, 0x0002, V.CS);
        public static readonly A ApprovalStatusFurtherDescription = new A(2314, 0x0044, 0x0003, V.LT);
        public static readonly A ApprovalStatusDateTime = new A(2315, 0x0044, 0x0004, V.DT);
        public static readonly A ProductTypeCodeSequence = new A(2316, 0x0044, 0x0007, V.SQ);
        public static readonly A ProductName = new A(2317, 0x0044, 0x0008, V.LO);
        public static readonly A ProductDescription = new A(2318, 0x0044, 0x0009, V.LT);
        public static readonly A ProductLotIdentifier = new A(2319, 0x0044, 0x000A, V.LO);
        public static readonly A ProductExpirationDateTime = new A(2320, 0x0044, 0x000B, V.DT);
        public static readonly A SubstanceAdministrationDateTime = new A(2321, 0x0044, 0x0010, V.DT);
        public static readonly A SubstanceAdministrationNotes = new A(2322, 0x0044, 0x0011, V.LO);
        public static readonly A SubstanceAdministrationDeviceID = new A(2323, 0x0044, 0x0012, V.LO);
        public static readonly A ProductParameterSequence = new A(2324, 0x0044, 0x0013, V.SQ);
        public static readonly A SubstanceAdministrationParameterSequence = new A(2325, 0x0044, 0x0019, V.SQ);
        public static readonly A ApprovalSequence = new A(2326, 0x0044, 0x0100, V.SQ);
        public static readonly A AssertionCodeSequence = new A(2327, 0x0044, 0x0101, V.SQ);
        public static readonly A AssertionUID = new A(2328, 0x0044, 0x0102, V.UI);
        public static readonly A AsserterIdentificationSequence = new A(2329, 0x0044, 0x0103, V.SQ);
        public static readonly A AssertionDateTime = new A(2330, 0x0044, 0x0104, V.DT);
        public static readonly A AssertionExpirationDateTime = new A(2331, 0x0044, 0x0105, V.DT);
        public static readonly A AssertionComments = new A(2332, 0x0044, 0x0106, V.UT);
        public static readonly A RelatedAssertionSequence = new A(2333, 0x0044, 0x0107, V.SQ);
        public static readonly A ReferencedAssertionUID = new A(2334, 0x0044, 0x0108, V.UI);
        public static readonly A ApprovalSubjectSequence = new A(2335, 0x0044, 0x0109, V.SQ);
        public static readonly A OrganizationalRoleCodeSequence = new A(2336, 0x0044, 0x010A, V.SQ);
        public static readonly A LensDescription = new A(2337, 0x0046, 0x0012, V.LO);
        public static readonly A RightLensSequence = new A(2338, 0x0046, 0x0014, V.SQ);
        public static readonly A LeftLensSequence = new A(2339, 0x0046, 0x0015, V.SQ);
        public static readonly A UnspecifiedLateralityLensSequence = new A(2340, 0x0046, 0x0016, V.SQ);
        public static readonly A CylinderSequence = new A(2341, 0x0046, 0x0018, V.SQ);
        public static readonly A PrismSequence = new A(2342, 0x0046, 0x0028, V.SQ);
        public static readonly A HorizontalPrismPower = new A(2343, 0x0046, 0x0030, V.FD);
        public static readonly A HorizontalPrismBase = new A(2344, 0x0046, 0x0032, V.CS);
        public static readonly A VerticalPrismPower = new A(2345, 0x0046, 0x0034, V.FD);
        public static readonly A VerticalPrismBase = new A(2346, 0x0046, 0x0036, V.CS);
        public static readonly A LensSegmentType = new A(2347, 0x0046, 0x0038, V.CS);
        public static readonly A OpticalTransmittance = new A(2348, 0x0046, 0x0040, V.FD);
        public static readonly A ChannelWidth = new A(2349, 0x0046, 0x0042, V.FD);
        public static readonly A PupilSize = new A(2350, 0x0046, 0x0044, V.FD);
        public static readonly A CornealSize = new A(2351, 0x0046, 0x0046, V.FD);
        public static readonly A CornealSizeSequence = new A(2352, 0x0046, 0x0047, V.SQ);
        public static readonly A AutorefractionRightEyeSequence = new A(2353, 0x0046, 0x0050, V.SQ);
        public static readonly A AutorefractionLeftEyeSequence = new A(2354, 0x0046, 0x0052, V.SQ);
        public static readonly A DistancePupillaryDistance = new A(2355, 0x0046, 0x0060, V.FD);
        public static readonly A NearPupillaryDistance = new A(2356, 0x0046, 0x0062, V.FD);
        public static readonly A IntermediatePupillaryDistance = new A(2357, 0x0046, 0x0063, V.FD);
        public static readonly A OtherPupillaryDistance = new A(2358, 0x0046, 0x0064, V.FD);
        public static readonly A KeratometryRightEyeSequence = new A(2359, 0x0046, 0x0070, V.SQ);
        public static readonly A KeratometryLeftEyeSequence = new A(2360, 0x0046, 0x0071, V.SQ);
        public static readonly A SteepKeratometricAxisSequence = new A(2361, 0x0046, 0x0074, V.SQ);
        public static readonly A RadiusOfCurvature = new A(2362, 0x0046, 0x0075, V.FD);
        public static readonly A KeratometricPower = new A(2363, 0x0046, 0x0076, V.FD);
        public static readonly A KeratometricAxis = new A(2364, 0x0046, 0x0077, V.FD);
        public static readonly A FlatKeratometricAxisSequence = new A(2365, 0x0046, 0x0080, V.SQ);
        public static readonly A BackgroundColor = new A(2366, 0x0046, 0x0092, V.CS);
        public static readonly A Optotype = new A(2367, 0x0046, 0x0094, V.CS);
        public static readonly A OptotypePresentation = new A(2368, 0x0046, 0x0095, V.CS);
        public static readonly A SubjectiveRefractionRightEyeSequence = new A(2369, 0x0046, 0x0097, V.SQ);
        public static readonly A SubjectiveRefractionLeftEyeSequence = new A(2370, 0x0046, 0x0098, V.SQ);
        public static readonly A AddNearSequence = new A(2371, 0x0046, 0x0100, V.SQ);
        public static readonly A AddIntermediateSequence = new A(2372, 0x0046, 0x0101, V.SQ);
        public static readonly A AddOtherSequence = new A(2373, 0x0046, 0x0102, V.SQ);
        public static readonly A AddPower = new A(2374, 0x0046, 0x0104, V.FD);
        public static readonly A ViewingDistance = new A(2375, 0x0046, 0x0106, V.FD);
        public static readonly A CorneaMeasurementsSequence = new A(2376, 0x0046, 0x0110, V.SQ);
        public static readonly A SourceOfCorneaMeasurementDataCodeSequence = new A(2377, 0x0046, 0x0111, V.SQ);
        public static readonly A SteepCornealAxisSequence = new A(2378, 0x0046, 0x0112, V.SQ);
        public static readonly A FlatCornealAxisSequence = new A(2379, 0x0046, 0x0113, V.SQ);
        public static readonly A CornealPower = new A(2380, 0x0046, 0x0114, V.FD);
        public static readonly A CornealAxis = new A(2381, 0x0046, 0x0115, V.FD);
        public static readonly A CorneaMeasurementMethodCodeSequence = new A(2382, 0x0046, 0x0116, V.SQ);
        public static readonly A RefractiveIndexOfCornea = new A(2383, 0x0046, 0x0117, V.FL);
        public static readonly A RefractiveIndexOfAqueousHumor = new A(2384, 0x0046, 0x0118, V.FL);
        public static readonly A VisualAcuityTypeCodeSequence = new A(2385, 0x0046, 0x0121, V.SQ);
        public static readonly A VisualAcuityRightEyeSequence = new A(2386, 0x0046, 0x0122, V.SQ);
        public static readonly A VisualAcuityLeftEyeSequence = new A(2387, 0x0046, 0x0123, V.SQ);
        public static readonly A VisualAcuityBothEyesOpenSequence = new A(2388, 0x0046, 0x0124, V.SQ);
        public static readonly A ViewingDistanceType = new A(2389, 0x0046, 0x0125, V.CS);
        public static readonly A VisualAcuityModifiers = new A(2390, 0x0046, 0x0135, V.SS);
        public static readonly A DecimalVisualAcuity = new A(2391, 0x0046, 0x0137, V.FD);
        public static readonly A OptotypeDetailedDefinition = new A(2392, 0x0046, 0x0139, V.LO);
        public static readonly A ReferencedRefractiveMeasurementsSequence = new A(2393, 0x0046, 0x0145, V.SQ);
        public static readonly A SpherePower = new A(2394, 0x0046, 0x0146, V.FD);
        public static readonly A CylinderPower = new A(2395, 0x0046, 0x0147, V.FD);
        public static readonly A CornealTopographySurface = new A(2396, 0x0046, 0x0201, V.CS);
        public static readonly A CornealVertexLocation = new A(2397, 0x0046, 0x0202, V.FL);
        public static readonly A PupilCentroidXCoordinate = new A(2398, 0x0046, 0x0203, V.FL);
        public static readonly A PupilCentroidYCoordinate = new A(2399, 0x0046, 0x0204, V.FL);
        public static readonly A EquivalentPupilRadius = new A(2400, 0x0046, 0x0205, V.FL);
        public static readonly A CornealTopographyMapTypeCodeSequence = new A(2401, 0x0046, 0x0207, V.SQ);
        public static readonly A VerticesOfTheOutlineOfPupil = new A(2402, 0x0046, 0x0208, V.IS);
        public static readonly A CornealTopographyMappingNormalsSequence = new A(2403, 0x0046, 0x0210, V.SQ);
        public static readonly A MaximumCornealCurvatureSequence = new A(2404, 0x0046, 0x0211, V.SQ);
        public static readonly A MaximumCornealCurvature = new A(2405, 0x0046, 0x0212, V.FL);
        public static readonly A MaximumCornealCurvatureLocation = new A(2406, 0x0046, 0x0213, V.FL);
        public static readonly A MinimumKeratometricSequence = new A(2407, 0x0046, 0x0215, V.SQ);
        public static readonly A SimulatedKeratometricCylinderSequence = new A(2408, 0x0046, 0x0218, V.SQ);
        public static readonly A AverageCornealPower = new A(2409, 0x0046, 0x0220, V.FL);
        public static readonly A CornealISValue = new A(2410, 0x0046, 0x0224, V.FL);
        public static readonly A AnalyzedArea = new A(2411, 0x0046, 0x0227, V.FL);
        public static readonly A SurfaceRegularityIndex = new A(2412, 0x0046, 0x0230, V.FL);
        public static readonly A SurfaceAsymmetryIndex = new A(2413, 0x0046, 0x0232, V.FL);
        public static readonly A CornealEccentricityIndex = new A(2414, 0x0046, 0x0234, V.FL);
        public static readonly A KeratoconusPredictionIndex = new A(2415, 0x0046, 0x0236, V.FL);
        public static readonly A DecimalPotentialVisualAcuity = new A(2416, 0x0046, 0x0238, V.FL);
        public static readonly A CornealTopographyMapQualityEvaluation = new A(2417, 0x0046, 0x0242, V.CS);
        public static readonly A SourceImageCornealProcessedDataSequence = new A(2418, 0x0046, 0x0244, V.SQ);
        public static readonly A CornealPointLocation = new A(2419, 0x0046, 0x0247, V.FL);
        public static readonly A CornealPointEstimated = new A(2420, 0x0046, 0x0248, V.CS);
        public static readonly A AxialPower = new A(2421, 0x0046, 0x0249, V.FL);
        public static readonly A TangentialPower = new A(2422, 0x0046, 0x0250, V.FL);
        public static readonly A RefractivePower = new A(2423, 0x0046, 0x0251, V.FL);
        public static readonly A RelativeElevation = new A(2424, 0x0046, 0x0252, V.FL);
        public static readonly A CornealWavefront = new A(2425, 0x0046, 0x0253, V.FL);
        public static readonly A ImagedVolumeWidth = new A(2426, 0x0048, 0x0001, V.FL);
        public static readonly A ImagedVolumeHeight = new A(2427, 0x0048, 0x0002, V.FL);
        public static readonly A ImagedVolumeDepth = new A(2428, 0x0048, 0x0003, V.FL);
        public static readonly A TotalPixelMatrixColumns = new A(2429, 0x0048, 0x0006, V.UL);
        public static readonly A TotalPixelMatrixRows = new A(2430, 0x0048, 0x0007, V.UL);
        public static readonly A TotalPixelMatrixOriginSequence = new A(2431, 0x0048, 0x0008, V.SQ);
        public static readonly A SpecimenLabelInImage = new A(2432, 0x0048, 0x0010, V.CS);
        public static readonly A FocusMethod = new A(2433, 0x0048, 0x0011, V.CS);
        public static readonly A ExtendedDepthOfField = new A(2434, 0x0048, 0x0012, V.CS);
        public static readonly A NumberOfFocalPlanes = new A(2435, 0x0048, 0x0013, V.US);
        public static readonly A DistanceBetweenFocalPlanes = new A(2436, 0x0048, 0x0014, V.FL);
        public static readonly A RecommendedAbsentPixelCIELabValue = new A(2437, 0x0048, 0x0015, V.US);
        public static readonly A IlluminatorTypeCodeSequence = new A(2438, 0x0048, 0x0100, V.SQ);
        public static readonly A ImageOrientationSlide = new A(2439, 0x0048, 0x0102, V.DS);
        public static readonly A OpticalPathSequence = new A(2440, 0x0048, 0x0105, V.SQ);
        public static readonly A OpticalPathIdentifier = new A(2441, 0x0048, 0x0106, V.SH);
        public static readonly A OpticalPathDescription = new A(2442, 0x0048, 0x0107, V.ST);
        public static readonly A IlluminationColorCodeSequence = new A(2443, 0x0048, 0x0108, V.SQ);
        public static readonly A SpecimenReferenceSequence = new A(2444, 0x0048, 0x0110, V.SQ);
        public static readonly A CondenserLensPower = new A(2445, 0x0048, 0x0111, V.DS);
        public static readonly A ObjectiveLensPower = new A(2446, 0x0048, 0x0112, V.DS);
        public static readonly A ObjectiveLensNumericalAperture = new A(2447, 0x0048, 0x0113, V.DS);
        public static readonly A PaletteColorLookupTableSequence = new A(2448, 0x0048, 0x0120, V.SQ);
        public static readonly A ReferencedImageNavigationSequence = new A(2449, 0x0048, 0x0200, V.SQ);
        public static readonly A TopLeftHandCornerOfLocalizerArea = new A(2450, 0x0048, 0x0201, V.US);
        public static readonly A BottomRightHandCornerOfLocalizerArea = new A(2451, 0x0048, 0x0202, V.US);
        public static readonly A OpticalPathIdentificationSequence = new A(2452, 0x0048, 0x0207, V.SQ);
        public static readonly A PlanePositionSlideSequence = new A(2453, 0x0048, 0x021A, V.SQ);
        public static readonly A ColumnPositionInTotalImagePixelMatrix = new A(2454, 0x0048, 0x021E, V.SL);
        public static readonly A RowPositionInTotalImagePixelMatrix = new A(2455, 0x0048, 0x021F, V.SL);
        public static readonly A PixelOriginInterpretation = new A(2456, 0x0048, 0x0301, V.CS);
        public static readonly A NumberOfOpticalPaths = new A(2457, 0x0048, 0x0302, V.UL);
        public static readonly A TotalPixelMatrixFocalPlanes = new A(2458, 0x0048, 0x0303, V.UL);
        public static readonly A CalibrationImage = new A(2459, 0x0050, 0x0004, V.CS);
        public static readonly A DeviceSequence = new A(2460, 0x0050, 0x0010, V.SQ);
        public static readonly A ContainerComponentTypeCodeSequence = new A(2461, 0x0050, 0x0012, V.SQ);
        public static readonly A ContainerComponentThickness = new A(2462, 0x0050, 0x0013, V.FD);
        public static readonly A DeviceLength = new A(2463, 0x0050, 0x0014, V.DS);
        public static readonly A ContainerComponentWidth = new A(2464, 0x0050, 0x0015, V.FD);
        public static readonly A DeviceDiameter = new A(2465, 0x0050, 0x0016, V.DS);
        public static readonly A DeviceDiameterUnits = new A(2466, 0x0050, 0x0017, V.CS);
        public static readonly A DeviceVolume = new A(2467, 0x0050, 0x0018, V.DS);
        public static readonly A InterMarkerDistance = new A(2468, 0x0050, 0x0019, V.DS);
        public static readonly A ContainerComponentMaterial = new A(2469, 0x0050, 0x001A, V.CS);
        public static readonly A ContainerComponentID = new A(2470, 0x0050, 0x001B, V.LO);
        public static readonly A ContainerComponentLength = new A(2471, 0x0050, 0x001C, V.FD);
        public static readonly A ContainerComponentDiameter = new A(2472, 0x0050, 0x001D, V.FD);
        public static readonly A ContainerComponentDescription = new A(2473, 0x0050, 0x001E, V.LO);
        public static readonly A DeviceDescription = new A(2474, 0x0050, 0x0020, V.LO);
        public static readonly A LongDeviceDescription = new A(2475, 0x0050, 0x0021, V.ST);
        public static readonly A ContrastBolusIngredientPercentByVolume = new A(2476, 0x0052, 0x0001, V.FL);
        public static readonly A OCTFocalDistance = new A(2477, 0x0052, 0x0002, V.FD);
        public static readonly A BeamSpotSize = new A(2478, 0x0052, 0x0003, V.FD);
        public static readonly A EffectiveRefractiveIndex = new A(2479, 0x0052, 0x0004, V.FD);
        public static readonly A OCTAcquisitionDomain = new A(2480, 0x0052, 0x0006, V.CS);
        public static readonly A OCTOpticalCenterWavelength = new A(2481, 0x0052, 0x0007, V.FD);
        public static readonly A AxialResolution = new A(2482, 0x0052, 0x0008, V.FD);
        public static readonly A RangingDepth = new A(2483, 0x0052, 0x0009, V.FD);
        public static readonly A ALineRate = new A(2484, 0x0052, 0x0011, V.FD);
        public static readonly A ALinesPerFrame = new A(2485, 0x0052, 0x0012, V.US);
        public static readonly A CatheterRotationalRate = new A(2486, 0x0052, 0x0013, V.FD);
        public static readonly A ALinePixelSpacing = new A(2487, 0x0052, 0x0014, V.FD);
        public static readonly A ModeOfPercutaneousAccessSequence = new A(2488, 0x0052, 0x0016, V.SQ);
        public static readonly A IntravascularOCTFrameTypeSequence = new A(2489, 0x0052, 0x0025, V.SQ);
        public static readonly A OCTZOffsetApplied = new A(2490, 0x0052, 0x0026, V.CS);
        public static readonly A IntravascularFrameContentSequence = new A(2491, 0x0052, 0x0027, V.SQ);
        public static readonly A IntravascularLongitudinalDistance = new A(2492, 0x0052, 0x0028, V.FD);
        public static readonly A IntravascularOCTFrameContentSequence = new A(2493, 0x0052, 0x0029, V.SQ);
        public static readonly A OCTZOffsetCorrection = new A(2494, 0x0052, 0x0030, V.SS);
        public static readonly A CatheterDirectionOfRotation = new A(2495, 0x0052, 0x0031, V.CS);
        public static readonly A SeamLineLocation = new A(2496, 0x0052, 0x0033, V.FD);
        public static readonly A FirstALineLocation = new A(2497, 0x0052, 0x0034, V.FD);
        public static readonly A SeamLineIndex = new A(2498, 0x0052, 0x0036, V.US);
        public static readonly A NumberOfPaddedALines = new A(2499, 0x0052, 0x0038, V.US);
        public static readonly A InterpolationType = new A(2500, 0x0052, 0x0039, V.CS);
        public static readonly A RefractiveIndexApplied = new A(2501, 0x0052, 0x003A, V.CS);
        public static readonly A EnergyWindowVector = new A(2502, 0x0054, 0x0010, V.US);
        public static readonly A NumberOfEnergyWindows = new A(2503, 0x0054, 0x0011, V.US);
        public static readonly A EnergyWindowInformationSequence = new A(2504, 0x0054, 0x0012, V.SQ);
        public static readonly A EnergyWindowRangeSequence = new A(2505, 0x0054, 0x0013, V.SQ);
        public static readonly A EnergyWindowLowerLimit = new A(2506, 0x0054, 0x0014, V.DS);
        public static readonly A EnergyWindowUpperLimit = new A(2507, 0x0054, 0x0015, V.DS);
        public static readonly A RadiopharmaceuticalInformationSequence = new A(2508, 0x0054, 0x0016, V.SQ);
        public static readonly A ResidualSyringeCounts = new A(2509, 0x0054, 0x0017, V.IS);
        public static readonly A EnergyWindowName = new A(2510, 0x0054, 0x0018, V.SH);
        public static readonly A DetectorVector = new A(2511, 0x0054, 0x0020, V.US);
        public static readonly A NumberOfDetectors = new A(2512, 0x0054, 0x0021, V.US);
        public static readonly A DetectorInformationSequence = new A(2513, 0x0054, 0x0022, V.SQ);
        public static readonly A PhaseVector = new A(2514, 0x0054, 0x0030, V.US);
        public static readonly A NumberOfPhases = new A(2515, 0x0054, 0x0031, V.US);
        public static readonly A PhaseInformationSequence = new A(2516, 0x0054, 0x0032, V.SQ);
        public static readonly A NumberOfFramesInPhase = new A(2517, 0x0054, 0x0033, V.US);
        public static readonly A PhaseDelay = new A(2518, 0x0054, 0x0036, V.IS);
        public static readonly A PauseBetweenFrames = new A(2519, 0x0054, 0x0038, V.IS);
        public static readonly A PhaseDescription = new A(2520, 0x0054, 0x0039, V.CS);
        public static readonly A RotationVector = new A(2521, 0x0054, 0x0050, V.US);
        public static readonly A NumberOfRotations = new A(2522, 0x0054, 0x0051, V.US);
        public static readonly A RotationInformationSequence = new A(2523, 0x0054, 0x0052, V.SQ);
        public static readonly A NumberOfFramesInRotation = new A(2524, 0x0054, 0x0053, V.US);
        public static readonly A RRIntervalVector = new A(2525, 0x0054, 0x0060, V.US);
        public static readonly A NumberOfRRIntervals = new A(2526, 0x0054, 0x0061, V.US);
        public static readonly A GatedInformationSequence = new A(2527, 0x0054, 0x0062, V.SQ);
        public static readonly A DataInformationSequence = new A(2528, 0x0054, 0x0063, V.SQ);
        public static readonly A TimeSlotVector = new A(2529, 0x0054, 0x0070, V.US);
        public static readonly A NumberOfTimeSlots = new A(2530, 0x0054, 0x0071, V.US);
        public static readonly A TimeSlotInformationSequence = new A(2531, 0x0054, 0x0072, V.SQ);
        public static readonly A TimeSlotTime = new A(2532, 0x0054, 0x0073, V.DS);
        public static readonly A SliceVector = new A(2533, 0x0054, 0x0080, V.US);
        public static readonly A NumberOfSlices = new A(2534, 0x0054, 0x0081, V.US);
        public static readonly A AngularViewVector = new A(2535, 0x0054, 0x0090, V.US);
        public static readonly A TimeSliceVector = new A(2536, 0x0054, 0x0100, V.US);
        public static readonly A NumberOfTimeSlices = new A(2537, 0x0054, 0x0101, V.US);
        public static readonly A StartAngle = new A(2538, 0x0054, 0x0200, V.DS);
        public static readonly A TypeOfDetectorMotion = new A(2539, 0x0054, 0x0202, V.CS);
        public static readonly A TriggerVector = new A(2540, 0x0054, 0x0210, V.IS);
        public static readonly A NumberOfTriggersInPhase = new A(2541, 0x0054, 0x0211, V.US);
        public static readonly A ViewCodeSequence = new A(2542, 0x0054, 0x0220, V.SQ);
        public static readonly A ViewModifierCodeSequence = new A(2543, 0x0054, 0x0222, V.SQ);
        public static readonly A RadionuclideCodeSequence = new A(2544, 0x0054, 0x0300, V.SQ);
        public static readonly A AdministrationRouteCodeSequence = new A(2545, 0x0054, 0x0302, V.SQ);
        public static readonly A RadiopharmaceuticalCodeSequence = new A(2546, 0x0054, 0x0304, V.SQ);
        public static readonly A CalibrationDataSequence = new A(2547, 0x0054, 0x0306, V.SQ);
        public static readonly A EnergyWindowNumber = new A(2548, 0x0054, 0x0308, V.US);
        public static readonly A ImageID = new A(2549, 0x0054, 0x0400, V.SH);
        public static readonly A PatientOrientationCodeSequence = new A(2550, 0x0054, 0x0410, V.SQ);
        public static readonly A PatientOrientationModifierCodeSequence = new A(2551, 0x0054, 0x0412, V.SQ);
        public static readonly A PatientGantryRelationshipCodeSequence = new A(2552, 0x0054, 0x0414, V.SQ);
        public static readonly A SliceProgressionDirection = new A(2553, 0x0054, 0x0500, V.CS);
        public static readonly A ScanProgressionDirection = new A(2554, 0x0054, 0x0501, V.CS);
        public static readonly A SeriesType = new A(2555, 0x0054, 0x1000, V.CS);
        public static readonly A Units = new A(2556, 0x0054, 0x1001, V.CS);
        public static readonly A CountsSource = new A(2557, 0x0054, 0x1002, V.CS);
        public static readonly A ReprojectionMethod = new A(2558, 0x0054, 0x1004, V.CS);
        public static readonly A SUVType = new A(2559, 0x0054, 0x1006, V.CS);
        public static readonly A RandomsCorrectionMethod = new A(2560, 0x0054, 0x1100, V.CS);
        public static readonly A AttenuationCorrectionMethod = new A(2561, 0x0054, 0x1101, V.LO);
        public static readonly A DecayCorrection = new A(2562, 0x0054, 0x1102, V.CS);
        public static readonly A ReconstructionMethod = new A(2563, 0x0054, 0x1103, V.LO);
        public static readonly A DetectorLinesOfResponseUsed = new A(2564, 0x0054, 0x1104, V.LO);
        public static readonly A ScatterCorrectionMethod = new A(2565, 0x0054, 0x1105, V.LO);
        public static readonly A AxialAcceptance = new A(2566, 0x0054, 0x1200, V.DS);
        public static readonly A AxialMash = new A(2567, 0x0054, 0x1201, V.IS);
        public static readonly A TransverseMash = new A(2568, 0x0054, 0x1202, V.IS);
        public static readonly A DetectorElementSize = new A(2569, 0x0054, 0x1203, V.DS);
        public static readonly A CoincidenceWindowWidth = new A(2570, 0x0054, 0x1210, V.DS);
        public static readonly A SecondaryCountsType = new A(2571, 0x0054, 0x1220, V.CS);
        public static readonly A FrameReferenceTime = new A(2572, 0x0054, 0x1300, V.DS);
        public static readonly A PrimaryPromptsCountsAccumulated = new A(2573, 0x0054, 0x1310, V.IS);
        public static readonly A SecondaryCountsAccumulated = new A(2574, 0x0054, 0x1311, V.IS);
        public static readonly A SliceSensitivityFactor = new A(2575, 0x0054, 0x1320, V.DS);
        public static readonly A DecayFactor = new A(2576, 0x0054, 0x1321, V.DS);
        public static readonly A DoseCalibrationFactor = new A(2577, 0x0054, 0x1322, V.DS);
        public static readonly A ScatterFractionFactor = new A(2578, 0x0054, 0x1323, V.DS);
        public static readonly A DeadTimeFactor = new A(2579, 0x0054, 0x1324, V.DS);
        public static readonly A ImageIndex = new A(2580, 0x0054, 0x1330, V.US);
        public static readonly A HistogramSequence = new A(2581, 0x0060, 0x3000, V.SQ);
        public static readonly A HistogramNumberOfBins = new A(2582, 0x0060, 0x3002, V.US);
        public static readonly A HistogramFirstBinValue = new A(2583, 0x0060, 0x3004, V.US, V.SS);
        public static readonly A HistogramLastBinValue = new A(2584, 0x0060, 0x3006, V.US, V.SS);
        public static readonly A HistogramBinWidth = new A(2585, 0x0060, 0x3008, V.US);
        public static readonly A HistogramExplanation = new A(2586, 0x0060, 0x3010, V.LO);
        public static readonly A HistogramData = new A(2587, 0x0060, 0x3020, V.UL);
        public static readonly A SegmentationType = new A(2588, 0x0062, 0x0001, V.CS);
        public static readonly A SegmentSequence = new A(2589, 0x0062, 0x0002, V.SQ);
        public static readonly A SegmentedPropertyCategoryCodeSequence = new A(2590, 0x0062, 0x0003, V.SQ);
        public static readonly A SegmentNumber = new A(2591, 0x0062, 0x0004, V.US);
        public static readonly A SegmentLabel = new A(2592, 0x0062, 0x0005, V.LO);
        public static readonly A SegmentDescription = new A(2593, 0x0062, 0x0006, V.ST);
        public static readonly A SegmentationAlgorithmIdentificationSequence = new A(2594, 0x0062, 0x0007, V.SQ);
        public static readonly A SegmentAlgorithmType = new A(2595, 0x0062, 0x0008, V.CS);
        public static readonly A SegmentAlgorithmName = new A(2596, 0x0062, 0x0009, V.LO);
        public static readonly A SegmentIdentificationSequence = new A(2597, 0x0062, 0x000A, V.SQ);
        public static readonly A ReferencedSegmentNumber = new A(2598, 0x0062, 0x000B, V.US);
        public static readonly A RecommendedDisplayGrayscaleValue = new A(2599, 0x0062, 0x000C, V.US);
        public static readonly A RecommendedDisplayCIELabValue = new A(2600, 0x0062, 0x000D, V.US);
        public static readonly A MaximumFractionalValue = new A(2601, 0x0062, 0x000E, V.US);
        public static readonly A SegmentedPropertyTypeCodeSequence = new A(2602, 0x0062, 0x000F, V.SQ);
        public static readonly A SegmentationFractionalType = new A(2603, 0x0062, 0x0010, V.CS);
        public static readonly A SegmentedPropertyTypeModifierCodeSequence = new A(2604, 0x0062, 0x0011, V.SQ);
        public static readonly A UsedSegmentsSequence = new A(2605, 0x0062, 0x0012, V.SQ);
        public static readonly A SegmentsOverlap = new A(2606, 0x0062, 0x0013, V.CS);
        public static readonly A TrackingID = new A(2607, 0x0062, 0x0020, V.UT);
        public static readonly A TrackingUID = new A(2608, 0x0062, 0x0021, V.UI);
        public static readonly A DeformableRegistrationSequence = new A(2609, 0x0064, 0x0002, V.SQ);
        public static readonly A SourceFrameOfReferenceUID = new A(2610, 0x0064, 0x0003, V.UI);
        public static readonly A DeformableRegistrationGridSequence = new A(2611, 0x0064, 0x0005, V.SQ);
        public static readonly A GridDimensions = new A(2612, 0x0064, 0x0007, V.UL);
        public static readonly A GridResolution = new A(2613, 0x0064, 0x0008, V.FD);
        public static readonly A VectorGridData = new A(2614, 0x0064, 0x0009, V.OF);
        public static readonly A PreDeformationMatrixRegistrationSequence = new A(2615, 0x0064, 0x000F, V.SQ);
        public static readonly A PostDeformationMatrixRegistrationSequence = new A(2616, 0x0064, 0x0010, V.SQ);
        public static readonly A NumberOfSurfaces = new A(2617, 0x0066, 0x0001, V.UL);
        public static readonly A SurfaceSequence = new A(2618, 0x0066, 0x0002, V.SQ);
        public static readonly A SurfaceNumber = new A(2619, 0x0066, 0x0003, V.UL);
        public static readonly A SurfaceComments = new A(2620, 0x0066, 0x0004, V.LT);
        public static readonly A SurfaceProcessing = new A(2621, 0x0066, 0x0009, V.CS);
        public static readonly A SurfaceProcessingRatio = new A(2622, 0x0066, 0x000A, V.FL);
        public static readonly A SurfaceProcessingDescription = new A(2623, 0x0066, 0x000B, V.LO);
        public static readonly A RecommendedPresentationOpacity = new A(2624, 0x0066, 0x000C, V.FL);
        public static readonly A RecommendedPresentationType = new A(2625, 0x0066, 0x000D, V.CS);
        public static readonly A FiniteVolume = new A(2626, 0x0066, 0x000E, V.CS);
        public static readonly A Manifold = new A(2627, 0x0066, 0x0010, V.CS);
        public static readonly A SurfacePointsSequence = new A(2628, 0x0066, 0x0011, V.SQ);
        public static readonly A SurfacePointsNormalsSequence = new A(2629, 0x0066, 0x0012, V.SQ);
        public static readonly A SurfaceMeshPrimitivesSequence = new A(2630, 0x0066, 0x0013, V.SQ);
        public static readonly A NumberOfSurfacePoints = new A(2631, 0x0066, 0x0015, V.UL);
        public static readonly A PointCoordinatesData = new A(2632, 0x0066, 0x0016, V.OF);
        public static readonly A PointPositionAccuracy = new A(2633, 0x0066, 0x0017, V.FL);
        public static readonly A MeanPointDistance = new A(2634, 0x0066, 0x0018, V.FL);
        public static readonly A MaximumPointDistance = new A(2635, 0x0066, 0x0019, V.FL);
        public static readonly A PointsBoundingBoxCoordinates = new A(2636, 0x0066, 0x001A, V.FL);
        public static readonly A AxisOfRotation = new A(2637, 0x0066, 0x001B, V.FL);
        public static readonly A CenterOfRotation = new A(2638, 0x0066, 0x001C, V.FL);
        public static readonly A NumberOfVectors = new A(2639, 0x0066, 0x001E, V.UL);
        public static readonly A VectorDimensionality = new A(2640, 0x0066, 0x001F, V.US);
        public static readonly A VectorAccuracy = new A(2641, 0x0066, 0x0020, V.FL);
        public static readonly A VectorCoordinateData = new A(2642, 0x0066, 0x0021, V.OF);
        public static readonly A TriangleStripSequence = new A(2643, 0x0066, 0x0026, V.SQ);
        public static readonly A TriangleFanSequence = new A(2644, 0x0066, 0x0027, V.SQ);
        public static readonly A LineSequence = new A(2645, 0x0066, 0x0028, V.SQ);
        public static readonly A SurfaceCount = new A(2646, 0x0066, 0x002A, V.UL);
        public static readonly A ReferencedSurfaceSequence = new A(2647, 0x0066, 0x002B, V.SQ);
        public static readonly A ReferencedSurfaceNumber = new A(2648, 0x0066, 0x002C, V.UL);
        public static readonly A SegmentSurfaceGenerationAlgorithmIdentificationSequence = new A(2649, 0x0066, 0x002D, V.SQ);
        public static readonly A SegmentSurfaceSourceInstanceSequence = new A(2650, 0x0066, 0x002E, V.SQ);
        public static readonly A AlgorithmFamilyCodeSequence = new A(2651, 0x0066, 0x002F, V.SQ);
        public static readonly A AlgorithmNameCodeSequence = new A(2652, 0x0066, 0x0030, V.SQ);
        public static readonly A AlgorithmVersion = new A(2653, 0x0066, 0x0031, V.LO);
        public static readonly A AlgorithmParameters = new A(2654, 0x0066, 0x0032, V.LT);
        public static readonly A FacetSequence = new A(2655, 0x0066, 0x0034, V.SQ);
        public static readonly A SurfaceProcessingAlgorithmIdentificationSequence = new A(2656, 0x0066, 0x0035, V.SQ);
        public static readonly A AlgorithmName = new A(2657, 0x0066, 0x0036, V.LO);
        public static readonly A RecommendedPointRadius = new A(2658, 0x0066, 0x0037, V.FL);
        public static readonly A RecommendedLineThickness = new A(2659, 0x0066, 0x0038, V.FL);
        public static readonly A LongPrimitivePointIndexList = new A(2660, 0x0066, 0x0040, V.OL);
        public static readonly A LongTrianglePointIndexList = new A(2661, 0x0066, 0x0041, V.OL);
        public static readonly A LongEdgePointIndexList = new A(2662, 0x0066, 0x0042, V.OL);
        public static readonly A LongVertexPointIndexList = new A(2663, 0x0066, 0x0043, V.OL);
        public static readonly A TrackSetSequence = new A(2664, 0x0066, 0x0101, V.SQ);
        public static readonly A TrackSequence = new A(2665, 0x0066, 0x0102, V.SQ);
        public static readonly A RecommendedDisplayCIELabValueList = new A(2666, 0x0066, 0x0103, V.OW);
        public static readonly A TrackingAlgorithmIdentificationSequence = new A(2667, 0x0066, 0x0104, V.SQ);
        public static readonly A TrackSetNumber = new A(2668, 0x0066, 0x0105, V.UL);
        public static readonly A TrackSetLabel = new A(2669, 0x0066, 0x0106, V.LO);
        public static readonly A TrackSetDescription = new A(2670, 0x0066, 0x0107, V.UT);
        public static readonly A TrackSetAnatomicalTypeCodeSequence = new A(2671, 0x0066, 0x0108, V.SQ);
        public static readonly A MeasurementsSequence = new A(2672, 0x0066, 0x0121, V.SQ);
        public static readonly A TrackSetStatisticsSequence = new A(2673, 0x0066, 0x0124, V.SQ);
        public static readonly A FloatingPointValues = new A(2674, 0x0066, 0x0125, V.OF);
        public static readonly A TrackPointIndexList = new A(2675, 0x0066, 0x0129, V.OL);
        public static readonly A TrackStatisticsSequence = new A(2676, 0x0066, 0x0130, V.SQ);
        public static readonly A MeasurementValuesSequence = new A(2677, 0x0066, 0x0132, V.SQ);
        public static readonly A DiffusionAcquisitionCodeSequence = new A(2678, 0x0066, 0x0133, V.SQ);
        public static readonly A DiffusionModelCodeSequence = new A(2679, 0x0066, 0x0134, V.SQ);
        public static readonly A ImplantSize = new A(2680, 0x0068, 0x6210, V.LO);
        public static readonly A ImplantTemplateVersion = new A(2681, 0x0068, 0x6221, V.LO);
        public static readonly A ReplacedImplantTemplateSequence = new A(2682, 0x0068, 0x6222, V.SQ);
        public static readonly A ImplantType = new A(2683, 0x0068, 0x6223, V.CS);
        public static readonly A DerivationImplantTemplateSequence = new A(2684, 0x0068, 0x6224, V.SQ);
        public static readonly A OriginalImplantTemplateSequence = new A(2685, 0x0068, 0x6225, V.SQ);
        public static readonly A EffectiveDateTime = new A(2686, 0x0068, 0x6226, V.DT);
        public static readonly A ImplantTargetAnatomySequence = new A(2687, 0x0068, 0x6230, V.SQ);
        public static readonly A InformationFromManufacturerSequence = new A(2688, 0x0068, 0x6260, V.SQ);
        public static readonly A NotificationFromManufacturerSequence = new A(2689, 0x0068, 0x6265, V.SQ);
        public static readonly A InformationIssueDateTime = new A(2690, 0x0068, 0x6270, V.DT);
        public static readonly A InformationSummary = new A(2691, 0x0068, 0x6280, V.ST);
        public static readonly A ImplantRegulatoryDisapprovalCodeSequence = new A(2692, 0x0068, 0x62A0, V.SQ);
        public static readonly A OverallTemplateSpatialTolerance = new A(2693, 0x0068, 0x62A5, V.FD);
        public static readonly A HPGLDocumentSequence = new A(2694, 0x0068, 0x62C0, V.SQ);
        public static readonly A HPGLDocumentID = new A(2695, 0x0068, 0x62D0, V.US);
        public static readonly A HPGLDocumentLabel = new A(2696, 0x0068, 0x62D5, V.LO);
        public static readonly A ViewOrientationCodeSequence = new A(2697, 0x0068, 0x62E0, V.SQ);
        public static readonly A ViewOrientationModifierCodeSequence = new A(2698, 0x0068, 0x62F0, V.SQ);
        public static readonly A HPGLDocumentScaling = new A(2699, 0x0068, 0x62F2, V.FD);
        public static readonly A HPGLDocument = new A(2700, 0x0068, 0x6300, V.OB);
        public static readonly A HPGLContourPenNumber = new A(2701, 0x0068, 0x6310, V.US);
        public static readonly A HPGLPenSequence = new A(2702, 0x0068, 0x6320, V.SQ);
        public static readonly A HPGLPenNumber = new A(2703, 0x0068, 0x6330, V.US);
        public static readonly A HPGLPenLabel = new A(2704, 0x0068, 0x6340, V.LO);
        public static readonly A HPGLPenDescription = new A(2705, 0x0068, 0x6345, V.ST);
        public static readonly A RecommendedRotationPoint = new A(2706, 0x0068, 0x6346, V.FD);
        public static readonly A BoundingRectangle = new A(2707, 0x0068, 0x6347, V.FD);
        public static readonly A ImplantTemplate3DModelSurfaceNumber = new A(2708, 0x0068, 0x6350, V.US);
        public static readonly A SurfaceModelDescriptionSequence = new A(2709, 0x0068, 0x6360, V.SQ);
        public static readonly A SurfaceModelLabel = new A(2710, 0x0068, 0x6380, V.LO);
        public static readonly A SurfaceModelScalingFactor = new A(2711, 0x0068, 0x6390, V.FD);
        public static readonly A MaterialsCodeSequence = new A(2712, 0x0068, 0x63A0, V.SQ);
        public static readonly A CoatingMaterialsCodeSequence = new A(2713, 0x0068, 0x63A4, V.SQ);
        public static readonly A ImplantTypeCodeSequence = new A(2714, 0x0068, 0x63A8, V.SQ);
        public static readonly A FixationMethodCodeSequence = new A(2715, 0x0068, 0x63AC, V.SQ);
        public static readonly A MatingFeatureSetsSequence = new A(2716, 0x0068, 0x63B0, V.SQ);
        public static readonly A MatingFeatureSetID = new A(2717, 0x0068, 0x63C0, V.US);
        public static readonly A MatingFeatureSetLabel = new A(2718, 0x0068, 0x63D0, V.LO);
        public static readonly A MatingFeatureSequence = new A(2719, 0x0068, 0x63E0, V.SQ);
        public static readonly A MatingFeatureID = new A(2720, 0x0068, 0x63F0, V.US);
        public static readonly A MatingFeatureDegreeOfFreedomSequence = new A(2721, 0x0068, 0x6400, V.SQ);
        public static readonly A DegreeOfFreedomID = new A(2722, 0x0068, 0x6410, V.US);
        public static readonly A DegreeOfFreedomType = new A(2723, 0x0068, 0x6420, V.CS);
        public static readonly A TwoDMatingFeatureCoordinatesSequence = new A(2724, 0x0068, 0x6430, V.SQ);
        public static readonly A ReferencedHPGLDocumentID = new A(2725, 0x0068, 0x6440, V.US);
        public static readonly A TwoDMatingPoint = new A(2726, 0x0068, 0x6450, V.FD);
        public static readonly A TwoDMatingAxes = new A(2727, 0x0068, 0x6460, V.FD);
        public static readonly A TwoDDegreeOfFreedomSequence = new A(2728, 0x0068, 0x6470, V.SQ);
        public static readonly A ThreeDDegreeOfFreedomAxis = new A(2729, 0x0068, 0x6490, V.FD);
        public static readonly A RangeOfFreedom = new A(2730, 0x0068, 0x64A0, V.FD);
        public static readonly A ThreeDMatingPoint = new A(2731, 0x0068, 0x64C0, V.FD);
        public static readonly A ThreeDMatingAxes = new A(2732, 0x0068, 0x64D0, V.FD);
        public static readonly A TwoDDegreeOfFreedomAxis = new A(2733, 0x0068, 0x64F0, V.FD);
        public static readonly A PlanningLandmarkPointSequence = new A(2734, 0x0068, 0x6500, V.SQ);
        public static readonly A PlanningLandmarkLineSequence = new A(2735, 0x0068, 0x6510, V.SQ);
        public static readonly A PlanningLandmarkPlaneSequence = new A(2736, 0x0068, 0x6520, V.SQ);
        public static readonly A PlanningLandmarkID = new A(2737, 0x0068, 0x6530, V.US);
        public static readonly A PlanningLandmarkDescription = new A(2738, 0x0068, 0x6540, V.LO);
        public static readonly A PlanningLandmarkIdentificationCodeSequence = new A(2739, 0x0068, 0x6545, V.SQ);
        public static readonly A TwoDPointCoordinatesSequence = new A(2740, 0x0068, 0x6550, V.SQ);
        public static readonly A TwoDPointCoordinates = new A(2741, 0x0068, 0x6560, V.FD);
        public static readonly A ThreeDPointCoordinates = new A(2742, 0x0068, 0x6590, V.FD);
        public static readonly A TwoDLineCoordinatesSequence = new A(2743, 0x0068, 0x65A0, V.SQ);
        public static readonly A TwoDLineCoordinates = new A(2744, 0x0068, 0x65B0, V.FD);
        public static readonly A ThreeDLineCoordinates = new A(2745, 0x0068, 0x65D0, V.FD);
        public static readonly A TwoDPlaneCoordinatesSequence = new A(2746, 0x0068, 0x65E0, V.SQ);
        public static readonly A TwoDPlaneIntersection = new A(2747, 0x0068, 0x65F0, V.FD);
        public static readonly A ThreeDPlaneOrigin = new A(2748, 0x0068, 0x6610, V.FD);
        public static readonly A ThreeDPlaneNormal = new A(2749, 0x0068, 0x6620, V.FD);
        public static readonly A ModelModification = new A(2750, 0x0068, 0x7001, V.CS);
        public static readonly A ModelMirroring = new A(2751, 0x0068, 0x7002, V.CS);
        public static readonly A ModelUsageCodeSequence = new A(2752, 0x0068, 0x7003, V.SQ);
        public static readonly A GraphicAnnotationSequence = new A(2753, 0x0070, 0x0001, V.SQ);
        public static readonly A GraphicLayer = new A(2754, 0x0070, 0x0002, V.CS);
        public static readonly A BoundingBoxAnnotationUnits = new A(2755, 0x0070, 0x0003, V.CS);
        public static readonly A AnchorPointAnnotationUnits = new A(2756, 0x0070, 0x0004, V.CS);
        public static readonly A GraphicAnnotationUnits = new A(2757, 0x0070, 0x0005, V.CS);
        public static readonly A UnformattedTextValue = new A(2758, 0x0070, 0x0006, V.ST);
        public static readonly A TextObjectSequence = new A(2759, 0x0070, 0x0008, V.SQ);
        public static readonly A GraphicObjectSequence = new A(2760, 0x0070, 0x0009, V.SQ);
        public static readonly A BoundingBoxTopLeftHandCorner = new A(2761, 0x0070, 0x0010, V.FL);
        public static readonly A BoundingBoxBottomRightHandCorner = new A(2762, 0x0070, 0x0011, V.FL);
        public static readonly A BoundingBoxTextHorizontalJustification = new A(2763, 0x0070, 0x0012, V.CS);
        public static readonly A AnchorPoint = new A(2764, 0x0070, 0x0014, V.FL);
        public static readonly A AnchorPointVisibility = new A(2765, 0x0070, 0x0015, V.CS);
        public static readonly A GraphicDimensions = new A(2766, 0x0070, 0x0020, V.US);
        public static readonly A NumberOfGraphicPoints = new A(2767, 0x0070, 0x0021, V.US);
        public static readonly A GraphicData = new A(2768, 0x0070, 0x0022, V.FL);
        public static readonly A GraphicType = new A(2769, 0x0070, 0x0023, V.CS);
        public static readonly A GraphicFilled = new A(2770, 0x0070, 0x0024, V.CS);
        public static readonly A ImageHorizontalFlip = new A(2771, 0x0070, 0x0041, V.CS);
        public static readonly A ImageRotation = new A(2772, 0x0070, 0x0042, V.US);
        public static readonly A DisplayedAreaTopLeftHandCorner = new A(2773, 0x0070, 0x0052, V.SL);
        public static readonly A DisplayedAreaBottomRightHandCorner = new A(2774, 0x0070, 0x0053, V.SL);
        public static readonly A DisplayedAreaSelectionSequence = new A(2775, 0x0070, 0x005A, V.SQ);
        public static readonly A GraphicLayerSequence = new A(2776, 0x0070, 0x0060, V.SQ);
        public static readonly A GraphicLayerOrder = new A(2777, 0x0070, 0x0062, V.IS);
        public static readonly A GraphicLayerRecommendedDisplayGrayscaleValue = new A(2778, 0x0070, 0x0066, V.US);
        public static readonly A GraphicLayerDescription = new A(2779, 0x0070, 0x0068, V.LO);
        public static readonly A ContentLabel = new A(2780, 0x0070, 0x0080, V.CS);
        public static readonly A ContentDescription = new A(2781, 0x0070, 0x0081, V.LO);
        public static readonly A PresentationCreationDate = new A(2782, 0x0070, 0x0082, V.DA);
        public static readonly A PresentationCreationTime = new A(2783, 0x0070, 0x0083, V.TM);
        public static readonly A ContentCreatorName = new A(2784, 0x0070, 0x0084, V.PN);
        public static readonly A ContentCreatorIdentificationCodeSequence = new A(2785, 0x0070, 0x0086, V.SQ);
        public static readonly A AlternateContentDescriptionSequence = new A(2786, 0x0070, 0x0087, V.SQ);
        public static readonly A PresentationSizeMode = new A(2787, 0x0070, 0x0100, V.CS);
        public static readonly A PresentationPixelSpacing = new A(2788, 0x0070, 0x0101, V.DS);
        public static readonly A PresentationPixelAspectRatio = new A(2789, 0x0070, 0x0102, V.IS);
        public static readonly A PresentationPixelMagnificationRatio = new A(2790, 0x0070, 0x0103, V.FL);
        public static readonly A GraphicGroupLabel = new A(2791, 0x0070, 0x0207, V.LO);
        public static readonly A GraphicGroupDescription = new A(2792, 0x0070, 0x0208, V.ST);
        public static readonly A CompoundGraphicSequence = new A(2793, 0x0070, 0x0209, V.SQ);
        public static readonly A CompoundGraphicInstanceID = new A(2794, 0x0070, 0x0226, V.UL);
        public static readonly A FontName = new A(2795, 0x0070, 0x0227, V.LO);
        public static readonly A FontNameType = new A(2796, 0x0070, 0x0228, V.CS);
        public static readonly A CSSFontName = new A(2797, 0x0070, 0x0229, V.LO);
        public static readonly A RotationAngle = new A(2798, 0x0070, 0x0230, V.FD);
        public static readonly A TextStyleSequence = new A(2799, 0x0070, 0x0231, V.SQ);
        public static readonly A LineStyleSequence = new A(2800, 0x0070, 0x0232, V.SQ);
        public static readonly A FillStyleSequence = new A(2801, 0x0070, 0x0233, V.SQ);
        public static readonly A GraphicGroupSequence = new A(2802, 0x0070, 0x0234, V.SQ);
        public static readonly A TextColorCIELabValue = new A(2803, 0x0070, 0x0241, V.US);
        public static readonly A HorizontalAlignment = new A(2804, 0x0070, 0x0242, V.CS);
        public static readonly A VerticalAlignment = new A(2805, 0x0070, 0x0243, V.CS);
        public static readonly A ShadowStyle = new A(2806, 0x0070, 0x0244, V.CS);
        public static readonly A ShadowOffsetX = new A(2807, 0x0070, 0x0245, V.FL);
        public static readonly A ShadowOffsetY = new A(2808, 0x0070, 0x0246, V.FL);
        public static readonly A ShadowColorCIELabValue = new A(2809, 0x0070, 0x0247, V.US);
        public static readonly A Underlined = new A(2810, 0x0070, 0x0248, V.CS);
        public static readonly A Bold = new A(2811, 0x0070, 0x0249, V.CS);
        public static readonly A Italic = new A(2812, 0x0070, 0x0250, V.CS);
        public static readonly A PatternOnColorCIELabValue = new A(2813, 0x0070, 0x0251, V.US);
        public static readonly A PatternOffColorCIELabValue = new A(2814, 0x0070, 0x0252, V.US);
        public static readonly A LineThickness = new A(2815, 0x0070, 0x0253, V.FL);
        public static readonly A LineDashingStyle = new A(2816, 0x0070, 0x0254, V.CS);
        public static readonly A LinePattern = new A(2817, 0x0070, 0x0255, V.UL);
        public static readonly A FillPattern = new A(2818, 0x0070, 0x0256, V.OB);
        public static readonly A FillMode = new A(2819, 0x0070, 0x0257, V.CS);
        public static readonly A ShadowOpacity = new A(2820, 0x0070, 0x0258, V.FL);
        public static readonly A GapLength = new A(2821, 0x0070, 0x0261, V.FL);
        public static readonly A DiameterOfVisibility = new A(2822, 0x0070, 0x0262, V.FL);
        public static readonly A RotationPoint = new A(2823, 0x0070, 0x0273, V.FL);
        public static readonly A TickAlignment = new A(2824, 0x0070, 0x0274, V.CS);
        public static readonly A ShowTickLabel = new A(2825, 0x0070, 0x0278, V.CS);
        public static readonly A TickLabelAlignment = new A(2826, 0x0070, 0x0279, V.CS);
        public static readonly A CompoundGraphicUnits = new A(2827, 0x0070, 0x0282, V.CS);
        public static readonly A PatternOnOpacity = new A(2828, 0x0070, 0x0284, V.FL);
        public static readonly A PatternOffOpacity = new A(2829, 0x0070, 0x0285, V.FL);
        public static readonly A MajorTicksSequence = new A(2830, 0x0070, 0x0287, V.SQ);
        public static readonly A TickPosition = new A(2831, 0x0070, 0x0288, V.FL);
        public static readonly A TickLabel = new A(2832, 0x0070, 0x0289, V.SH);
        public static readonly A CompoundGraphicType = new A(2833, 0x0070, 0x0294, V.CS);
        public static readonly A GraphicGroupID = new A(2834, 0x0070, 0x0295, V.UL);
        public static readonly A ShapeType = new A(2835, 0x0070, 0x0306, V.CS);
        public static readonly A RegistrationSequence = new A(2836, 0x0070, 0x0308, V.SQ);
        public static readonly A MatrixRegistrationSequence = new A(2837, 0x0070, 0x0309, V.SQ);
        public static readonly A MatrixSequence = new A(2838, 0x0070, 0x030A, V.SQ);
        public static readonly A FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix = new A(2839, 0x0070, 0x030B, V.FD);
        public static readonly A FrameOfReferenceTransformationMatrixType = new A(2840, 0x0070, 0x030C, V.CS);
        public static readonly A RegistrationTypeCodeSequence = new A(2841, 0x0070, 0x030D, V.SQ);
        public static readonly A FiducialDescription = new A(2842, 0x0070, 0x030F, V.ST);
        public static readonly A FiducialIdentifier = new A(2843, 0x0070, 0x0310, V.SH);
        public static readonly A FiducialIdentifierCodeSequence = new A(2844, 0x0070, 0x0311, V.SQ);
        public static readonly A ContourUncertaintyRadius = new A(2845, 0x0070, 0x0312, V.FD);
        public static readonly A UsedFiducialsSequence = new A(2846, 0x0070, 0x0314, V.SQ);
        public static readonly A GraphicCoordinatesDataSequence = new A(2847, 0x0070, 0x0318, V.SQ);
        public static readonly A FiducialUID = new A(2848, 0x0070, 0x031A, V.UI);
        public static readonly A ReferencedFiducialUID = new A(2849, 0x0070, 0x031B, V.UI);
        public static readonly A FiducialSetSequence = new A(2850, 0x0070, 0x031C, V.SQ);
        public static readonly A FiducialSequence = new A(2851, 0x0070, 0x031E, V.SQ);
        public static readonly A FiducialsPropertyCategoryCodeSequence = new A(2852, 0x0070, 0x031F, V.SQ);
        public static readonly A GraphicLayerRecommendedDisplayCIELabValue = new A(2853, 0x0070, 0x0401, V.US);
        public static readonly A BlendingSequence = new A(2854, 0x0070, 0x0402, V.SQ);
        public static readonly A RelativeOpacity = new A(2855, 0x0070, 0x0403, V.FL);
        public static readonly A ReferencedSpatialRegistrationSequence = new A(2856, 0x0070, 0x0404, V.SQ);
        public static readonly A BlendingPosition = new A(2857, 0x0070, 0x0405, V.CS);
        public static readonly A PresentationDisplayCollectionUID = new A(2858, 0x0070, 0x1101, V.UI);
        public static readonly A PresentationSequenceCollectionUID = new A(2859, 0x0070, 0x1102, V.UI);
        public static readonly A PresentationSequencePositionIndex = new A(2860, 0x0070, 0x1103, V.US);
        public static readonly A RenderedImageReferenceSequence = new A(2861, 0x0070, 0x1104, V.SQ);
        public static readonly A VolumetricPresentationStateInputSequence = new A(2862, 0x0070, 0x1201, V.SQ);
        public static readonly A PresentationInputType = new A(2863, 0x0070, 0x1202, V.CS);
        public static readonly A InputSequencePositionIndex = new A(2864, 0x0070, 0x1203, V.US);
        public static readonly A Crop = new A(2865, 0x0070, 0x1204, V.CS);
        public static readonly A CroppingSpecificationIndex = new A(2866, 0x0070, 0x1205, V.US);
        public static readonly A VolumetricPresentationInputNumber = new A(2867, 0x0070, 0x1207, V.US);
        public static readonly A ImageVolumeGeometry = new A(2868, 0x0070, 0x1208, V.CS);
        public static readonly A VolumetricPresentationInputSetUID = new A(2869, 0x0070, 0x1209, V.UI);
        public static readonly A VolumetricPresentationInputSetSequence = new A(2870, 0x0070, 0x120A, V.SQ);
        public static readonly A GlobalCrop = new A(2871, 0x0070, 0x120B, V.CS);
        public static readonly A GlobalCroppingSpecificationIndex = new A(2872, 0x0070, 0x120C, V.US);
        public static readonly A RenderingMethod = new A(2873, 0x0070, 0x120D, V.CS);
        public static readonly A VolumeCroppingSequence = new A(2874, 0x0070, 0x1301, V.SQ);
        public static readonly A VolumeCroppingMethod = new A(2875, 0x0070, 0x1302, V.CS);
        public static readonly A BoundingBoxCrop = new A(2876, 0x0070, 0x1303, V.FD);
        public static readonly A ObliqueCroppingPlaneSequence = new A(2877, 0x0070, 0x1304, V.SQ);
        public static readonly A Plane = new A(2878, 0x0070, 0x1305, V.FD);
        public static readonly A PlaneNormal = new A(2879, 0x0070, 0x1306, V.FD);
        public static readonly A CroppingSpecificationNumber = new A(2880, 0x0070, 0x1309, V.US);
        public static readonly A MultiPlanarReconstructionStyle = new A(2881, 0x0070, 0x1501, V.CS);
        public static readonly A MPRThicknessType = new A(2882, 0x0070, 0x1502, V.CS);
        public static readonly A MPRSlabThickness = new A(2883, 0x0070, 0x1503, V.FD);
        public static readonly A MPRTopLeftHandCorner = new A(2884, 0x0070, 0x1505, V.FD);
        public static readonly A MPRViewWidthDirection = new A(2885, 0x0070, 0x1507, V.FD);
        public static readonly A MPRViewWidth = new A(2886, 0x0070, 0x1508, V.FD);
        public static readonly A NumberOfVolumetricCurvePoints = new A(2887, 0x0070, 0x150C, V.UL);
        public static readonly A VolumetricCurvePoints = new A(2888, 0x0070, 0x150D, V.OD);
        public static readonly A MPRViewHeightDirection = new A(2889, 0x0070, 0x1511, V.FD);
        public static readonly A MPRViewHeight = new A(2890, 0x0070, 0x1512, V.FD);
        public static readonly A RenderProjection = new A(2891, 0x0070, 0x1602, V.CS);
        public static readonly A ViewpointPosition = new A(2892, 0x0070, 0x1603, V.FD);
        public static readonly A ViewpointLookAtPoint = new A(2893, 0x0070, 0x1604, V.FD);
        public static readonly A ViewpointUpDirection = new A(2894, 0x0070, 0x1605, V.FD);
        public static readonly A RenderFieldOfView = new A(2895, 0x0070, 0x1606, V.FD);
        public static readonly A SamplingStepSize = new A(2896, 0x0070, 0x1607, V.FD);
        public static readonly A ShadingStyle = new A(2897, 0x0070, 0x1701, V.CS);
        public static readonly A AmbientReflectionIntensity = new A(2898, 0x0070, 0x1702, V.FD);
        public static readonly A LightDirection = new A(2899, 0x0070, 0x1703, V.FD);
        public static readonly A DiffuseReflectionIntensity = new A(2900, 0x0070, 0x1704, V.FD);
        public static readonly A SpecularReflectionIntensity = new A(2901, 0x0070, 0x1705, V.FD);
        public static readonly A Shininess = new A(2902, 0x0070, 0x1706, V.FD);
        public static readonly A PresentationStateClassificationComponentSequence = new A(2903, 0x0070, 0x1801, V.SQ);
        public static readonly A ComponentType = new A(2904, 0x0070, 0x1802, V.CS);
        public static readonly A ComponentInputSequence = new A(2905, 0x0070, 0x1803, V.SQ);
        public static readonly A VolumetricPresentationInputIndex = new A(2906, 0x0070, 0x1804, V.US);
        public static readonly A PresentationStateCompositorComponentSequence = new A(2907, 0x0070, 0x1805, V.SQ);
        public static readonly A WeightingTransferFunctionSequence = new A(2908, 0x0070, 0x1806, V.SQ);
        public static readonly A WeightingLookupTableDescriptor = new A(2909, 0x0070, 0x1807, V.US);
        public static readonly A WeightingLookupTableData = new A(2910, 0x0070, 0x1808, V.OB);
        public static readonly A VolumetricAnnotationSequence = new A(2911, 0x0070, 0x1901, V.SQ);
        public static readonly A ReferencedStructuredContextSequence = new A(2912, 0x0070, 0x1903, V.SQ);
        public static readonly A ReferencedContentItem = new A(2913, 0x0070, 0x1904, V.UI);
        public static readonly A VolumetricPresentationInputAnnotationSequence = new A(2914, 0x0070, 0x1905, V.SQ);
        public static readonly A AnnotationClipping = new A(2915, 0x0070, 0x1907, V.CS);
        public static readonly A PresentationAnimationStyle = new A(2916, 0x0070, 0x1A01, V.CS);
        public static readonly A RecommendedAnimationRate = new A(2917, 0x0070, 0x1A03, V.FD);
        public static readonly A AnimationCurveSequence = new A(2918, 0x0070, 0x1A04, V.SQ);
        public static readonly A AnimationStepSize = new A(2919, 0x0070, 0x1A05, V.FD);
        public static readonly A SwivelRange = new A(2920, 0x0070, 0x1A06, V.FD);
        public static readonly A VolumetricCurveUpDirections = new A(2921, 0x0070, 0x1A07, V.OD);
        public static readonly A VolumeStreamSequence = new A(2922, 0x0070, 0x1A08, V.SQ);
        public static readonly A RGBATransferFunctionDescription = new A(2923, 0x0070, 0x1A09, V.LO);
        public static readonly A AdvancedBlendingSequence = new A(2924, 0x0070, 0x1B01, V.SQ);
        public static readonly A BlendingInputNumber = new A(2925, 0x0070, 0x1B02, V.US);
        public static readonly A BlendingDisplayInputSequence = new A(2926, 0x0070, 0x1B03, V.SQ);
        public static readonly A BlendingDisplaySequence = new A(2927, 0x0070, 0x1B04, V.SQ);
        public static readonly A BlendingMode = new A(2928, 0x0070, 0x1B06, V.CS);
        public static readonly A TimeSeriesBlending = new A(2929, 0x0070, 0x1B07, V.CS);
        public static readonly A GeometryForDisplay = new A(2930, 0x0070, 0x1B08, V.CS);
        public static readonly A ThresholdSequence = new A(2931, 0x0070, 0x1B11, V.SQ);
        public static readonly A ThresholdValueSequence = new A(2932, 0x0070, 0x1B12, V.SQ);
        public static readonly A ThresholdType = new A(2933, 0x0070, 0x1B13, V.CS);
        public static readonly A ThresholdValue = new A(2934, 0x0070, 0x1B14, V.FD);
        public static readonly A HangingProtocolName = new A(2935, 0x0072, 0x0002, V.SH);
        public static readonly A HangingProtocolDescription = new A(2936, 0x0072, 0x0004, V.LO);
        public static readonly A HangingProtocolLevel = new A(2937, 0x0072, 0x0006, V.CS);
        public static readonly A HangingProtocolCreator = new A(2938, 0x0072, 0x0008, V.LO);
        public static readonly A HangingProtocolCreationDateTime = new A(2939, 0x0072, 0x000A, V.DT);
        public static readonly A HangingProtocolDefinitionSequence = new A(2940, 0x0072, 0x000C, V.SQ);
        public static readonly A HangingProtocolUserIdentificationCodeSequence = new A(2941, 0x0072, 0x000E, V.SQ);
        public static readonly A HangingProtocolUserGroupName = new A(2942, 0x0072, 0x0010, V.LO);
        public static readonly A SourceHangingProtocolSequence = new A(2943, 0x0072, 0x0012, V.SQ);
        public static readonly A NumberOfPriorsReferenced = new A(2944, 0x0072, 0x0014, V.US);
        public static readonly A ImageSetsSequence = new A(2945, 0x0072, 0x0020, V.SQ);
        public static readonly A ImageSetSelectorSequence = new A(2946, 0x0072, 0x0022, V.SQ);
        public static readonly A ImageSetSelectorUsageFlag = new A(2947, 0x0072, 0x0024, V.CS);
        public static readonly A SelectorAttribute = new A(2948, 0x0072, 0x0026, V.AT);
        public static readonly A SelectorValueNumber = new A(2949, 0x0072, 0x0028, V.US);
        public static readonly A TimeBasedImageSetsSequence = new A(2950, 0x0072, 0x0030, V.SQ);
        public static readonly A ImageSetNumber = new A(2951, 0x0072, 0x0032, V.US);
        public static readonly A ImageSetSelectorCategory = new A(2952, 0x0072, 0x0034, V.CS);
        public static readonly A RelativeTime = new A(2953, 0x0072, 0x0038, V.US);
        public static readonly A RelativeTimeUnits = new A(2954, 0x0072, 0x003A, V.CS);
        public static readonly A AbstractPriorValue = new A(2955, 0x0072, 0x003C, V.SS);
        public static readonly A AbstractPriorCodeSequence = new A(2956, 0x0072, 0x003E, V.SQ);
        public static readonly A ImageSetLabel = new A(2957, 0x0072, 0x0040, V.LO);
        public static readonly A SelectorAttributeVR = new A(2958, 0x0072, 0x0050, V.CS);
        public static readonly A SelectorSequencePointer = new A(2959, 0x0072, 0x0052, V.AT);
        public static readonly A SelectorSequencePointerPrivateCreator = new A(2960, 0x0072, 0x0054, V.LO);
        public static readonly A SelectorAttributePrivateCreator = new A(2961, 0x0072, 0x0056, V.LO);
        public static readonly A SelectorAEValue = new A(2962, 0x0072, 0x005E, V.AE);
        public static readonly A SelectorASValue = new A(2963, 0x0072, 0x005F, V.AS);
        public static readonly A SelectorATValue = new A(2964, 0x0072, 0x0060, V.AT);
        public static readonly A SelectorDAValue = new A(2965, 0x0072, 0x0061, V.DA);
        public static readonly A SelectorCSValue = new A(2966, 0x0072, 0x0062, V.CS);
        public static readonly A SelectorDTValue = new A(2967, 0x0072, 0x0063, V.DT);
        public static readonly A SelectorISValue = new A(2968, 0x0072, 0x0064, V.IS);
        public static readonly A SelectorOBValue = new A(2969, 0x0072, 0x0065, V.OB);
        public static readonly A SelectorLOValue = new A(2970, 0x0072, 0x0066, V.LO);
        public static readonly A SelectorOFValue = new A(2971, 0x0072, 0x0067, V.OF);
        public static readonly A SelectorLTValue = new A(2972, 0x0072, 0x0068, V.LT);
        public static readonly A SelectorOWValue = new A(2973, 0x0072, 0x0069, V.OW);
        public static readonly A SelectorPNValue = new A(2974, 0x0072, 0x006A, V.PN);
        public static readonly A SelectorTMValue = new A(2975, 0x0072, 0x006B, V.TM);
        public static readonly A SelectorSHValue = new A(2976, 0x0072, 0x006C, V.SH);
        public static readonly A SelectorUNValue = new A(2977, 0x0072, 0x006D, V.UN);
        public static readonly A SelectorSTValue = new A(2978, 0x0072, 0x006E, V.ST);
        public static readonly A SelectorUCValue = new A(2979, 0x0072, 0x006F, V.UC);
        public static readonly A SelectorUTValue = new A(2980, 0x0072, 0x0070, V.UT);
        public static readonly A SelectorURValue = new A(2981, 0x0072, 0x0071, V.UR);
        public static readonly A SelectorDSValue = new A(2982, 0x0072, 0x0072, V.DS);
        public static readonly A SelectorODValue = new A(2983, 0x0072, 0x0073, V.OD);
        public static readonly A SelectorFDValue = new A(2984, 0x0072, 0x0074, V.FD);
        public static readonly A SelectorOLValue = new A(2985, 0x0072, 0x0075, V.OL);
        public static readonly A SelectorFLValue = new A(2986, 0x0072, 0x0076, V.FL);
        public static readonly A SelectorULValue = new A(2987, 0x0072, 0x0078, V.UL);
        public static readonly A SelectorUSValue = new A(2988, 0x0072, 0x007A, V.US);
        public static readonly A SelectorSLValue = new A(2989, 0x0072, 0x007C, V.SL);
        public static readonly A SelectorSSValue = new A(2990, 0x0072, 0x007E, V.SS);
        public static readonly A SelectorUIValue = new A(2991, 0x0072, 0x007F, V.UI);
        public static readonly A SelectorCodeSequenceValue = new A(2992, 0x0072, 0x0080, V.SQ);
        public static readonly A NumberOfScreens = new A(2993, 0x0072, 0x0100, V.US);
        public static readonly A NominalScreenDefinitionSequence = new A(2994, 0x0072, 0x0102, V.SQ);
        public static readonly A NumberOfVerticalPixels = new A(2995, 0x0072, 0x0104, V.US);
        public static readonly A NumberOfHorizontalPixels = new A(2996, 0x0072, 0x0106, V.US);
        public static readonly A DisplayEnvironmentSpatialPosition = new A(2997, 0x0072, 0x0108, V.FD);
        public static readonly A ScreenMinimumGrayscaleBitDepth = new A(2998, 0x0072, 0x010A, V.US);
        public static readonly A ScreenMinimumColorBitDepth = new A(2999, 0x0072, 0x010C, V.US);
        public static readonly A ApplicationMaximumRepaintTime = new A(3000, 0x0072, 0x010E, V.US);
        public static readonly A DisplaySetsSequence = new A(3001, 0x0072, 0x0200, V.SQ);
        public static readonly A DisplaySetNumber = new A(3002, 0x0072, 0x0202, V.US);
        public static readonly A DisplaySetLabel = new A(3003, 0x0072, 0x0203, V.LO);
        public static readonly A DisplaySetPresentationGroup = new A(3004, 0x0072, 0x0204, V.US);
        public static readonly A DisplaySetPresentationGroupDescription = new A(3005, 0x0072, 0x0206, V.LO);
        public static readonly A PartialDataDisplayHandling = new A(3006, 0x0072, 0x0208, V.CS);
        public static readonly A SynchronizedScrollingSequence = new A(3007, 0x0072, 0x0210, V.SQ);
        public static readonly A DisplaySetScrollingGroup = new A(3008, 0x0072, 0x0212, V.US);
        public static readonly A NavigationIndicatorSequence = new A(3009, 0x0072, 0x0214, V.SQ);
        public static readonly A NavigationDisplaySet = new A(3010, 0x0072, 0x0216, V.US);
        public static readonly A ReferenceDisplaySets = new A(3011, 0x0072, 0x0218, V.US);
        public static readonly A ImageBoxesSequence = new A(3012, 0x0072, 0x0300, V.SQ);
        public static readonly A ImageBoxNumber = new A(3013, 0x0072, 0x0302, V.US);
        public static readonly A ImageBoxLayoutType = new A(3014, 0x0072, 0x0304, V.CS);
        public static readonly A ImageBoxTileHorizontalDimension = new A(3015, 0x0072, 0x0306, V.US);
        public static readonly A ImageBoxTileVerticalDimension = new A(3016, 0x0072, 0x0308, V.US);
        public static readonly A ImageBoxScrollDirection = new A(3017, 0x0072, 0x0310, V.CS);
        public static readonly A ImageBoxSmallScrollType = new A(3018, 0x0072, 0x0312, V.CS);
        public static readonly A ImageBoxSmallScrollAmount = new A(3019, 0x0072, 0x0314, V.US);
        public static readonly A ImageBoxLargeScrollType = new A(3020, 0x0072, 0x0316, V.CS);
        public static readonly A ImageBoxLargeScrollAmount = new A(3021, 0x0072, 0x0318, V.US);
        public static readonly A ImageBoxOverlapPriority = new A(3022, 0x0072, 0x0320, V.US);
        public static readonly A CineRelativeToRealTime = new A(3023, 0x0072, 0x0330, V.FD);
        public static readonly A FilterOperationsSequence = new A(3024, 0x0072, 0x0400, V.SQ);
        public static readonly A FilterByCategory = new A(3025, 0x0072, 0x0402, V.CS);
        public static readonly A FilterByAttributePresence = new A(3026, 0x0072, 0x0404, V.CS);
        public static readonly A FilterByOperator = new A(3027, 0x0072, 0x0406, V.CS);
        public static readonly A StructuredDisplayBackgroundCIELabValue = new A(3028, 0x0072, 0x0420, V.US);
        public static readonly A EmptyImageBoxCIELabValue = new A(3029, 0x0072, 0x0421, V.US);
        public static readonly A StructuredDisplayImageBoxSequence = new A(3030, 0x0072, 0x0422, V.SQ);
        public static readonly A StructuredDisplayTextBoxSequence = new A(3031, 0x0072, 0x0424, V.SQ);
        public static readonly A ReferencedFirstFrameSequence = new A(3032, 0x0072, 0x0427, V.SQ);
        public static readonly A ImageBoxSynchronizationSequence = new A(3033, 0x0072, 0x0430, V.SQ);
        public static readonly A SynchronizedImageBoxList = new A(3034, 0x0072, 0x0432, V.US);
        public static readonly A TypeOfSynchronization = new A(3035, 0x0072, 0x0434, V.CS);
        public static readonly A BlendingOperationType = new A(3036, 0x0072, 0x0500, V.CS);
        public static readonly A ReformattingOperationType = new A(3037, 0x0072, 0x0510, V.CS);
        public static readonly A ReformattingThickness = new A(3038, 0x0072, 0x0512, V.FD);
        public static readonly A ReformattingInterval = new A(3039, 0x0072, 0x0514, V.FD);
        public static readonly A ReformattingOperationInitialViewDirection = new A(3040, 0x0072, 0x0516, V.CS);
        public static readonly A ThreeDRenderingType = new A(3041, 0x0072, 0x0520, V.CS);
        public static readonly A SortingOperationsSequence = new A(3042, 0x0072, 0x0600, V.SQ);
        public static readonly A SortByCategory = new A(3043, 0x0072, 0x0602, V.CS);
        public static readonly A SortingDirection = new A(3044, 0x0072, 0x0604, V.CS);
        public static readonly A DisplaySetPatientOrientation = new A(3045, 0x0072, 0x0700, V.CS);
        public static readonly A VOIType = new A(3046, 0x0072, 0x0702, V.CS);
        public static readonly A PseudoColorType = new A(3047, 0x0072, 0x0704, V.CS);
        public static readonly A PseudoColorPaletteInstanceReferenceSequence = new A(3048, 0x0072, 0x0705, V.SQ);
        public static readonly A ShowGrayscaleInverted = new A(3049, 0x0072, 0x0706, V.CS);
        public static readonly A ShowImageTrueSizeFlag = new A(3050, 0x0072, 0x0710, V.CS);
        public static readonly A ShowGraphicAnnotationFlag = new A(3051, 0x0072, 0x0712, V.CS);
        public static readonly A ShowPatientDemographicsFlag = new A(3052, 0x0072, 0x0714, V.CS);
        public static readonly A ShowAcquisitionTechniquesFlag = new A(3053, 0x0072, 0x0716, V.CS);
        public static readonly A DisplaySetHorizontalJustification = new A(3054, 0x0072, 0x0717, V.CS);
        public static readonly A DisplaySetVerticalJustification = new A(3055, 0x0072, 0x0718, V.CS);
        public static readonly A ContinuationStartMeterset = new A(3056, 0x0074, 0x0120, V.FD);
        public static readonly A ContinuationEndMeterset = new A(3057, 0x0074, 0x0121, V.FD);
        public static readonly A ProcedureStepState = new A(3058, 0x0074, 0x1000, V.CS);
        public static readonly A ProcedureStepProgressInformationSequence = new A(3059, 0x0074, 0x1002, V.SQ);
        public static readonly A ProcedureStepProgress = new A(3060, 0x0074, 0x1004, V.DS);
        public static readonly A ProcedureStepProgressDescription = new A(3061, 0x0074, 0x1006, V.ST);
        public static readonly A ProcedureStepProgressParametersSequence = new A(3062, 0x0074, 0x1007, V.SQ);
        public static readonly A ProcedureStepCommunicationsURISequence = new A(3063, 0x0074, 0x1008, V.SQ);
        public static readonly A ContactURI = new A(3064, 0x0074, 0x100A, V.UR);
        public static readonly A ContactDisplayName = new A(3065, 0x0074, 0x100C, V.LO);
        public static readonly A ProcedureStepDiscontinuationReasonCodeSequence = new A(3066, 0x0074, 0x100E, V.SQ);
        public static readonly A BeamTaskSequence = new A(3067, 0x0074, 0x1020, V.SQ);
        public static readonly A BeamTaskType = new A(3068, 0x0074, 0x1022, V.CS);
        public static readonly A AutosequenceFlag = new A(3069, 0x0074, 0x1025, V.CS);
        public static readonly A TableTopVerticalAdjustedPosition = new A(3070, 0x0074, 0x1026, V.FD);
        public static readonly A TableTopLongitudinalAdjustedPosition = new A(3071, 0x0074, 0x1027, V.FD);
        public static readonly A TableTopLateralAdjustedPosition = new A(3072, 0x0074, 0x1028, V.FD);
        public static readonly A PatientSupportAdjustedAngle = new A(3073, 0x0074, 0x102A, V.FD);
        public static readonly A TableTopEccentricAdjustedAngle = new A(3074, 0x0074, 0x102B, V.FD);
        public static readonly A TableTopPitchAdjustedAngle = new A(3075, 0x0074, 0x102C, V.FD);
        public static readonly A TableTopRollAdjustedAngle = new A(3076, 0x0074, 0x102D, V.FD);
        public static readonly A DeliveryVerificationImageSequence = new A(3077, 0x0074, 0x1030, V.SQ);
        public static readonly A VerificationImageTiming = new A(3078, 0x0074, 0x1032, V.CS);
        public static readonly A DoubleExposureFlag = new A(3079, 0x0074, 0x1034, V.CS);
        public static readonly A DoubleExposureOrdering = new A(3080, 0x0074, 0x1036, V.CS);
        public static readonly A RelatedReferenceRTImageSequence = new A(3081, 0x0074, 0x1040, V.SQ);
        public static readonly A GeneralMachineVerificationSequence = new A(3082, 0x0074, 0x1042, V.SQ);
        public static readonly A ConventionalMachineVerificationSequence = new A(3083, 0x0074, 0x1044, V.SQ);
        public static readonly A IonMachineVerificationSequence = new A(3084, 0x0074, 0x1046, V.SQ);
        public static readonly A FailedAttributesSequence = new A(3085, 0x0074, 0x1048, V.SQ);
        public static readonly A OverriddenAttributesSequence = new A(3086, 0x0074, 0x104A, V.SQ);
        public static readonly A ConventionalControlPointVerificationSequence = new A(3087, 0x0074, 0x104C, V.SQ);
        public static readonly A IonControlPointVerificationSequence = new A(3088, 0x0074, 0x104E, V.SQ);
        public static readonly A AttributeOccurrenceSequence = new A(3089, 0x0074, 0x1050, V.SQ);
        public static readonly A AttributeOccurrencePointer = new A(3090, 0x0074, 0x1052, V.AT);
        public static readonly A AttributeItemSelector = new A(3091, 0x0074, 0x1054, V.UL);
        public static readonly A AttributeOccurrencePrivateCreator = new A(3092, 0x0074, 0x1056, V.LO);
        public static readonly A SelectorSequencePointerItems = new A(3093, 0x0074, 0x1057, V.IS);
        public static readonly A ScheduledProcedureStepPriority = new A(3094, 0x0074, 0x1200, V.CS);
        public static readonly A WorklistLabel = new A(3095, 0x0074, 0x1202, V.LO);
        public static readonly A ProcedureStepLabel = new A(3096, 0x0074, 0x1204, V.LO);
        public static readonly A ScheduledProcessingParametersSequence = new A(3097, 0x0074, 0x1210, V.SQ);
        public static readonly A PerformedProcessingParametersSequence = new A(3098, 0x0074, 0x1212, V.SQ);
        public static readonly A UnifiedProcedureStepPerformedProcedureSequence = new A(3099, 0x0074, 0x1216, V.SQ);
        public static readonly A ReplacedProcedureStepSequence = new A(3100, 0x0074, 0x1224, V.SQ);
        public static readonly A DeletionLock = new A(3101, 0x0074, 0x1230, V.LO);
        public static readonly A ReceivingAE = new A(3102, 0x0074, 0x1234, V.AE);
        public static readonly A RequestingAE = new A(3103, 0x0074, 0x1236, V.AE);
        public static readonly A ReasonForCancellation = new A(3104, 0x0074, 0x1238, V.LT);
        public static readonly A SCPStatus = new A(3105, 0x0074, 0x1242, V.CS);
        public static readonly A SubscriptionListStatus = new A(3106, 0x0074, 0x1244, V.CS);
        public static readonly A UnifiedProcedureStepListStatus = new A(3107, 0x0074, 0x1246, V.CS);
        public static readonly A BeamOrderIndex = new A(3108, 0x0074, 0x1324, V.UL);
        public static readonly A DoubleExposureMeterset = new A(3109, 0x0074, 0x1338, V.FD);
        public static readonly A DoubleExposureFieldDelta = new A(3110, 0x0074, 0x133A, V.FD);
        public static readonly A BrachyTaskSequence = new A(3111, 0x0074, 0x1401, V.SQ);
        public static readonly A ContinuationStartTotalReferenceAirKerma = new A(3112, 0x0074, 0x1402, V.DS);
        public static readonly A ContinuationEndTotalReferenceAirKerma = new A(3113, 0x0074, 0x1403, V.DS);
        public static readonly A ContinuationPulseNumber = new A(3114, 0x0074, 0x1404, V.IS);
        public static readonly A ChannelDeliveryOrderSequence = new A(3115, 0x0074, 0x1405, V.SQ);
        public static readonly A ReferencedChannelNumber = new A(3116, 0x0074, 0x1406, V.IS);
        public static readonly A StartCumulativeTimeWeight = new A(3117, 0x0074, 0x1407, V.DS);
        public static readonly A EndCumulativeTimeWeight = new A(3118, 0x0074, 0x1408, V.DS);
        public static readonly A OmittedChannelSequence = new A(3119, 0x0074, 0x1409, V.SQ);
        public static readonly A ReasonForChannelOmission = new A(3120, 0x0074, 0x140A, V.CS);
        public static readonly A ReasonForChannelOmissionDescription = new A(3121, 0x0074, 0x140B, V.LO);
        public static readonly A ChannelDeliveryOrderIndex = new A(3122, 0x0074, 0x140C, V.IS);
        public static readonly A ChannelDeliveryContinuationSequence = new A(3123, 0x0074, 0x140D, V.SQ);
        public static readonly A OmittedApplicationSetupSequence = new A(3124, 0x0074, 0x140E, V.SQ);
        public static readonly A ImplantAssemblyTemplateName = new A(3125, 0x0076, 0x0001, V.LO);
        public static readonly A ImplantAssemblyTemplateIssuer = new A(3126, 0x0076, 0x0003, V.LO);
        public static readonly A ImplantAssemblyTemplateVersion = new A(3127, 0x0076, 0x0006, V.LO);
        public static readonly A ReplacedImplantAssemblyTemplateSequence = new A(3128, 0x0076, 0x0008, V.SQ);
        public static readonly A ImplantAssemblyTemplateType = new A(3129, 0x0076, 0x000A, V.CS);
        public static readonly A OriginalImplantAssemblyTemplateSequence = new A(3130, 0x0076, 0x000C, V.SQ);
        public static readonly A DerivationImplantAssemblyTemplateSequence = new A(3131, 0x0076, 0x000E, V.SQ);
        public static readonly A ImplantAssemblyTemplateTargetAnatomySequence = new A(3132, 0x0076, 0x0010, V.SQ);
        public static readonly A ProcedureTypeCodeSequence = new A(3133, 0x0076, 0x0020, V.SQ);
        public static readonly A SurgicalTechnique = new A(3134, 0x0076, 0x0030, V.LO);
        public static readonly A ComponentTypesSequence = new A(3135, 0x0076, 0x0032, V.SQ);
        public static readonly A ComponentTypeCodeSequence = new A(3136, 0x0076, 0x0034, V.SQ);
        public static readonly A ExclusiveComponentType = new A(3137, 0x0076, 0x0036, V.CS);
        public static readonly A MandatoryComponentType = new A(3138, 0x0076, 0x0038, V.CS);
        public static readonly A ComponentSequence = new A(3139, 0x0076, 0x0040, V.SQ);
        public static readonly A ComponentID = new A(3140, 0x0076, 0x0055, V.US);
        public static readonly A ComponentAssemblySequence = new A(3141, 0x0076, 0x0060, V.SQ);
        public static readonly A Component1ReferencedID = new A(3142, 0x0076, 0x0070, V.US);
        public static readonly A Component1ReferencedMatingFeatureSetID = new A(3143, 0x0076, 0x0080, V.US);
        public static readonly A Component1ReferencedMatingFeatureID = new A(3144, 0x0076, 0x0090, V.US);
        public static readonly A Component2ReferencedID = new A(3145, 0x0076, 0x00A0, V.US);
        public static readonly A Component2ReferencedMatingFeatureSetID = new A(3146, 0x0076, 0x00B0, V.US);
        public static readonly A Component2ReferencedMatingFeatureID = new A(3147, 0x0076, 0x00C0, V.US);
        public static readonly A ImplantTemplateGroupName = new A(3148, 0x0078, 0x0001, V.LO);
        public static readonly A ImplantTemplateGroupDescription = new A(3149, 0x0078, 0x0010, V.ST);
        public static readonly A ImplantTemplateGroupIssuer = new A(3150, 0x0078, 0x0020, V.LO);
        public static readonly A ImplantTemplateGroupVersion = new A(3151, 0x0078, 0x0024, V.LO);
        public static readonly A ReplacedImplantTemplateGroupSequence = new A(3152, 0x0078, 0x0026, V.SQ);
        public static readonly A ImplantTemplateGroupTargetAnatomySequence = new A(3153, 0x0078, 0x0028, V.SQ);
        public static readonly A ImplantTemplateGroupMembersSequence = new A(3154, 0x0078, 0x002A, V.SQ);
        public static readonly A ImplantTemplateGroupMemberID = new A(3155, 0x0078, 0x002E, V.US);
        public static readonly A ThreeDImplantTemplateGroupMemberMatchingPoint = new A(3156, 0x0078, 0x0050, V.FD);
        public static readonly A ThreeDImplantTemplateGroupMemberMatchingAxes = new A(3157, 0x0078, 0x0060, V.FD);
        public static readonly A ImplantTemplateGroupMemberMatching2DCoordinatesSequence = new A(3158, 0x0078, 0x0070, V.SQ);
        public static readonly A TwoDImplantTemplateGroupMemberMatchingPoint = new A(3159, 0x0078, 0x0090, V.FD);
        public static readonly A TwoDImplantTemplateGroupMemberMatchingAxes = new A(3160, 0x0078, 0x00A0, V.FD);
        public static readonly A ImplantTemplateGroupVariationDimensionSequence = new A(3161, 0x0078, 0x00B0, V.SQ);
        public static readonly A ImplantTemplateGroupVariationDimensionName = new A(3162, 0x0078, 0x00B2, V.LO);
        public static readonly A ImplantTemplateGroupVariationDimensionRankSequence = new A(3163, 0x0078, 0x00B4, V.SQ);
        public static readonly A ReferencedImplantTemplateGroupMemberID = new A(3164, 0x0078, 0x00B6, V.US);
        public static readonly A ImplantTemplateGroupVariationDimensionRank = new A(3165, 0x0078, 0x00B8, V.US);
        public static readonly A SurfaceScanAcquisitionTypeCodeSequence = new A(3166, 0x0080, 0x0001, V.SQ);
        public static readonly A SurfaceScanModeCodeSequence = new A(3167, 0x0080, 0x0002, V.SQ);
        public static readonly A RegistrationMethodCodeSequence = new A(3168, 0x0080, 0x0003, V.SQ);
        public static readonly A ShotDurationTime = new A(3169, 0x0080, 0x0004, V.FD);
        public static readonly A ShotOffsetTime = new A(3170, 0x0080, 0x0005, V.FD);
        public static readonly A SurfacePointPresentationValueData = new A(3171, 0x0080, 0x0006, V.US);
        public static readonly A SurfacePointColorCIELabValueData = new A(3172, 0x0080, 0x0007, V.US);
        public static readonly A UVMappingSequence = new A(3173, 0x0080, 0x0008, V.SQ);
        public static readonly A TextureLabel = new A(3174, 0x0080, 0x0009, V.SH);
        public static readonly A UValueData = new A(3175, 0x0080, 0x0010, V.OF);
        public static readonly A VValueData = new A(3176, 0x0080, 0x0011, V.OF);
        public static readonly A ReferencedTextureSequence = new A(3177, 0x0080, 0x0012, V.SQ);
        public static readonly A ReferencedSurfaceDataSequence = new A(3178, 0x0080, 0x0013, V.SQ);
        public static readonly A AssessmentSummary = new A(3179, 0x0082, 0x0001, V.CS);
        public static readonly A AssessmentSummaryDescription = new A(3180, 0x0082, 0x0003, V.UT);
        public static readonly A AssessedSOPInstanceSequence = new A(3181, 0x0082, 0x0004, V.SQ);
        public static readonly A ReferencedComparisonSOPInstanceSequence = new A(3182, 0x0082, 0x0005, V.SQ);
        public static readonly A NumberOfAssessmentObservations = new A(3183, 0x0082, 0x0006, V.UL);
        public static readonly A AssessmentObservationsSequence = new A(3184, 0x0082, 0x0007, V.SQ);
        public static readonly A ObservationSignificance = new A(3185, 0x0082, 0x0008, V.CS);
        public static readonly A ObservationDescription = new A(3186, 0x0082, 0x000A, V.UT);
        public static readonly A StructuredConstraintObservationSequence = new A(3187, 0x0082, 0x000C, V.SQ);
        public static readonly A AssessedAttributeValueSequence = new A(3188, 0x0082, 0x0010, V.SQ);
        public static readonly A AssessmentSetID = new A(3189, 0x0082, 0x0016, V.LO);
        public static readonly A AssessmentRequesterSequence = new A(3190, 0x0082, 0x0017, V.SQ);
        public static readonly A SelectorAttributeName = new A(3191, 0x0082, 0x0018, V.LO);
        public static readonly A SelectorAttributeKeyword = new A(3192, 0x0082, 0x0019, V.LO);
        public static readonly A AssessmentTypeCodeSequence = new A(3193, 0x0082, 0x0021, V.SQ);
        public static readonly A ObservationBasisCodeSequence = new A(3194, 0x0082, 0x0022, V.SQ);
        public static readonly A AssessmentLabel = new A(3195, 0x0082, 0x0023, V.LO);
        public static readonly A ConstraintType = new A(3196, 0x0082, 0x0032, V.CS);
        public static readonly A SpecificationSelectionGuidance = new A(3197, 0x0082, 0x0033, V.UT);
        public static readonly A ConstraintValueSequence = new A(3198, 0x0082, 0x0034, V.SQ);
        public static readonly A RecommendedDefaultValueSequence = new A(3199, 0x0082, 0x0035, V.SQ);
        public static readonly A ConstraintViolationSignificance = new A(3200, 0x0082, 0x0036, V.CS);
        public static readonly A ConstraintViolationCondition = new A(3201, 0x0082, 0x0037, V.UT);
        public static readonly A ModifiableConstraintFlag = new A(3202, 0x0082, 0x0038, V.CS);
        public static readonly A StorageMediaFileSetID = new A(3203, 0x0088, 0x0130, V.SH);
        public static readonly A StorageMediaFileSetUID = new A(3204, 0x0088, 0x0140, V.UI);
        public static readonly A IconImageSequence = new A(3205, 0x0088, 0x0200, V.SQ);
        public static readonly A SOPInstanceStatus = new A(3206, 0x0100, 0x0410, V.CS);
        public static readonly A SOPAuthorizationDateTime = new A(3207, 0x0100, 0x0420, V.DT);
        public static readonly A SOPAuthorizationComment = new A(3208, 0x0100, 0x0424, V.LT);
        public static readonly A AuthorizationEquipmentCertificationNumber = new A(3209, 0x0100, 0x0426, V.LO);
        public static readonly A MACIDNumber = new A(3210, 0x0400, 0x0005, V.US);
        public static readonly A MACCalculationTransferSyntaxUID = new A(3211, 0x0400, 0x0010, V.UI);
        public static readonly A MACAlgorithm = new A(3212, 0x0400, 0x0015, V.CS);
        public static readonly A DataElementsSigned = new A(3213, 0x0400, 0x0020, V.AT);
        public static readonly A DigitalSignatureUID = new A(3214, 0x0400, 0x0100, V.UI);
        public static readonly A DigitalSignatureDateTime = new A(3215, 0x0400, 0x0105, V.DT);
        public static readonly A CertificateType = new A(3216, 0x0400, 0x0110, V.CS);
        public static readonly A CertificateOfSigner = new A(3217, 0x0400, 0x0115, V.OB);
        public static readonly A Signature = new A(3218, 0x0400, 0x0120, V.OB);
        public static readonly A CertifiedTimestampType = new A(3219, 0x0400, 0x0305, V.CS);
        public static readonly A CertifiedTimestamp = new A(3220, 0x0400, 0x0310, V.OB);
        public static readonly A DigitalSignaturePurposeCodeSequence = new A(3221, 0x0400, 0x0401, V.SQ);
        public static readonly A ReferencedDigitalSignatureSequence = new A(3222, 0x0400, 0x0402, V.SQ);
        public static readonly A ReferencedSOPInstanceMACSequence = new A(3223, 0x0400, 0x0403, V.SQ);
        public static readonly A MAC = new A(3224, 0x0400, 0x0404, V.OB);
        public static readonly A EncryptedAttributesSequence = new A(3225, 0x0400, 0x0500, V.SQ);
        public static readonly A EncryptedContentTransferSyntaxUID = new A(3226, 0x0400, 0x0510, V.UI);
        public static readonly A EncryptedContent = new A(3227, 0x0400, 0x0520, V.OB);
        public static readonly A ModifiedAttributesSequence = new A(3228, 0x0400, 0x0550, V.SQ);
        public static readonly A NonconformingModifiedAttributesSequence = new A(3229, 0x0400, 0x0551, V.SQ);
        public static readonly A NonconformingDataElementValue = new A(3230, 0x0400, 0x0552, V.OB);
        public static readonly A OriginalAttributesSequence = new A(3231, 0x0400, 0x0561, V.SQ);
        public static readonly A AttributeModificationDateTime = new A(3232, 0x0400, 0x0562, V.DT);
        public static readonly A ModifyingSystem = new A(3233, 0x0400, 0x0563, V.LO);
        public static readonly A SourceOfPreviousValues = new A(3234, 0x0400, 0x0564, V.LO);
        public static readonly A ReasonForTheAttributeModification = new A(3235, 0x0400, 0x0565, V.CS);
        public static readonly A InstanceOriginStatus = new A(3236, 0x0400, 0x0600, V.CS);
        public static readonly A NumberOfCopies = new A(3237, 0x2000, 0x0010, V.IS);
        public static readonly A PrinterConfigurationSequence = new A(3238, 0x2000, 0x001E, V.SQ);
        public static readonly A PrintPriority = new A(3239, 0x2000, 0x0020, V.CS);
        public static readonly A MediumType = new A(3240, 0x2000, 0x0030, V.CS);
        public static readonly A FilmDestination = new A(3241, 0x2000, 0x0040, V.CS);
        public static readonly A FilmSessionLabel = new A(3242, 0x2000, 0x0050, V.LO);
        public static readonly A MemoryAllocation = new A(3243, 0x2000, 0x0060, V.IS);
        public static readonly A MaximumMemoryAllocation = new A(3244, 0x2000, 0x0061, V.IS);
        public static readonly A MemoryBitDepth = new A(3245, 0x2000, 0x00A0, V.US);
        public static readonly A PrintingBitDepth = new A(3246, 0x2000, 0x00A1, V.US);
        public static readonly A MediaInstalledSequence = new A(3247, 0x2000, 0x00A2, V.SQ);
        public static readonly A OtherMediaAvailableSequence = new A(3248, 0x2000, 0x00A4, V.SQ);
        public static readonly A SupportedImageDisplayFormatsSequence = new A(3249, 0x2000, 0x00A8, V.SQ);
        public static readonly A ReferencedFilmBoxSequence = new A(3250, 0x2000, 0x0500, V.SQ);
        public static readonly A ImageDisplayFormat = new A(3251, 0x2010, 0x0010, V.ST);
        public static readonly A AnnotationDisplayFormatID = new A(3252, 0x2010, 0x0030, V.CS);
        public static readonly A FilmOrientation = new A(3253, 0x2010, 0x0040, V.CS);
        public static readonly A FilmSizeID = new A(3254, 0x2010, 0x0050, V.CS);
        public static readonly A PrinterResolutionID = new A(3255, 0x2010, 0x0052, V.CS);
        public static readonly A DefaultPrinterResolutionID = new A(3256, 0x2010, 0x0054, V.CS);
        public static readonly A MagnificationType = new A(3257, 0x2010, 0x0060, V.CS);
        public static readonly A SmoothingType = new A(3258, 0x2010, 0x0080, V.CS);
        public static readonly A DefaultMagnificationType = new A(3259, 0x2010, 0x00A6, V.CS);
        public static readonly A OtherMagnificationTypesAvailable = new A(3260, 0x2010, 0x00A7, V.CS);
        public static readonly A DefaultSmoothingType = new A(3261, 0x2010, 0x00A8, V.CS);
        public static readonly A OtherSmoothingTypesAvailable = new A(3262, 0x2010, 0x00A9, V.CS);
        public static readonly A BorderDensity = new A(3263, 0x2010, 0x0100, V.CS);
        public static readonly A EmptyImageDensity = new A(3264, 0x2010, 0x0110, V.CS);
        public static readonly A MinDensity = new A(3265, 0x2010, 0x0120, V.US);
        public static readonly A MaxDensity = new A(3266, 0x2010, 0x0130, V.US);
        public static readonly A Trim = new A(3267, 0x2010, 0x0140, V.CS);
        public static readonly A ConfigurationInformation = new A(3268, 0x2010, 0x0150, V.ST);
        public static readonly A ConfigurationInformationDescription = new A(3269, 0x2010, 0x0152, V.LT);
        public static readonly A MaximumCollatedFilms = new A(3270, 0x2010, 0x0154, V.IS);
        public static readonly A Illumination = new A(3271, 0x2010, 0x015E, V.US);
        public static readonly A ReflectedAmbientLight = new A(3272, 0x2010, 0x0160, V.US);
        public static readonly A PrinterPixelSpacing = new A(3273, 0x2010, 0x0376, V.DS);
        public static readonly A ReferencedFilmSessionSequence = new A(3274, 0x2010, 0x0500, V.SQ);
        public static readonly A ReferencedImageBoxSequence = new A(3275, 0x2010, 0x0510, V.SQ);
        public static readonly A ReferencedBasicAnnotationBoxSequence = new A(3276, 0x2010, 0x0520, V.SQ);
        public static readonly A ImageBoxPosition = new A(3277, 0x2020, 0x0010, V.US);
        public static readonly A Polarity = new A(3278, 0x2020, 0x0020, V.CS);
        public static readonly A RequestedImageSize = new A(3279, 0x2020, 0x0030, V.DS);
        public static readonly A RequestedDecimateCropBehavior = new A(3280, 0x2020, 0x0040, V.CS);
        public static readonly A RequestedResolutionID = new A(3281, 0x2020, 0x0050, V.CS);
        public static readonly A RequestedImageSizeFlag = new A(3282, 0x2020, 0x00A0, V.CS);
        public static readonly A DecimateCropResult = new A(3283, 0x2020, 0x00A2, V.CS);
        public static readonly A BasicGrayscaleImageSequence = new A(3284, 0x2020, 0x0110, V.SQ);
        public static readonly A BasicColorImageSequence = new A(3285, 0x2020, 0x0111, V.SQ);
        public static readonly A AnnotationPosition = new A(3286, 0x2030, 0x0010, V.US);
        public static readonly A TextString = new A(3287, 0x2030, 0x0020, V.LO);
        public static readonly A PresentationLUTSequence = new A(3288, 0x2050, 0x0010, V.SQ);
        public static readonly A PresentationLUTShape = new A(3289, 0x2050, 0x0020, V.CS);
        public static readonly A ReferencedPresentationLUTSequence = new A(3290, 0x2050, 0x0500, V.SQ);
        public static readonly A ExecutionStatus = new A(3291, 0x2100, 0x0020, V.CS);
        public static readonly A ExecutionStatusInfo = new A(3292, 0x2100, 0x0030, V.CS);
        public static readonly A CreationDate = new A(3293, 0x2100, 0x0040, V.DA);
        public static readonly A CreationTime = new A(3294, 0x2100, 0x0050, V.TM);
        public static readonly A Originator = new A(3295, 0x2100, 0x0070, V.AE);
        public static readonly A DestinationAE = new A(3296, 0x2100, 0x0140, V.AE);
        public static readonly A OwnerID = new A(3297, 0x2100, 0x0160, V.SH);
        public static readonly A NumberOfFilms = new A(3298, 0x2100, 0x0170, V.IS);
        public static readonly A PrinterStatus = new A(3299, 0x2110, 0x0010, V.CS);
        public static readonly A PrinterStatusInfo = new A(3300, 0x2110, 0x0020, V.CS);
        public static readonly A PrinterName = new A(3301, 0x2110, 0x0030, V.LO);
        public static readonly A LabelUsingInformationExtractedFromInstances = new A(3302, 0x2200, 0x0001, V.CS);
        public static readonly A LabelText = new A(3303, 0x2200, 0x0002, V.UT);
        public static readonly A LabelStyleSelection = new A(3304, 0x2200, 0x0003, V.CS);
        public static readonly A MediaDisposition = new A(3305, 0x2200, 0x0004, V.LT);
        public static readonly A BarcodeValue = new A(3306, 0x2200, 0x0005, V.LT);
        public static readonly A BarcodeSymbology = new A(3307, 0x2200, 0x0006, V.CS);
        public static readonly A AllowMediaSplitting = new A(3308, 0x2200, 0x0007, V.CS);
        public static readonly A IncludeNonDICOMObjects = new A(3309, 0x2200, 0x0008, V.CS);
        public static readonly A IncludeDisplayApplication = new A(3310, 0x2200, 0x0009, V.CS);
        public static readonly A PreserveCompositeInstancesAfterMediaCreation = new A(3311, 0x2200, 0x000A, V.CS);
        public static readonly A TotalNumberOfPiecesOfMediaCreated = new A(3312, 0x2200, 0x000B, V.US);
        public static readonly A RequestedMediaApplicationProfile = new A(3313, 0x2200, 0x000C, V.LO);
        public static readonly A ReferencedStorageMediaSequence = new A(3314, 0x2200, 0x000D, V.SQ);
        public static readonly A FailureAttributes = new A(3315, 0x2200, 0x000E, V.AT);
        public static readonly A AllowLossyCompression = new A(3316, 0x2200, 0x000F, V.CS);
        public static readonly A RequestPriority = new A(3317, 0x2200, 0x0020, V.CS);
        public static readonly A RTImageLabel = new A(3318, 0x3002, 0x0002, V.SH);
        public static readonly A RTImageName = new A(3319, 0x3002, 0x0003, V.LO);
        public static readonly A RTImageDescription = new A(3320, 0x3002, 0x0004, V.ST);
        public static readonly A ReportedValuesOrigin = new A(3321, 0x3002, 0x000A, V.CS);
        public static readonly A RTImagePlane = new A(3322, 0x3002, 0x000C, V.CS);
        public static readonly A XRayImageReceptorTranslation = new A(3323, 0x3002, 0x000D, V.DS);
        public static readonly A XRayImageReceptorAngle = new A(3324, 0x3002, 0x000E, V.DS);
        public static readonly A RTImageOrientation = new A(3325, 0x3002, 0x0010, V.DS);
        public static readonly A ImagePlanePixelSpacing = new A(3326, 0x3002, 0x0011, V.DS);
        public static readonly A RTImagePosition = new A(3327, 0x3002, 0x0012, V.DS);
        public static readonly A RadiationMachineName = new A(3328, 0x3002, 0x0020, V.SH);
        public static readonly A RadiationMachineSAD = new A(3329, 0x3002, 0x0022, V.DS);
        public static readonly A RadiationMachineSSD = new A(3330, 0x3002, 0x0024, V.DS);
        public static readonly A RTImageSID = new A(3331, 0x3002, 0x0026, V.DS);
        public static readonly A SourceToReferenceObjectDistance = new A(3332, 0x3002, 0x0028, V.DS);
        public static readonly A FractionNumber = new A(3333, 0x3002, 0x0029, V.IS);
        public static readonly A ExposureSequence = new A(3334, 0x3002, 0x0030, V.SQ);
        public static readonly A MetersetExposure = new A(3335, 0x3002, 0x0032, V.DS);
        public static readonly A DiaphragmPosition = new A(3336, 0x3002, 0x0034, V.DS);
        public static readonly A FluenceMapSequence = new A(3337, 0x3002, 0x0040, V.SQ);
        public static readonly A FluenceDataSource = new A(3338, 0x3002, 0x0041, V.CS);
        public static readonly A FluenceDataScale = new A(3339, 0x3002, 0x0042, V.DS);
        public static readonly A PrimaryFluenceModeSequence = new A(3340, 0x3002, 0x0050, V.SQ);
        public static readonly A FluenceMode = new A(3341, 0x3002, 0x0051, V.CS);
        public static readonly A FluenceModeID = new A(3342, 0x3002, 0x0052, V.SH);
        public static readonly A DVHType = new A(3343, 0x3004, 0x0001, V.CS);
        public static readonly A DoseUnits = new A(3344, 0x3004, 0x0002, V.CS);
        public static readonly A DoseType = new A(3345, 0x3004, 0x0004, V.CS);
        public static readonly A SpatialTransformOfDose = new A(3346, 0x3004, 0x0005, V.CS);
        public static readonly A DoseComment = new A(3347, 0x3004, 0x0006, V.LO);
        public static readonly A NormalizationPoint = new A(3348, 0x3004, 0x0008, V.DS);
        public static readonly A DoseSummationType = new A(3349, 0x3004, 0x000A, V.CS);
        public static readonly A GridFrameOffsetVector = new A(3350, 0x3004, 0x000C, V.DS);
        public static readonly A DoseGridScaling = new A(3351, 0x3004, 0x000E, V.DS);
        public static readonly A RTDoseROISequence = new A(3352, 0x3004, 0x0010, V.SQ);
        public static readonly A DoseValue = new A(3353, 0x3004, 0x0012, V.DS);
        public static readonly A TissueHeterogeneityCorrection = new A(3354, 0x3004, 0x0014, V.CS);
        public static readonly A DVHNormalizationPoint = new A(3355, 0x3004, 0x0040, V.DS);
        public static readonly A DVHNormalizationDoseValue = new A(3356, 0x3004, 0x0042, V.DS);
        public static readonly A DVHSequence = new A(3357, 0x3004, 0x0050, V.SQ);
        public static readonly A DVHDoseScaling = new A(3358, 0x3004, 0x0052, V.DS);
        public static readonly A DVHVolumeUnits = new A(3359, 0x3004, 0x0054, V.CS);
        public static readonly A DVHNumberOfBins = new A(3360, 0x3004, 0x0056, V.IS);
        public static readonly A DVHData = new A(3361, 0x3004, 0x0058, V.DS);
        public static readonly A DVHReferencedROISequence = new A(3362, 0x3004, 0x0060, V.SQ);
        public static readonly A DVHROIContributionType = new A(3363, 0x3004, 0x0062, V.CS);
        public static readonly A DVHMinimumDose = new A(3364, 0x3004, 0x0070, V.DS);
        public static readonly A DVHMaximumDose = new A(3365, 0x3004, 0x0072, V.DS);
        public static readonly A DVHMeanDose = new A(3366, 0x3004, 0x0074, V.DS);
        public static readonly A StructureSetLabel = new A(3367, 0x3006, 0x0002, V.SH);
        public static readonly A StructureSetName = new A(3368, 0x3006, 0x0004, V.LO);
        public static readonly A StructureSetDescription = new A(3369, 0x3006, 0x0006, V.ST);
        public static readonly A StructureSetDate = new A(3370, 0x3006, 0x0008, V.DA);
        public static readonly A StructureSetTime = new A(3371, 0x3006, 0x0009, V.TM);
        public static readonly A ReferencedFrameOfReferenceSequence = new A(3372, 0x3006, 0x0010, V.SQ);
        public static readonly A RTReferencedStudySequence = new A(3373, 0x3006, 0x0012, V.SQ);
        public static readonly A RTReferencedSeriesSequence = new A(3374, 0x3006, 0x0014, V.SQ);
        public static readonly A ContourImageSequence = new A(3375, 0x3006, 0x0016, V.SQ);
        public static readonly A PredecessorStructureSetSequence = new A(3376, 0x3006, 0x0018, V.SQ);
        public static readonly A StructureSetROISequence = new A(3377, 0x3006, 0x0020, V.SQ);
        public static readonly A ROINumber = new A(3378, 0x3006, 0x0022, V.IS);
        public static readonly A ReferencedFrameOfReferenceUID = new A(3379, 0x3006, 0x0024, V.UI);
        public static readonly A ROIName = new A(3380, 0x3006, 0x0026, V.LO);
        public static readonly A ROIDescription = new A(3381, 0x3006, 0x0028, V.ST);
        public static readonly A ROIDisplayColor = new A(3382, 0x3006, 0x002A, V.IS);
        public static readonly A ROIVolume = new A(3383, 0x3006, 0x002C, V.DS);
        public static readonly A RTRelatedROISequence = new A(3384, 0x3006, 0x0030, V.SQ);
        public static readonly A RTROIRelationship = new A(3385, 0x3006, 0x0033, V.CS);
        public static readonly A ROIGenerationAlgorithm = new A(3386, 0x3006, 0x0036, V.CS);
        public static readonly A ROIDerivationAlgorithmIdentificationSequence = new A(3387, 0x3006, 0x0037, V.SQ);
        public static readonly A ROIGenerationDescription = new A(3388, 0x3006, 0x0038, V.LO);
        public static readonly A ROIContourSequence = new A(3389, 0x3006, 0x0039, V.SQ);
        public static readonly A ContourSequence = new A(3390, 0x3006, 0x0040, V.SQ);
        public static readonly A ContourGeometricType = new A(3391, 0x3006, 0x0042, V.CS);
        public static readonly A ContourSlabThickness = new A(3392, 0x3006, 0x0044, V.DS);
        public static readonly A ContourOffsetVector = new A(3393, 0x3006, 0x0045, V.DS);
        public static readonly A NumberOfContourPoints = new A(3394, 0x3006, 0x0046, V.IS);
        public static readonly A ContourNumber = new A(3395, 0x3006, 0x0048, V.IS);
        public static readonly A AttachedContours = new A(3396, 0x3006, 0x0049, V.IS);
        public static readonly A ContourData = new A(3397, 0x3006, 0x0050, V.DS);
        public static readonly A RTROIObservationsSequence = new A(3398, 0x3006, 0x0080, V.SQ);
        public static readonly A ObservationNumber = new A(3399, 0x3006, 0x0082, V.IS);
        public static readonly A ReferencedROINumber = new A(3400, 0x3006, 0x0084, V.IS);
        public static readonly A ROIObservationLabel = new A(3401, 0x3006, 0x0085, V.SH);
        public static readonly A RTROIIdentificationCodeSequence = new A(3402, 0x3006, 0x0086, V.SQ);
        public static readonly A ROIObservationDescription = new A(3403, 0x3006, 0x0088, V.ST);
        public static readonly A RelatedRTROIObservationsSequence = new A(3404, 0x3006, 0x00A0, V.SQ);
        public static readonly A RTROIInterpretedType = new A(3405, 0x3006, 0x00A4, V.CS);
        public static readonly A ROIInterpreter = new A(3406, 0x3006, 0x00A6, V.PN);
        public static readonly A ROIPhysicalPropertiesSequence = new A(3407, 0x3006, 0x00B0, V.SQ);
        public static readonly A ROIPhysicalProperty = new A(3408, 0x3006, 0x00B2, V.CS);
        public static readonly A ROIPhysicalPropertyValue = new A(3409, 0x3006, 0x00B4, V.DS);
        public static readonly A ROIElementalCompositionSequence = new A(3410, 0x3006, 0x00B6, V.SQ);
        public static readonly A ROIElementalCompositionAtomicNumber = new A(3411, 0x3006, 0x00B7, V.US);
        public static readonly A ROIElementalCompositionAtomicMassFraction = new A(3412, 0x3006, 0x00B8, V.FL);
        public static readonly A FrameOfReferenceTransformationMatrix = new A(3413, 0x3006, 0x00C6, V.DS);
        public static readonly A FrameOfReferenceTransformationComment = new A(3414, 0x3006, 0x00C8, V.LO);
        public static readonly A PatientLocationCoordinatesSequence = new A(3415, 0x3006, 0x00C9, V.SQ);
        public static readonly A PatientLocationCoordinatesCodeSequence = new A(3416, 0x3006, 0x00CA, V.SQ);
        public static readonly A PatientSupportPositionSequence = new A(3417, 0x3006, 0x00CB, V.SQ);
        public static readonly A MeasuredDoseReferenceSequence = new A(3418, 0x3008, 0x0010, V.SQ);
        public static readonly A MeasuredDoseDescription = new A(3419, 0x3008, 0x0012, V.ST);
        public static readonly A MeasuredDoseType = new A(3420, 0x3008, 0x0014, V.CS);
        public static readonly A MeasuredDoseValue = new A(3421, 0x3008, 0x0016, V.DS);
        public static readonly A TreatmentSessionBeamSequence = new A(3422, 0x3008, 0x0020, V.SQ);
        public static readonly A TreatmentSessionIonBeamSequence = new A(3423, 0x3008, 0x0021, V.SQ);
        public static readonly A CurrentFractionNumber = new A(3424, 0x3008, 0x0022, V.IS);
        public static readonly A TreatmentControlPointDate = new A(3425, 0x3008, 0x0024, V.DA);
        public static readonly A TreatmentControlPointTime = new A(3426, 0x3008, 0x0025, V.TM);
        public static readonly A TreatmentTerminationStatus = new A(3427, 0x3008, 0x002A, V.CS);
        public static readonly A TreatmentTerminationCode = new A(3428, 0x3008, 0x002B, V.SH);
        public static readonly A TreatmentVerificationStatus = new A(3429, 0x3008, 0x002C, V.CS);
        public static readonly A ReferencedTreatmentRecordSequence = new A(3430, 0x3008, 0x0030, V.SQ);
        public static readonly A SpecifiedPrimaryMeterset = new A(3431, 0x3008, 0x0032, V.DS);
        public static readonly A SpecifiedSecondaryMeterset = new A(3432, 0x3008, 0x0033, V.DS);
        public static readonly A DeliveredPrimaryMeterset = new A(3433, 0x3008, 0x0036, V.DS);
        public static readonly A DeliveredSecondaryMeterset = new A(3434, 0x3008, 0x0037, V.DS);
        public static readonly A SpecifiedTreatmentTime = new A(3435, 0x3008, 0x003A, V.DS);
        public static readonly A DeliveredTreatmentTime = new A(3436, 0x3008, 0x003B, V.DS);
        public static readonly A ControlPointDeliverySequence = new A(3437, 0x3008, 0x0040, V.SQ);
        public static readonly A IonControlPointDeliverySequence = new A(3438, 0x3008, 0x0041, V.SQ);
        public static readonly A SpecifiedMeterset = new A(3439, 0x3008, 0x0042, V.DS);
        public static readonly A DeliveredMeterset = new A(3440, 0x3008, 0x0044, V.DS);
        public static readonly A MetersetRateSet = new A(3441, 0x3008, 0x0045, V.FL);
        public static readonly A MetersetRateDelivered = new A(3442, 0x3008, 0x0046, V.FL);
        public static readonly A ScanSpotMetersetsDelivered = new A(3443, 0x3008, 0x0047, V.FL);
        public static readonly A DoseRateDelivered = new A(3444, 0x3008, 0x0048, V.DS);
        public static readonly A TreatmentSummaryCalculatedDoseReferenceSequence = new A(3445, 0x3008, 0x0050, V.SQ);
        public static readonly A CumulativeDoseToDoseReference = new A(3446, 0x3008, 0x0052, V.DS);
        public static readonly A FirstTreatmentDate = new A(3447, 0x3008, 0x0054, V.DA);
        public static readonly A MostRecentTreatmentDate = new A(3448, 0x3008, 0x0056, V.DA);
        public static readonly A NumberOfFractionsDelivered = new A(3449, 0x3008, 0x005A, V.IS);
        public static readonly A OverrideSequence = new A(3450, 0x3008, 0x0060, V.SQ);
        public static readonly A ParameterSequencePointer = new A(3451, 0x3008, 0x0061, V.AT);
        public static readonly A OverrideParameterPointer = new A(3452, 0x3008, 0x0062, V.AT);
        public static readonly A ParameterItemIndex = new A(3453, 0x3008, 0x0063, V.IS);
        public static readonly A MeasuredDoseReferenceNumber = new A(3454, 0x3008, 0x0064, V.IS);
        public static readonly A ParameterPointer = new A(3455, 0x3008, 0x0065, V.AT);
        public static readonly A OverrideReason = new A(3456, 0x3008, 0x0066, V.ST);
        public static readonly A ParameterValueNumber = new A(3457, 0x3008, 0x0067, V.US);
        public static readonly A CorrectedParameterSequence = new A(3458, 0x3008, 0x0068, V.SQ);
        public static readonly A CorrectionValue = new A(3459, 0x3008, 0x006A, V.FL);
        public static readonly A CalculatedDoseReferenceSequence = new A(3460, 0x3008, 0x0070, V.SQ);
        public static readonly A CalculatedDoseReferenceNumber = new A(3461, 0x3008, 0x0072, V.IS);
        public static readonly A CalculatedDoseReferenceDescription = new A(3462, 0x3008, 0x0074, V.ST);
        public static readonly A CalculatedDoseReferenceDoseValue = new A(3463, 0x3008, 0x0076, V.DS);
        public static readonly A StartMeterset = new A(3464, 0x3008, 0x0078, V.DS);
        public static readonly A EndMeterset = new A(3465, 0x3008, 0x007A, V.DS);
        public static readonly A ReferencedMeasuredDoseReferenceSequence = new A(3466, 0x3008, 0x0080, V.SQ);
        public static readonly A ReferencedMeasuredDoseReferenceNumber = new A(3467, 0x3008, 0x0082, V.IS);
        public static readonly A ReferencedCalculatedDoseReferenceSequence = new A(3468, 0x3008, 0x0090, V.SQ);
        public static readonly A ReferencedCalculatedDoseReferenceNumber = new A(3469, 0x3008, 0x0092, V.IS);
        public static readonly A BeamLimitingDeviceLeafPairsSequence = new A(3470, 0x3008, 0x00A0, V.SQ);
        public static readonly A RecordedWedgeSequence = new A(3471, 0x3008, 0x00B0, V.SQ);
        public static readonly A RecordedCompensatorSequence = new A(3472, 0x3008, 0x00C0, V.SQ);
        public static readonly A RecordedBlockSequence = new A(3473, 0x3008, 0x00D0, V.SQ);
        public static readonly A TreatmentSummaryMeasuredDoseReferenceSequence = new A(3474, 0x3008, 0x00E0, V.SQ);
        public static readonly A RecordedSnoutSequence = new A(3475, 0x3008, 0x00F0, V.SQ);
        public static readonly A RecordedRangeShifterSequence = new A(3476, 0x3008, 0x00F2, V.SQ);
        public static readonly A RecordedLateralSpreadingDeviceSequence = new A(3477, 0x3008, 0x00F4, V.SQ);
        public static readonly A RecordedRangeModulatorSequence = new A(3478, 0x3008, 0x00F6, V.SQ);
        public static readonly A RecordedSourceSequence = new A(3479, 0x3008, 0x0100, V.SQ);
        public static readonly A SourceSerialNumber = new A(3480, 0x3008, 0x0105, V.LO);
        public static readonly A TreatmentSessionApplicationSetupSequence = new A(3481, 0x3008, 0x0110, V.SQ);
        public static readonly A ApplicationSetupCheck = new A(3482, 0x3008, 0x0116, V.CS);
        public static readonly A RecordedBrachyAccessoryDeviceSequence = new A(3483, 0x3008, 0x0120, V.SQ);
        public static readonly A ReferencedBrachyAccessoryDeviceNumber = new A(3484, 0x3008, 0x0122, V.IS);
        public static readonly A RecordedChannelSequence = new A(3485, 0x3008, 0x0130, V.SQ);
        public static readonly A SpecifiedChannelTotalTime = new A(3486, 0x3008, 0x0132, V.DS);
        public static readonly A DeliveredChannelTotalTime = new A(3487, 0x3008, 0x0134, V.DS);
        public static readonly A SpecifiedNumberOfPulses = new A(3488, 0x3008, 0x0136, V.IS);
        public static readonly A DeliveredNumberOfPulses = new A(3489, 0x3008, 0x0138, V.IS);
        public static readonly A SpecifiedPulseRepetitionInterval = new A(3490, 0x3008, 0x013A, V.DS);
        public static readonly A DeliveredPulseRepetitionInterval = new A(3491, 0x3008, 0x013C, V.DS);
        public static readonly A RecordedSourceApplicatorSequence = new A(3492, 0x3008, 0x0140, V.SQ);
        public static readonly A ReferencedSourceApplicatorNumber = new A(3493, 0x3008, 0x0142, V.IS);
        public static readonly A RecordedChannelShieldSequence = new A(3494, 0x3008, 0x0150, V.SQ);
        public static readonly A ReferencedChannelShieldNumber = new A(3495, 0x3008, 0x0152, V.IS);
        public static readonly A BrachyControlPointDeliveredSequence = new A(3496, 0x3008, 0x0160, V.SQ);
        public static readonly A SafePositionExitDate = new A(3497, 0x3008, 0x0162, V.DA);
        public static readonly A SafePositionExitTime = new A(3498, 0x3008, 0x0164, V.TM);
        public static readonly A SafePositionReturnDate = new A(3499, 0x3008, 0x0166, V.DA);
        public static readonly A SafePositionReturnTime = new A(3500, 0x3008, 0x0168, V.TM);
        public static readonly A PulseSpecificBrachyControlPointDeliveredSequence = new A(3501, 0x3008, 0x0171, V.SQ);
        public static readonly A PulseNumber = new A(3502, 0x3008, 0x0172, V.US);
        public static readonly A BrachyPulseControlPointDeliveredSequence = new A(3503, 0x3008, 0x0173, V.SQ);
        public static readonly A CurrentTreatmentStatus = new A(3504, 0x3008, 0x0200, V.CS);
        public static readonly A TreatmentStatusComment = new A(3505, 0x3008, 0x0202, V.ST);
        public static readonly A FractionGroupSummarySequence = new A(3506, 0x3008, 0x0220, V.SQ);
        public static readonly A ReferencedFractionNumber = new A(3507, 0x3008, 0x0223, V.IS);
        public static readonly A FractionGroupType = new A(3508, 0x3008, 0x0224, V.CS);
        public static readonly A BeamStopperPosition = new A(3509, 0x3008, 0x0230, V.CS);
        public static readonly A FractionStatusSummarySequence = new A(3510, 0x3008, 0x0240, V.SQ);
        public static readonly A TreatmentDate = new A(3511, 0x3008, 0x0250, V.DA);
        public static readonly A TreatmentTime = new A(3512, 0x3008, 0x0251, V.TM);
        public static readonly A RTPlanLabel = new A(3513, 0x300A, 0x0002, V.SH);
        public static readonly A RTPlanName = new A(3514, 0x300A, 0x0003, V.LO);
        public static readonly A RTPlanDescription = new A(3515, 0x300A, 0x0004, V.ST);
        public static readonly A RTPlanDate = new A(3516, 0x300A, 0x0006, V.DA);
        public static readonly A RTPlanTime = new A(3517, 0x300A, 0x0007, V.TM);
        public static readonly A TreatmentProtocols = new A(3518, 0x300A, 0x0009, V.LO);
        public static readonly A PlanIntent = new A(3519, 0x300A, 0x000A, V.CS);
        public static readonly A TreatmentSites = new A(3520, 0x300A, 0x000B, V.LO);
        public static readonly A RTPlanGeometry = new A(3521, 0x300A, 0x000C, V.CS);
        public static readonly A PrescriptionDescription = new A(3522, 0x300A, 0x000E, V.ST);
        public static readonly A DoseReferenceSequence = new A(3523, 0x300A, 0x0010, V.SQ);
        public static readonly A DoseReferenceNumber = new A(3524, 0x300A, 0x0012, V.IS);
        public static readonly A DoseReferenceUID = new A(3525, 0x300A, 0x0013, V.UI);
        public static readonly A DoseReferenceStructureType = new A(3526, 0x300A, 0x0014, V.CS);
        public static readonly A NominalBeamEnergyUnit = new A(3527, 0x300A, 0x0015, V.CS);
        public static readonly A DoseReferenceDescription = new A(3528, 0x300A, 0x0016, V.LO);
        public static readonly A DoseReferencePointCoordinates = new A(3529, 0x300A, 0x0018, V.DS);
        public static readonly A NominalPriorDose = new A(3530, 0x300A, 0x001A, V.DS);
        public static readonly A DoseReferenceType = new A(3531, 0x300A, 0x0020, V.CS);
        public static readonly A ConstraintWeight = new A(3532, 0x300A, 0x0021, V.DS);
        public static readonly A DeliveryWarningDose = new A(3533, 0x300A, 0x0022, V.DS);
        public static readonly A DeliveryMaximumDose = new A(3534, 0x300A, 0x0023, V.DS);
        public static readonly A TargetMinimumDose = new A(3535, 0x300A, 0x0025, V.DS);
        public static readonly A TargetPrescriptionDose = new A(3536, 0x300A, 0x0026, V.DS);
        public static readonly A TargetMaximumDose = new A(3537, 0x300A, 0x0027, V.DS);
        public static readonly A TargetUnderdoseVolumeFraction = new A(3538, 0x300A, 0x0028, V.DS);
        public static readonly A OrganAtRiskFullVolumeDose = new A(3539, 0x300A, 0x002A, V.DS);
        public static readonly A OrganAtRiskLimitDose = new A(3540, 0x300A, 0x002B, V.DS);
        public static readonly A OrganAtRiskMaximumDose = new A(3541, 0x300A, 0x002C, V.DS);
        public static readonly A OrganAtRiskOverdoseVolumeFraction = new A(3542, 0x300A, 0x002D, V.DS);
        public static readonly A ToleranceTableSequence = new A(3543, 0x300A, 0x0040, V.SQ);
        public static readonly A ToleranceTableNumber = new A(3544, 0x300A, 0x0042, V.IS);
        public static readonly A ToleranceTableLabel = new A(3545, 0x300A, 0x0043, V.SH);
        public static readonly A GantryAngleTolerance = new A(3546, 0x300A, 0x0044, V.DS);
        public static readonly A BeamLimitingDeviceAngleTolerance = new A(3547, 0x300A, 0x0046, V.DS);
        public static readonly A BeamLimitingDeviceToleranceSequence = new A(3548, 0x300A, 0x0048, V.SQ);
        public static readonly A BeamLimitingDevicePositionTolerance = new A(3549, 0x300A, 0x004A, V.DS);
        public static readonly A SnoutPositionTolerance = new A(3550, 0x300A, 0x004B, V.FL);
        public static readonly A PatientSupportAngleTolerance = new A(3551, 0x300A, 0x004C, V.DS);
        public static readonly A TableTopEccentricAngleTolerance = new A(3552, 0x300A, 0x004E, V.DS);
        public static readonly A TableTopPitchAngleTolerance = new A(3553, 0x300A, 0x004F, V.FL);
        public static readonly A TableTopRollAngleTolerance = new A(3554, 0x300A, 0x0050, V.FL);
        public static readonly A TableTopVerticalPositionTolerance = new A(3555, 0x300A, 0x0051, V.DS);
        public static readonly A TableTopLongitudinalPositionTolerance = new A(3556, 0x300A, 0x0052, V.DS);
        public static readonly A TableTopLateralPositionTolerance = new A(3557, 0x300A, 0x0053, V.DS);
        public static readonly A RTPlanRelationship = new A(3558, 0x300A, 0x0055, V.CS);
        public static readonly A FractionGroupSequence = new A(3559, 0x300A, 0x0070, V.SQ);
        public static readonly A FractionGroupNumber = new A(3560, 0x300A, 0x0071, V.IS);
        public static readonly A FractionGroupDescription = new A(3561, 0x300A, 0x0072, V.LO);
        public static readonly A NumberOfFractionsPlanned = new A(3562, 0x300A, 0x0078, V.IS);
        public static readonly A NumberOfFractionPatternDigitsPerDay = new A(3563, 0x300A, 0x0079, V.IS);
        public static readonly A RepeatFractionCycleLength = new A(3564, 0x300A, 0x007A, V.IS);
        public static readonly A FractionPattern = new A(3565, 0x300A, 0x007B, V.LT);
        public static readonly A NumberOfBeams = new A(3566, 0x300A, 0x0080, V.IS);
        public static readonly A ReferencedDoseReferenceUID = new A(3567, 0x300A, 0x0083, V.UI);
        public static readonly A BeamDose = new A(3568, 0x300A, 0x0084, V.DS);
        public static readonly A BeamMeterset = new A(3569, 0x300A, 0x0086, V.DS);
        public static readonly A BeamDosePointDepth = new A(3570, 0x300A, 0x0088, V.FL);
        public static readonly A BeamDosePointEquivalentDepth = new A(3571, 0x300A, 0x0089, V.FL);
        public static readonly A BeamDosePointSSD = new A(3572, 0x300A, 0x008A, V.FL);
        public static readonly A BeamDoseMeaning = new A(3573, 0x300A, 0x008B, V.CS);
        public static readonly A BeamDoseVerificationControlPointSequence = new A(3574, 0x300A, 0x008C, V.SQ);
        public static readonly A BeamDoseType = new A(3575, 0x300A, 0x0090, V.CS);
        public static readonly A AlternateBeamDose = new A(3576, 0x300A, 0x0091, V.DS);
        public static readonly A AlternateBeamDoseType = new A(3577, 0x300A, 0x0092, V.CS);
        public static readonly A DepthValueAveragingFlag = new A(3578, 0x300A, 0x0093, V.CS);
        public static readonly A BeamDosePointSourceToExternalContourDistance = new A(3579, 0x300A, 0x0094, V.DS);
        public static readonly A NumberOfBrachyApplicationSetups = new A(3580, 0x300A, 0x00A0, V.IS);
        public static readonly A BrachyApplicationSetupDoseSpecificationPoint = new A(3581, 0x300A, 0x00A2, V.DS);
        public static readonly A BrachyApplicationSetupDose = new A(3582, 0x300A, 0x00A4, V.DS);
        public static readonly A BeamSequence = new A(3583, 0x300A, 0x00B0, V.SQ);
        public static readonly A TreatmentMachineName = new A(3584, 0x300A, 0x00B2, V.SH);
        public static readonly A PrimaryDosimeterUnit = new A(3585, 0x300A, 0x00B3, V.CS);
        public static readonly A SourceAxisDistance = new A(3586, 0x300A, 0x00B4, V.DS);
        public static readonly A BeamLimitingDeviceSequence = new A(3587, 0x300A, 0x00B6, V.SQ);
        public static readonly A RTBeamLimitingDeviceType = new A(3588, 0x300A, 0x00B8, V.CS);
        public static readonly A SourceToBeamLimitingDeviceDistance = new A(3589, 0x300A, 0x00BA, V.DS);
        public static readonly A IsocenterToBeamLimitingDeviceDistance = new A(3590, 0x300A, 0x00BB, V.FL);
        public static readonly A NumberOfLeafJawPairs = new A(3591, 0x300A, 0x00BC, V.IS);
        public static readonly A LeafPositionBoundaries = new A(3592, 0x300A, 0x00BE, V.DS);
        public static readonly A BeamNumber = new A(3593, 0x300A, 0x00C0, V.IS);
        public static readonly A BeamName = new A(3594, 0x300A, 0x00C2, V.LO);
        public static readonly A BeamDescription = new A(3595, 0x300A, 0x00C3, V.ST);
        public static readonly A BeamType = new A(3596, 0x300A, 0x00C4, V.CS);
        public static readonly A BeamDeliveryDurationLimit = new A(3597, 0x300A, 0x00C5, V.FD);
        public static readonly A RadiationType = new A(3598, 0x300A, 0x00C6, V.CS);
        public static readonly A HighDoseTechniqueType = new A(3599, 0x300A, 0x00C7, V.CS);
        public static readonly A ReferenceImageNumber = new A(3600, 0x300A, 0x00C8, V.IS);
        public static readonly A PlannedVerificationImageSequence = new A(3601, 0x300A, 0x00CA, V.SQ);
        public static readonly A ImagingDeviceSpecificAcquisitionParameters = new A(3602, 0x300A, 0x00CC, V.LO);
        public static readonly A TreatmentDeliveryType = new A(3603, 0x300A, 0x00CE, V.CS);
        public static readonly A NumberOfWedges = new A(3604, 0x300A, 0x00D0, V.IS);
        public static readonly A WedgeSequence = new A(3605, 0x300A, 0x00D1, V.SQ);
        public static readonly A WedgeNumber = new A(3606, 0x300A, 0x00D2, V.IS);
        public static readonly A WedgeType = new A(3607, 0x300A, 0x00D3, V.CS);
        public static readonly A WedgeID = new A(3608, 0x300A, 0x00D4, V.SH);
        public static readonly A WedgeAngle = new A(3609, 0x300A, 0x00D5, V.IS);
        public static readonly A WedgeFactor = new A(3610, 0x300A, 0x00D6, V.DS);
        public static readonly A TotalWedgeTrayWaterEquivalentThickness = new A(3611, 0x300A, 0x00D7, V.FL);
        public static readonly A WedgeOrientation = new A(3612, 0x300A, 0x00D8, V.DS);
        public static readonly A IsocenterToWedgeTrayDistance = new A(3613, 0x300A, 0x00D9, V.FL);
        public static readonly A SourceToWedgeTrayDistance = new A(3614, 0x300A, 0x00DA, V.DS);
        public static readonly A WedgeThinEdgePosition = new A(3615, 0x300A, 0x00DB, V.FL);
        public static readonly A BolusID = new A(3616, 0x300A, 0x00DC, V.SH);
        public static readonly A BolusDescription = new A(3617, 0x300A, 0x00DD, V.ST);
        public static readonly A EffectiveWedgeAngle = new A(3618, 0x300A, 0x00DE, V.DS);
        public static readonly A NumberOfCompensators = new A(3619, 0x300A, 0x00E0, V.IS);
        public static readonly A MaterialID = new A(3620, 0x300A, 0x00E1, V.SH);
        public static readonly A TotalCompensatorTrayFactor = new A(3621, 0x300A, 0x00E2, V.DS);
        public static readonly A CompensatorSequence = new A(3622, 0x300A, 0x00E3, V.SQ);
        public static readonly A CompensatorNumber = new A(3623, 0x300A, 0x00E4, V.IS);
        public static readonly A CompensatorID = new A(3624, 0x300A, 0x00E5, V.SH);
        public static readonly A SourceToCompensatorTrayDistance = new A(3625, 0x300A, 0x00E6, V.DS);
        public static readonly A CompensatorRows = new A(3626, 0x300A, 0x00E7, V.IS);
        public static readonly A CompensatorColumns = new A(3627, 0x300A, 0x00E8, V.IS);
        public static readonly A CompensatorPixelSpacing = new A(3628, 0x300A, 0x00E9, V.DS);
        public static readonly A CompensatorPosition = new A(3629, 0x300A, 0x00EA, V.DS);
        public static readonly A CompensatorTransmissionData = new A(3630, 0x300A, 0x00EB, V.DS);
        public static readonly A CompensatorThicknessData = new A(3631, 0x300A, 0x00EC, V.DS);
        public static readonly A NumberOfBoli = new A(3632, 0x300A, 0x00ED, V.IS);
        public static readonly A CompensatorType = new A(3633, 0x300A, 0x00EE, V.CS);
        public static readonly A CompensatorTrayID = new A(3634, 0x300A, 0x00EF, V.SH);
        public static readonly A NumberOfBlocks = new A(3635, 0x300A, 0x00F0, V.IS);
        public static readonly A TotalBlockTrayFactor = new A(3636, 0x300A, 0x00F2, V.DS);
        public static readonly A TotalBlockTrayWaterEquivalentThickness = new A(3637, 0x300A, 0x00F3, V.FL);
        public static readonly A BlockSequence = new A(3638, 0x300A, 0x00F4, V.SQ);
        public static readonly A BlockTrayID = new A(3639, 0x300A, 0x00F5, V.SH);
        public static readonly A SourceToBlockTrayDistance = new A(3640, 0x300A, 0x00F6, V.DS);
        public static readonly A IsocenterToBlockTrayDistance = new A(3641, 0x300A, 0x00F7, V.FL);
        public static readonly A BlockType = new A(3642, 0x300A, 0x00F8, V.CS);
        public static readonly A AccessoryCode = new A(3643, 0x300A, 0x00F9, V.LO);
        public static readonly A BlockDivergence = new A(3644, 0x300A, 0x00FA, V.CS);
        public static readonly A BlockMountingPosition = new A(3645, 0x300A, 0x00FB, V.CS);
        public static readonly A BlockNumber = new A(3646, 0x300A, 0x00FC, V.IS);
        public static readonly A BlockName = new A(3647, 0x300A, 0x00FE, V.LO);
        public static readonly A BlockThickness = new A(3648, 0x300A, 0x0100, V.DS);
        public static readonly A BlockTransmission = new A(3649, 0x300A, 0x0102, V.DS);
        public static readonly A BlockNumberOfPoints = new A(3650, 0x300A, 0x0104, V.IS);
        public static readonly A BlockData = new A(3651, 0x300A, 0x0106, V.DS);
        public static readonly A ApplicatorSequence = new A(3652, 0x300A, 0x0107, V.SQ);
        public static readonly A ApplicatorID = new A(3653, 0x300A, 0x0108, V.SH);
        public static readonly A ApplicatorType = new A(3654, 0x300A, 0x0109, V.CS);
        public static readonly A ApplicatorDescription = new A(3655, 0x300A, 0x010A, V.LO);
        public static readonly A CumulativeDoseReferenceCoefficient = new A(3656, 0x300A, 0x010C, V.DS);
        public static readonly A FinalCumulativeMetersetWeight = new A(3657, 0x300A, 0x010E, V.DS);
        public static readonly A NumberOfControlPoints = new A(3658, 0x300A, 0x0110, V.IS);
        public static readonly A ControlPointSequence = new A(3659, 0x300A, 0x0111, V.SQ);
        public static readonly A ControlPointIndex = new A(3660, 0x300A, 0x0112, V.IS);
        public static readonly A NominalBeamEnergy = new A(3661, 0x300A, 0x0114, V.DS);
        public static readonly A DoseRateSet = new A(3662, 0x300A, 0x0115, V.DS);
        public static readonly A WedgePositionSequence = new A(3663, 0x300A, 0x0116, V.SQ);
        public static readonly A WedgePosition = new A(3664, 0x300A, 0x0118, V.CS);
        public static readonly A BeamLimitingDevicePositionSequence = new A(3665, 0x300A, 0x011A, V.SQ);
        public static readonly A LeafJawPositions = new A(3666, 0x300A, 0x011C, V.DS);
        public static readonly A GantryAngle = new A(3667, 0x300A, 0x011E, V.DS);
        public static readonly A GantryRotationDirection = new A(3668, 0x300A, 0x011F, V.CS);
        public static readonly A BeamLimitingDeviceAngle = new A(3669, 0x300A, 0x0120, V.DS);
        public static readonly A BeamLimitingDeviceRotationDirection = new A(3670, 0x300A, 0x0121, V.CS);
        public static readonly A PatientSupportAngle = new A(3671, 0x300A, 0x0122, V.DS);
        public static readonly A PatientSupportRotationDirection = new A(3672, 0x300A, 0x0123, V.CS);
        public static readonly A TableTopEccentricAxisDistance = new A(3673, 0x300A, 0x0124, V.DS);
        public static readonly A TableTopEccentricAngle = new A(3674, 0x300A, 0x0125, V.DS);
        public static readonly A TableTopEccentricRotationDirection = new A(3675, 0x300A, 0x0126, V.CS);
        public static readonly A TableTopVerticalPosition = new A(3676, 0x300A, 0x0128, V.DS);
        public static readonly A TableTopLongitudinalPosition = new A(3677, 0x300A, 0x0129, V.DS);
        public static readonly A TableTopLateralPosition = new A(3678, 0x300A, 0x012A, V.DS);
        public static readonly A IsocenterPosition = new A(3679, 0x300A, 0x012C, V.DS);
        public static readonly A SurfaceEntryPoint = new A(3680, 0x300A, 0x012E, V.DS);
        public static readonly A SourceToSurfaceDistance = new A(3681, 0x300A, 0x0130, V.DS);
        public static readonly A AverageBeamDosePointSourceToExternalContourDistance = new A(3682, 0x300A, 0x0131, V.FL);
        public static readonly A SourceToExternalContourDistance = new A(3683, 0x300A, 0x0132, V.FL);
        public static readonly A ExternalContourEntryPoint = new A(3684, 0x300A, 0x0133, V.FL);
        public static readonly A CumulativeMetersetWeight = new A(3685, 0x300A, 0x0134, V.DS);
        public static readonly A TableTopPitchAngle = new A(3686, 0x300A, 0x0140, V.FL);
        public static readonly A TableTopPitchRotationDirection = new A(3687, 0x300A, 0x0142, V.CS);
        public static readonly A TableTopRollAngle = new A(3688, 0x300A, 0x0144, V.FL);
        public static readonly A TableTopRollRotationDirection = new A(3689, 0x300A, 0x0146, V.CS);
        public static readonly A HeadFixationAngle = new A(3690, 0x300A, 0x0148, V.FL);
        public static readonly A GantryPitchAngle = new A(3691, 0x300A, 0x014A, V.FL);
        public static readonly A GantryPitchRotationDirection = new A(3692, 0x300A, 0x014C, V.CS);
        public static readonly A GantryPitchAngleTolerance = new A(3693, 0x300A, 0x014E, V.FL);
        public static readonly A FixationEye = new A(3694, 0x300A, 0x0150, V.CS);
        public static readonly A ChairHeadFramePosition = new A(3695, 0x300A, 0x0151, V.DS);
        public static readonly A HeadFixationAngleTolerance = new A(3696, 0x300A, 0x0152, V.DS);
        public static readonly A ChairHeadFramePositionTolerance = new A(3697, 0x300A, 0x0153, V.DS);
        public static readonly A FixationLightAzimuthalAngleTolerance = new A(3698, 0x300A, 0x0154, V.DS);
        public static readonly A FixationLightPolarAngleTolerance = new A(3699, 0x300A, 0x0155, V.DS);
        public static readonly A PatientSetupSequence = new A(3700, 0x300A, 0x0180, V.SQ);
        public static readonly A PatientSetupNumber = new A(3701, 0x300A, 0x0182, V.IS);
        public static readonly A PatientSetupLabel = new A(3702, 0x300A, 0x0183, V.LO);
        public static readonly A PatientAdditionalPosition = new A(3703, 0x300A, 0x0184, V.LO);
        public static readonly A FixationDeviceSequence = new A(3704, 0x300A, 0x0190, V.SQ);
        public static readonly A FixationDeviceType = new A(3705, 0x300A, 0x0192, V.CS);
        public static readonly A FixationDeviceLabel = new A(3706, 0x300A, 0x0194, V.SH);
        public static readonly A FixationDeviceDescription = new A(3707, 0x300A, 0x0196, V.ST);
        public static readonly A FixationDevicePosition = new A(3708, 0x300A, 0x0198, V.SH);
        public static readonly A FixationDevicePitchAngle = new A(3709, 0x300A, 0x0199, V.FL);
        public static readonly A FixationDeviceRollAngle = new A(3710, 0x300A, 0x019A, V.FL);
        public static readonly A ShieldingDeviceSequence = new A(3711, 0x300A, 0x01A0, V.SQ);
        public static readonly A ShieldingDeviceType = new A(3712, 0x300A, 0x01A2, V.CS);
        public static readonly A ShieldingDeviceLabel = new A(3713, 0x300A, 0x01A4, V.SH);
        public static readonly A ShieldingDeviceDescription = new A(3714, 0x300A, 0x01A6, V.ST);
        public static readonly A ShieldingDevicePosition = new A(3715, 0x300A, 0x01A8, V.SH);
        public static readonly A SetupTechnique = new A(3716, 0x300A, 0x01B0, V.CS);
        public static readonly A SetupTechniqueDescription = new A(3717, 0x300A, 0x01B2, V.ST);
        public static readonly A SetupDeviceSequence = new A(3718, 0x300A, 0x01B4, V.SQ);
        public static readonly A SetupDeviceType = new A(3719, 0x300A, 0x01B6, V.CS);
        public static readonly A SetupDeviceLabel = new A(3720, 0x300A, 0x01B8, V.SH);
        public static readonly A SetupDeviceDescription = new A(3721, 0x300A, 0x01BA, V.ST);
        public static readonly A SetupDeviceParameter = new A(3722, 0x300A, 0x01BC, V.DS);
        public static readonly A SetupReferenceDescription = new A(3723, 0x300A, 0x01D0, V.ST);
        public static readonly A TableTopVerticalSetupDisplacement = new A(3724, 0x300A, 0x01D2, V.DS);
        public static readonly A TableTopLongitudinalSetupDisplacement = new A(3725, 0x300A, 0x01D4, V.DS);
        public static readonly A TableTopLateralSetupDisplacement = new A(3726, 0x300A, 0x01D6, V.DS);
        public static readonly A BrachyTreatmentTechnique = new A(3727, 0x300A, 0x0200, V.CS);
        public static readonly A BrachyTreatmentType = new A(3728, 0x300A, 0x0202, V.CS);
        public static readonly A TreatmentMachineSequence = new A(3729, 0x300A, 0x0206, V.SQ);
        public static readonly A SourceSequence = new A(3730, 0x300A, 0x0210, V.SQ);
        public static readonly A SourceNumber = new A(3731, 0x300A, 0x0212, V.IS);
        public static readonly A SourceType = new A(3732, 0x300A, 0x0214, V.CS);
        public static readonly A SourceManufacturer = new A(3733, 0x300A, 0x0216, V.LO);
        public static readonly A ActiveSourceDiameter = new A(3734, 0x300A, 0x0218, V.DS);
        public static readonly A ActiveSourceLength = new A(3735, 0x300A, 0x021A, V.DS);
        public static readonly A SourceModelID = new A(3736, 0x300A, 0x021B, V.SH);
        public static readonly A SourceDescription = new A(3737, 0x300A, 0x021C, V.LO);
        public static readonly A SourceEncapsulationNominalThickness = new A(3738, 0x300A, 0x0222, V.DS);
        public static readonly A SourceEncapsulationNominalTransmission = new A(3739, 0x300A, 0x0224, V.DS);
        public static readonly A SourceIsotopeName = new A(3740, 0x300A, 0x0226, V.LO);
        public static readonly A SourceIsotopeHalfLife = new A(3741, 0x300A, 0x0228, V.DS);
        public static readonly A SourceStrengthUnits = new A(3742, 0x300A, 0x0229, V.CS);
        public static readonly A ReferenceAirKermaRate = new A(3743, 0x300A, 0x022A, V.DS);
        public static readonly A SourceStrength = new A(3744, 0x300A, 0x022B, V.DS);
        public static readonly A SourceStrengthReferenceDate = new A(3745, 0x300A, 0x022C, V.DA);
        public static readonly A SourceStrengthReferenceTime = new A(3746, 0x300A, 0x022E, V.TM);
        public static readonly A ApplicationSetupSequence = new A(3747, 0x300A, 0x0230, V.SQ);
        public static readonly A ApplicationSetupType = new A(3748, 0x300A, 0x0232, V.CS);
        public static readonly A ApplicationSetupNumber = new A(3749, 0x300A, 0x0234, V.IS);
        public static readonly A ApplicationSetupName = new A(3750, 0x300A, 0x0236, V.LO);
        public static readonly A ApplicationSetupManufacturer = new A(3751, 0x300A, 0x0238, V.LO);
        public static readonly A TemplateNumber = new A(3752, 0x300A, 0x0240, V.IS);
        public static readonly A TemplateType = new A(3753, 0x300A, 0x0242, V.SH);
        public static readonly A TemplateName = new A(3754, 0x300A, 0x0244, V.LO);
        public static readonly A TotalReferenceAirKerma = new A(3755, 0x300A, 0x0250, V.DS);
        public static readonly A BrachyAccessoryDeviceSequence = new A(3756, 0x300A, 0x0260, V.SQ);
        public static readonly A BrachyAccessoryDeviceNumber = new A(3757, 0x300A, 0x0262, V.IS);
        public static readonly A BrachyAccessoryDeviceID = new A(3758, 0x300A, 0x0263, V.SH);
        public static readonly A BrachyAccessoryDeviceType = new A(3759, 0x300A, 0x0264, V.CS);
        public static readonly A BrachyAccessoryDeviceName = new A(3760, 0x300A, 0x0266, V.LO);
        public static readonly A BrachyAccessoryDeviceNominalThickness = new A(3761, 0x300A, 0x026A, V.DS);
        public static readonly A BrachyAccessoryDeviceNominalTransmission = new A(3762, 0x300A, 0x026C, V.DS);
        public static readonly A ChannelEffectiveLength = new A(3763, 0x300A, 0x0271, V.DS);
        public static readonly A ChannelInnerLength = new A(3764, 0x300A, 0x0272, V.DS);
        public static readonly A AfterloaderChannelID = new A(3765, 0x300A, 0x0273, V.SH);
        public static readonly A SourceApplicatorTipLength = new A(3766, 0x300A, 0x0274, V.DS);
        public static readonly A ChannelSequence = new A(3767, 0x300A, 0x0280, V.SQ);
        public static readonly A ChannelNumber = new A(3768, 0x300A, 0x0282, V.IS);
        public static readonly A ChannelLength = new A(3769, 0x300A, 0x0284, V.DS);
        public static readonly A ChannelTotalTime = new A(3770, 0x300A, 0x0286, V.DS);
        public static readonly A SourceMovementType = new A(3771, 0x300A, 0x0288, V.CS);
        public static readonly A NumberOfPulses = new A(3772, 0x300A, 0x028A, V.IS);
        public static readonly A PulseRepetitionInterval = new A(3773, 0x300A, 0x028C, V.DS);
        public static readonly A SourceApplicatorNumber = new A(3774, 0x300A, 0x0290, V.IS);
        public static readonly A SourceApplicatorID = new A(3775, 0x300A, 0x0291, V.SH);
        public static readonly A SourceApplicatorType = new A(3776, 0x300A, 0x0292, V.CS);
        public static readonly A SourceApplicatorName = new A(3777, 0x300A, 0x0294, V.LO);
        public static readonly A SourceApplicatorLength = new A(3778, 0x300A, 0x0296, V.DS);
        public static readonly A SourceApplicatorManufacturer = new A(3779, 0x300A, 0x0298, V.LO);
        public static readonly A SourceApplicatorWallNominalThickness = new A(3780, 0x300A, 0x029C, V.DS);
        public static readonly A SourceApplicatorWallNominalTransmission = new A(3781, 0x300A, 0x029E, V.DS);
        public static readonly A SourceApplicatorStepSize = new A(3782, 0x300A, 0x02A0, V.DS);
        public static readonly A TransferTubeNumber = new A(3783, 0x300A, 0x02A2, V.IS);
        public static readonly A TransferTubeLength = new A(3784, 0x300A, 0x02A4, V.DS);
        public static readonly A ChannelShieldSequence = new A(3785, 0x300A, 0x02B0, V.SQ);
        public static readonly A ChannelShieldNumber = new A(3786, 0x300A, 0x02B2, V.IS);
        public static readonly A ChannelShieldID = new A(3787, 0x300A, 0x02B3, V.SH);
        public static readonly A ChannelShieldName = new A(3788, 0x300A, 0x02B4, V.LO);
        public static readonly A ChannelShieldNominalThickness = new A(3789, 0x300A, 0x02B8, V.DS);
        public static readonly A ChannelShieldNominalTransmission = new A(3790, 0x300A, 0x02BA, V.DS);
        public static readonly A FinalCumulativeTimeWeight = new A(3791, 0x300A, 0x02C8, V.DS);
        public static readonly A BrachyControlPointSequence = new A(3792, 0x300A, 0x02D0, V.SQ);
        public static readonly A ControlPointRelativePosition = new A(3793, 0x300A, 0x02D2, V.DS);
        public static readonly A ControlPoint3DPosition = new A(3794, 0x300A, 0x02D4, V.DS);
        public static readonly A CumulativeTimeWeight = new A(3795, 0x300A, 0x02D6, V.DS);
        public static readonly A CompensatorDivergence = new A(3796, 0x300A, 0x02E0, V.CS);
        public static readonly A CompensatorMountingPosition = new A(3797, 0x300A, 0x02E1, V.CS);
        public static readonly A SourceToCompensatorDistance = new A(3798, 0x300A, 0x02E2, V.DS);
        public static readonly A TotalCompensatorTrayWaterEquivalentThickness = new A(3799, 0x300A, 0x02E3, V.FL);
        public static readonly A IsocenterToCompensatorTrayDistance = new A(3800, 0x300A, 0x02E4, V.FL);
        public static readonly A CompensatorColumnOffset = new A(3801, 0x300A, 0x02E5, V.FL);
        public static readonly A IsocenterToCompensatorDistances = new A(3802, 0x300A, 0x02E6, V.FL);
        public static readonly A CompensatorRelativeStoppingPowerRatio = new A(3803, 0x300A, 0x02E7, V.FL);
        public static readonly A CompensatorMillingToolDiameter = new A(3804, 0x300A, 0x02E8, V.FL);
        public static readonly A IonRangeCompensatorSequence = new A(3805, 0x300A, 0x02EA, V.SQ);
        public static readonly A CompensatorDescription = new A(3806, 0x300A, 0x02EB, V.LT);
        public static readonly A RadiationMassNumber = new A(3807, 0x300A, 0x0302, V.IS);
        public static readonly A RadiationAtomicNumber = new A(3808, 0x300A, 0x0304, V.IS);
        public static readonly A RadiationChargeState = new A(3809, 0x300A, 0x0306, V.SS);
        public static readonly A ScanMode = new A(3810, 0x300A, 0x0308, V.CS);
        public static readonly A ModulatedScanModeType = new A(3811, 0x300A, 0x0309, V.CS);
        public static readonly A VirtualSourceAxisDistances = new A(3812, 0x300A, 0x030A, V.FL);
        public static readonly A SnoutSequence = new A(3813, 0x300A, 0x030C, V.SQ);
        public static readonly A SnoutPosition = new A(3814, 0x300A, 0x030D, V.FL);
        public static readonly A SnoutID = new A(3815, 0x300A, 0x030F, V.SH);
        public static readonly A NumberOfRangeShifters = new A(3816, 0x300A, 0x0312, V.IS);
        public static readonly A RangeShifterSequence = new A(3817, 0x300A, 0x0314, V.SQ);
        public static readonly A RangeShifterNumber = new A(3818, 0x300A, 0x0316, V.IS);
        public static readonly A RangeShifterID = new A(3819, 0x300A, 0x0318, V.SH);
        public static readonly A RangeShifterType = new A(3820, 0x300A, 0x0320, V.CS);
        public static readonly A RangeShifterDescription = new A(3821, 0x300A, 0x0322, V.LO);
        public static readonly A NumberOfLateralSpreadingDevices = new A(3822, 0x300A, 0x0330, V.IS);
        public static readonly A LateralSpreadingDeviceSequence = new A(3823, 0x300A, 0x0332, V.SQ);
        public static readonly A LateralSpreadingDeviceNumber = new A(3824, 0x300A, 0x0334, V.IS);
        public static readonly A LateralSpreadingDeviceID = new A(3825, 0x300A, 0x0336, V.SH);
        public static readonly A LateralSpreadingDeviceType = new A(3826, 0x300A, 0x0338, V.CS);
        public static readonly A LateralSpreadingDeviceDescription = new A(3827, 0x300A, 0x033A, V.LO);
        public static readonly A LateralSpreadingDeviceWaterEquivalentThickness = new A(3828, 0x300A, 0x033C, V.FL);
        public static readonly A NumberOfRangeModulators = new A(3829, 0x300A, 0x0340, V.IS);
        public static readonly A RangeModulatorSequence = new A(3830, 0x300A, 0x0342, V.SQ);
        public static readonly A RangeModulatorNumber = new A(3831, 0x300A, 0x0344, V.IS);
        public static readonly A RangeModulatorID = new A(3832, 0x300A, 0x0346, V.SH);
        public static readonly A RangeModulatorType = new A(3833, 0x300A, 0x0348, V.CS);
        public static readonly A RangeModulatorDescription = new A(3834, 0x300A, 0x034A, V.LO);
        public static readonly A BeamCurrentModulationID = new A(3835, 0x300A, 0x034C, V.SH);
        public static readonly A PatientSupportType = new A(3836, 0x300A, 0x0350, V.CS);
        public static readonly A PatientSupportID = new A(3837, 0x300A, 0x0352, V.SH);
        public static readonly A PatientSupportAccessoryCode = new A(3838, 0x300A, 0x0354, V.LO);
        public static readonly A TrayAccessoryCode = new A(3839, 0x300A, 0x0355, V.LO);
        public static readonly A FixationLightAzimuthalAngle = new A(3840, 0x300A, 0x0356, V.FL);
        public static readonly A FixationLightPolarAngle = new A(3841, 0x300A, 0x0358, V.FL);
        public static readonly A MetersetRate = new A(3842, 0x300A, 0x035A, V.FL);
        public static readonly A RangeShifterSettingsSequence = new A(3843, 0x300A, 0x0360, V.SQ);
        public static readonly A RangeShifterSetting = new A(3844, 0x300A, 0x0362, V.LO);
        public static readonly A IsocenterToRangeShifterDistance = new A(3845, 0x300A, 0x0364, V.FL);
        public static readonly A RangeShifterWaterEquivalentThickness = new A(3846, 0x300A, 0x0366, V.FL);
        public static readonly A LateralSpreadingDeviceSettingsSequence = new A(3847, 0x300A, 0x0370, V.SQ);
        public static readonly A LateralSpreadingDeviceSetting = new A(3848, 0x300A, 0x0372, V.LO);
        public static readonly A IsocenterToLateralSpreadingDeviceDistance = new A(3849, 0x300A, 0x0374, V.FL);
        public static readonly A RangeModulatorSettingsSequence = new A(3850, 0x300A, 0x0380, V.SQ);
        public static readonly A RangeModulatorGatingStartValue = new A(3851, 0x300A, 0x0382, V.FL);
        public static readonly A RangeModulatorGatingStopValue = new A(3852, 0x300A, 0x0384, V.FL);
        public static readonly A RangeModulatorGatingStartWaterEquivalentThickness = new A(3853, 0x300A, 0x0386, V.FL);
        public static readonly A RangeModulatorGatingStopWaterEquivalentThickness = new A(3854, 0x300A, 0x0388, V.FL);
        public static readonly A IsocenterToRangeModulatorDistance = new A(3855, 0x300A, 0x038A, V.FL);
        public static readonly A ScanSpotTimeOffset = new A(3856, 0x300A, 0x038F, V.FL);
        public static readonly A ScanSpotTuneID = new A(3857, 0x300A, 0x0390, V.SH);
        public static readonly A ScanSpotPrescribedIndices = new A(3858, 0x300A, 0x0391, V.IS);
        public static readonly A NumberOfScanSpotPositions = new A(3859, 0x300A, 0x0392, V.IS);
        public static readonly A ScanSpotReordered = new A(3860, 0x300A, 0x0393, V.CS);
        public static readonly A ScanSpotPositionMap = new A(3861, 0x300A, 0x0394, V.FL);
        public static readonly A ScanSpotReorderingAllowed = new A(3862, 0x300A, 0x0395, V.CS);
        public static readonly A ScanSpotMetersetWeights = new A(3863, 0x300A, 0x0396, V.FL);
        public static readonly A ScanningSpotSize = new A(3864, 0x300A, 0x0398, V.FL);
        public static readonly A NumberOfPaintings = new A(3865, 0x300A, 0x039A, V.IS);
        public static readonly A IonToleranceTableSequence = new A(3866, 0x300A, 0x03A0, V.SQ);
        public static readonly A IonBeamSequence = new A(3867, 0x300A, 0x03A2, V.SQ);
        public static readonly A IonBeamLimitingDeviceSequence = new A(3868, 0x300A, 0x03A4, V.SQ);
        public static readonly A IonBlockSequence = new A(3869, 0x300A, 0x03A6, V.SQ);
        public static readonly A IonControlPointSequence = new A(3870, 0x300A, 0x03A8, V.SQ);
        public static readonly A IonWedgeSequence = new A(3871, 0x300A, 0x03AA, V.SQ);
        public static readonly A IonWedgePositionSequence = new A(3872, 0x300A, 0x03AC, V.SQ);
        public static readonly A ReferencedSetupImageSequence = new A(3873, 0x300A, 0x0401, V.SQ);
        public static readonly A SetupImageComment = new A(3874, 0x300A, 0x0402, V.ST);
        public static readonly A MotionSynchronizationSequence = new A(3875, 0x300A, 0x0410, V.SQ);
        public static readonly A ControlPointOrientation = new A(3876, 0x300A, 0x0412, V.FL);
        public static readonly A GeneralAccessorySequence = new A(3877, 0x300A, 0x0420, V.SQ);
        public static readonly A GeneralAccessoryID = new A(3878, 0x300A, 0x0421, V.SH);
        public static readonly A GeneralAccessoryDescription = new A(3879, 0x300A, 0x0422, V.ST);
        public static readonly A GeneralAccessoryType = new A(3880, 0x300A, 0x0423, V.CS);
        public static readonly A GeneralAccessoryNumber = new A(3881, 0x300A, 0x0424, V.IS);
        public static readonly A SourceToGeneralAccessoryDistance = new A(3882, 0x300A, 0x0425, V.FL);
        public static readonly A ApplicatorGeometrySequence = new A(3883, 0x300A, 0x0431, V.SQ);
        public static readonly A ApplicatorApertureShape = new A(3884, 0x300A, 0x0432, V.CS);
        public static readonly A ApplicatorOpening = new A(3885, 0x300A, 0x0433, V.FL);
        public static readonly A ApplicatorOpeningX = new A(3886, 0x300A, 0x0434, V.FL);
        public static readonly A ApplicatorOpeningY = new A(3887, 0x300A, 0x0435, V.FL);
        public static readonly A SourceToApplicatorMountingPositionDistance = new A(3888, 0x300A, 0x0436, V.FL);
        public static readonly A NumberOfBlockSlabItems = new A(3889, 0x300A, 0x0440, V.IS);
        public static readonly A BlockSlabSequence = new A(3890, 0x300A, 0x0441, V.SQ);
        public static readonly A BlockSlabThickness = new A(3891, 0x300A, 0x0442, V.DS);
        public static readonly A BlockSlabNumber = new A(3892, 0x300A, 0x0443, V.US);
        public static readonly A DeviceMotionControlSequence = new A(3893, 0x300A, 0x0450, V.SQ);
        public static readonly A DeviceMotionExecutionMode = new A(3894, 0x300A, 0x0451, V.CS);
        public static readonly A DeviceMotionObservationMode = new A(3895, 0x300A, 0x0452, V.CS);
        public static readonly A DeviceMotionParameterCodeSequence = new A(3896, 0x300A, 0x0453, V.SQ);
        public static readonly A DistalDepthFraction = new A(3897, 0x300A, 0x0501, V.FL);
        public static readonly A DistalDepth = new A(3898, 0x300A, 0x0502, V.FL);
        public static readonly A NominalRangeModulationFractions = new A(3899, 0x300A, 0x0503, V.FL);
        public static readonly A NominalRangeModulatedRegionDepths = new A(3900, 0x300A, 0x0504, V.FL);
        public static readonly A DepthDoseParametersSequence = new A(3901, 0x300A, 0x0505, V.SQ);
        public static readonly A DeliveredDepthDoseParametersSequence = new A(3902, 0x300A, 0x0506, V.SQ);
        public static readonly A DeliveredDistalDepthFraction = new A(3903, 0x300A, 0x0507, V.FL);
        public static readonly A DeliveredDistalDepth = new A(3904, 0x300A, 0x0508, V.FL);
        public static readonly A DeliveredNominalRangeModulationFractions = new A(3905, 0x300A, 0x0509, V.FL);
        public static readonly A DeliveredNominalRangeModulatedRegionDepths = new A(3906, 0x300A, 0x0510, V.FL);
        public static readonly A DeliveredReferenceDoseDefinition = new A(3907, 0x300A, 0x0511, V.CS);
        public static readonly A ReferenceDoseDefinition = new A(3908, 0x300A, 0x0512, V.CS);
        public static readonly A RTControlPointIndex = new A(3909, 0x300A, 0x0600, V.US);
        public static readonly A RadiationGenerationModeIndex = new A(3910, 0x300A, 0x0601, V.US);
        public static readonly A ReferencedDefinedDeviceIndex = new A(3911, 0x300A, 0x0602, V.US);
        public static readonly A RadiationDoseIdentificationIndex = new A(3912, 0x300A, 0x0603, V.US);
        public static readonly A NumberOfRTControlPoints = new A(3913, 0x300A, 0x0604, V.US);
        public static readonly A ReferencedRadiationGenerationModeIndex = new A(3914, 0x300A, 0x0605, V.US);
        public static readonly A TreatmentPositionIndex = new A(3915, 0x300A, 0x0606, V.US);
        public static readonly A ReferencedDeviceIndex = new A(3916, 0x300A, 0x0607, V.US);
        public static readonly A TreatmentPositionGroupLabel = new A(3917, 0x300A, 0x0608, V.LO);
        public static readonly A TreatmentPositionGroupUID = new A(3918, 0x300A, 0x0609, V.UI);
        public static readonly A TreatmentPositionGroupSequence = new A(3919, 0x300A, 0x060A, V.SQ);
        public static readonly A ReferencedTreatmentPositionIndex = new A(3920, 0x300A, 0x060B, V.US);
        public static readonly A ReferencedRadiationDoseIdentificationIndex = new A(3921, 0x300A, 0x060C, V.US);
        public static readonly A RTAccessoryHolderWaterEquivalentThickness = new A(3922, 0x300A, 0x060D, V.FD);
        public static readonly A ReferencedRTAccessoryHolderDeviceIndex = new A(3923, 0x300A, 0x060E, V.US);
        public static readonly A RTAccessoryHolderSlotExistenceFlag = new A(3924, 0x300A, 0x060F, V.CS);
        public static readonly A RTAccessoryHolderSlotSequence = new A(3925, 0x300A, 0x0610, V.SQ);
        public static readonly A RTAccessoryHolderSlotID = new A(3926, 0x300A, 0x0611, V.LO);
        public static readonly A RTAccessoryHolderSlotDistance = new A(3927, 0x300A, 0x0612, V.FD);
        public static readonly A RTAccessorySlotDistance = new A(3928, 0x300A, 0x0613, V.FD);
        public static readonly A RTAccessoryHolderDefinitionSequence = new A(3929, 0x300A, 0x0614, V.SQ);
        public static readonly A RTAccessoryDeviceSlotID = new A(3930, 0x300A, 0x0615, V.LO);
        public static readonly A RTRadiationSequence = new A(3931, 0x300A, 0x0616, V.SQ);
        public static readonly A RadiationDoseSequence = new A(3932, 0x300A, 0x0617, V.SQ);
        public static readonly A RadiationDoseIdentificationSequence = new A(3933, 0x300A, 0x0618, V.SQ);
        public static readonly A RadiationDoseIdentificationLabel = new A(3934, 0x300A, 0x0619, V.LO);
        public static readonly A ReferenceDoseType = new A(3935, 0x300A, 0x061A, V.CS);
        public static readonly A PrimaryDoseValueIndicator = new A(3936, 0x300A, 0x061B, V.CS);
        public static readonly A DoseValuesSequence = new A(3937, 0x300A, 0x061C, V.SQ);
        public static readonly A DoseValuePurpose = new A(3938, 0x300A, 0x061D, V.CS);
        public static readonly A ReferenceDosePointCoordinates = new A(3939, 0x300A, 0x061E, V.FD);
        public static readonly A RadiationDoseValuesParametersSequence = new A(3940, 0x300A, 0x061F, V.SQ);
        public static readonly A MetersetToDoseMappingSequence = new A(3941, 0x300A, 0x0620, V.SQ);
        public static readonly A ExpectedInVivoMeasurementValuesSequence = new A(3942, 0x300A, 0x0621, V.SQ);
        public static readonly A ExpectedInVivoMeasurementValueIndex = new A(3943, 0x300A, 0x0622, V.US);
        public static readonly A RadiationDoseInVivoMeasurementLabel = new A(3944, 0x300A, 0x0623, V.LO);
        public static readonly A RadiationDoseCentralAxisDisplacement = new A(3945, 0x300A, 0x0624, V.FD);
        public static readonly A RadiationDoseValue = new A(3946, 0x300A, 0x0625, V.FD);
        public static readonly A RadiationDoseSourceToSkinDistance = new A(3947, 0x300A, 0x0626, V.FD);
        public static readonly A RadiationDoseMeasurementPointCoordinates = new A(3948, 0x300A, 0x0627, V.FD);
        public static readonly A RadiationDoseSourceToExternalContourDistance = new A(3949, 0x300A, 0x0628, V.FD);
        public static readonly A RTToleranceSetSequence = new A(3950, 0x300A, 0x0629, V.SQ);
        public static readonly A RTToleranceSetLabel = new A(3951, 0x300A, 0x062A, V.LO);
        public static readonly A AttributeToleranceValuesSequence = new A(3952, 0x300A, 0x062B, V.SQ);
        public static readonly A ToleranceValue = new A(3953, 0x300A, 0x062C, V.FD);
        public static readonly A PatientSupportPositionToleranceSequence = new A(3954, 0x300A, 0x062D, V.SQ);
        public static readonly A TreatmentTimeLimit = new A(3955, 0x300A, 0x062E, V.FD);
        public static readonly A CArmPhotonElectronControlPointSequence = new A(3956, 0x300A, 0x062F, V.SQ);
        public static readonly A ReferencedRTRadiationSequence = new A(3957, 0x300A, 0x0630, V.SQ);
        public static readonly A ReferencedRTInstanceSequence = new A(3958, 0x300A, 0x0631, V.SQ);
        public static readonly A ReferencedRTPatientSetupSequence = new A(3959, 0x300A, 0x0632, V.SQ);
        public static readonly A SourceToPatientSurfaceDistance = new A(3960, 0x300A, 0x0634, V.FD);
        public static readonly A TreatmentMachineSpecialModeCodeSequence = new A(3961, 0x300A, 0x0635, V.SQ);
        public static readonly A IntendedNumberOfFractions = new A(3962, 0x300A, 0x0636, V.US);
        public static readonly A RTRadiationSetIntent = new A(3963, 0x300A, 0x0637, V.CS);
        public static readonly A RTRadiationPhysicalAndGeometricContentDetailFlag = new A(3964, 0x300A, 0x0638, V.CS);
        public static readonly A RTRecordFlag = new A(3965, 0x300A, 0x0639, V.CS);
        public static readonly A TreatmentDeviceIdentificationSequence = new A(3966, 0x300A, 0x063A, V.SQ);
        public static readonly A ReferencedRTPhysicianIntentSequence = new A(3967, 0x300A, 0x063B, V.SQ);
        public static readonly A CumulativeMeterset = new A(3968, 0x300A, 0x063C, V.FD);
        public static readonly A DeliveryRate = new A(3969, 0x300A, 0x063D, V.FD);
        public static readonly A DeliveryRateUnitSequence = new A(3970, 0x300A, 0x063E, V.SQ);
        public static readonly A TreatmentPositionSequence = new A(3971, 0x300A, 0x063F, V.SQ);
        public static readonly A RadiationSourceAxisDistance = new A(3972, 0x300A, 0x0640, V.FD);
        public static readonly A NumberOfRTBeamLimitingDevices = new A(3973, 0x300A, 0x0641, V.US);
        public static readonly A RTBeamLimitingDeviceProximalDistance = new A(3974, 0x300A, 0x0642, V.FD);
        public static readonly A RTBeamLimitingDeviceDistalDistance = new A(3975, 0x300A, 0x0643, V.FD);
        public static readonly A ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence = new A(3976, 0x300A, 0x0644, V.SQ);
        public static readonly A BeamModifierOrientationAngle = new A(3977, 0x300A, 0x0645, V.FD);
        public static readonly A FixedRTBeamDelimiterDeviceSequence = new A(3978, 0x300A, 0x0646, V.SQ);
        public static readonly A ParallelRTBeamDelimiterDeviceSequence = new A(3979, 0x300A, 0x0647, V.SQ);
        public static readonly A NumberOfParallelRTBeamDelimiters = new A(3980, 0x300A, 0x0648, V.US);
        public static readonly A ParallelRTBeamDelimiterBoundaries = new A(3981, 0x300A, 0x0649, V.FD);
        public static readonly A ParallelRTBeamDelimiterPositions = new A(3982, 0x300A, 0x064A, V.FD);
        public static readonly A RTBeamLimitingDeviceOffset = new A(3983, 0x300A, 0x064B, V.FD);
        public static readonly A RTBeamDelimiterGeometrySequence = new A(3984, 0x300A, 0x064C, V.SQ);
        public static readonly A RTBeamLimitingDeviceDefinitionSequence = new A(3985, 0x300A, 0x064D, V.SQ);
        public static readonly A ParallelRTBeamDelimiterOpeningMode = new A(3986, 0x300A, 0x064E, V.CS);
        public static readonly A ParallelRTBeamDelimiterLeafMountingSide = new A(3987, 0x300A, 0x064F, V.CS);
        public static readonly A PatientSetupUID = new A(3988, 0x300A, 0x0650, V.UI);
        public static readonly A WedgeDefinitionSequence = new A(3989, 0x300A, 0x0651, V.SQ);
        public static readonly A RadiationBeamWedgeAngle = new A(3990, 0x300A, 0x0652, V.FD);
        public static readonly A RadiationBeamWedgeThinEdgeDistance = new A(3991, 0x300A, 0x0653, V.FD);
        public static readonly A RadiationBeamEffectiveWedgeAngle = new A(3992, 0x300A, 0x0654, V.FD);
        public static readonly A NumberOfWedgePositions = new A(3993, 0x300A, 0x0655, V.US);
        public static readonly A RTBeamLimitingDeviceOpeningSequence = new A(3994, 0x300A, 0x0656, V.SQ);
        public static readonly A NumberOfRTBeamLimitingDeviceOpenings = new A(3995, 0x300A, 0x0657, V.US);
        public static readonly A RadiationDosimeterUnitSequence = new A(3996, 0x300A, 0x0658, V.SQ);
        public static readonly A RTDeviceDistanceReferenceLocationCodeSequence = new A(3997, 0x300A, 0x0659, V.SQ);
        public static readonly A RadiationDeviceConfigurationAndCommissioningKeySequence = new A(3998, 0x300A, 0x065A, V.SQ);
        public static readonly A PatientSupportPositionParameterSequence = new A(3999, 0x300A, 0x065B, V.SQ);
        public static readonly A PatientSupportPositionSpecificationMethod = new A(4000, 0x300A, 0x065C, V.CS);
        public static readonly A PatientSupportPositionDeviceParameterSequence = new A(4001, 0x300A, 0x065D, V.SQ);
        public static readonly A DeviceOrderIndex = new A(4002, 0x300A, 0x065E, V.US);
        public static readonly A PatientSupportPositionParameterOrderIndex = new A(4003, 0x300A, 0x065F, V.US);
        public static readonly A PatientSupportPositionDeviceToleranceSequence = new A(4004, 0x300A, 0x0660, V.SQ);
        public static readonly A PatientSupportPositionToleranceOrderIndex = new A(4005, 0x300A, 0x0661, V.US);
        public static readonly A CompensatorDefinitionSequence = new A(4006, 0x300A, 0x0662, V.SQ);
        public static readonly A CompensatorMapOrientation = new A(4007, 0x300A, 0x0663, V.CS);
        public static readonly A CompensatorProximalThicknessMap = new A(4008, 0x300A, 0x0664, V.OF);
        public static readonly A CompensatorDistalThicknessMap = new A(4009, 0x300A, 0x0665, V.OF);
        public static readonly A CompensatorBasePlaneOffset = new A(4010, 0x300A, 0x0666, V.FD);
        public static readonly A CompensatorShapeFabricationCodeSequence = new A(4011, 0x300A, 0x0667, V.SQ);
        public static readonly A CompensatorShapeSequence = new A(4012, 0x300A, 0x0668, V.SQ);
        public static readonly A RadiationBeamCompensatorMillingToolDiameter = new A(4013, 0x300A, 0x0669, V.FD);
        public static readonly A BlockDefinitionSequence = new A(4014, 0x300A, 0x066A, V.SQ);
        public static readonly A BlockEdgeData = new A(4015, 0x300A, 0x066B, V.OF);
        public static readonly A BlockOrientation = new A(4016, 0x300A, 0x066C, V.CS);
        public static readonly A RadiationBeamBlockThickness = new A(4017, 0x300A, 0x066D, V.FD);
        public static readonly A RadiationBeamBlockSlabThickness = new A(4018, 0x300A, 0x066E, V.FD);
        public static readonly A BlockEdgeDataSequence = new A(4019, 0x300A, 0x066F, V.SQ);
        public static readonly A NumberOfRTAccessoryHolders = new A(4020, 0x300A, 0x0670, V.US);
        public static readonly A GeneralAccessoryDefinitionSequence = new A(4021, 0x300A, 0x0671, V.SQ);
        public static readonly A NumberOfGeneralAccessories = new A(4022, 0x300A, 0x0672, V.US);
        public static readonly A BolusDefinitionSequence = new A(4023, 0x300A, 0x0673, V.SQ);
        public static readonly A NumberOfBoluses = new A(4024, 0x300A, 0x0674, V.US);
        public static readonly A EquipmentFrameOfReferenceUID = new A(4025, 0x300A, 0x0675, V.UI);
        public static readonly A EquipmentFrameOfReferenceDescription = new A(4026, 0x300A, 0x0676, V.ST);
        public static readonly A EquipmentReferencePointCoordinatesSequence = new A(4027, 0x300A, 0x0677, V.SQ);
        public static readonly A EquipmentReferencePointCodeSequence = new A(4028, 0x300A, 0x0678, V.SQ);
        public static readonly A RTBeamLimitingDeviceAngle = new A(4029, 0x300A, 0x0679, V.FD);
        public static readonly A SourceRollAngle = new A(4030, 0x300A, 0x067A, V.FD);
        public static readonly A RadiationGenerationModeSequence = new A(4031, 0x300A, 0x067B, V.SQ);
        public static readonly A RadiationGenerationModeLabel = new A(4032, 0x300A, 0x067C, V.SH);
        public static readonly A RadiationGenerationModeDescription = new A(4033, 0x300A, 0x067D, V.ST);
        public static readonly A RadiationGenerationModeMachineCodeSequence = new A(4034, 0x300A, 0x067E, V.SQ);
        public static readonly A RadiationTypeCodeSequence = new A(4035, 0x300A, 0x067F, V.SQ);
        public static readonly A NominalEnergy = new A(4036, 0x300A, 0x0680, V.DS);
        public static readonly A MinimumNominalEnergy = new A(4037, 0x300A, 0x0681, V.DS);
        public static readonly A MaximumNominalEnergy = new A(4038, 0x300A, 0x0682, V.DS);
        public static readonly A RadiationFluenceModifierCodeSequence = new A(4039, 0x300A, 0x0683, V.SQ);
        public static readonly A EnergyUnitCodeSequence = new A(4040, 0x300A, 0x0684, V.SQ);
        public static readonly A NumberOfRadiationGenerationModes = new A(4041, 0x300A, 0x0685, V.US);
        public static readonly A PatientSupportDevicesSequence = new A(4042, 0x300A, 0x0686, V.SQ);
        public static readonly A NumberOfPatientSupportDevices = new A(4043, 0x300A, 0x0687, V.US);
        public static readonly A RTBeamModifierDefinitionDistance = new A(4044, 0x300A, 0x0688, V.FD);
        public static readonly A BeamAreaLimitSequence = new A(4045, 0x300A, 0x0689, V.SQ);
        public static readonly A ReferencedRTPrescriptionSequence = new A(4046, 0x300A, 0x068A, V.SQ);
        public static readonly A ReferencedRTPlanSequence = new A(4047, 0x300C, 0x0002, V.SQ);
        public static readonly A ReferencedBeamSequence = new A(4048, 0x300C, 0x0004, V.SQ);
        public static readonly A ReferencedBeamNumber = new A(4049, 0x300C, 0x0006, V.IS);
        public static readonly A ReferencedReferenceImageNumber = new A(4050, 0x300C, 0x0007, V.IS);
        public static readonly A StartCumulativeMetersetWeight = new A(4051, 0x300C, 0x0008, V.DS);
        public static readonly A EndCumulativeMetersetWeight = new A(4052, 0x300C, 0x0009, V.DS);
        public static readonly A ReferencedBrachyApplicationSetupSequence = new A(4053, 0x300C, 0x000A, V.SQ);
        public static readonly A ReferencedBrachyApplicationSetupNumber = new A(4054, 0x300C, 0x000C, V.IS);
        public static readonly A ReferencedSourceNumber = new A(4055, 0x300C, 0x000E, V.IS);
        public static readonly A ReferencedFractionGroupSequence = new A(4056, 0x300C, 0x0020, V.SQ);
        public static readonly A ReferencedFractionGroupNumber = new A(4057, 0x300C, 0x0022, V.IS);
        public static readonly A ReferencedVerificationImageSequence = new A(4058, 0x300C, 0x0040, V.SQ);
        public static readonly A ReferencedReferenceImageSequence = new A(4059, 0x300C, 0x0042, V.SQ);
        public static readonly A ReferencedDoseReferenceSequence = new A(4060, 0x300C, 0x0050, V.SQ);
        public static readonly A ReferencedDoseReferenceNumber = new A(4061, 0x300C, 0x0051, V.IS);
        public static readonly A BrachyReferencedDoseReferenceSequence = new A(4062, 0x300C, 0x0055, V.SQ);
        public static readonly A ReferencedStructureSetSequence = new A(4063, 0x300C, 0x0060, V.SQ);
        public static readonly A ReferencedPatientSetupNumber = new A(4064, 0x300C, 0x006A, V.IS);
        public static readonly A ReferencedDoseSequence = new A(4065, 0x300C, 0x0080, V.SQ);
        public static readonly A ReferencedToleranceTableNumber = new A(4066, 0x300C, 0x00A0, V.IS);
        public static readonly A ReferencedBolusSequence = new A(4067, 0x300C, 0x00B0, V.SQ);
        public static readonly A ReferencedWedgeNumber = new A(4068, 0x300C, 0x00C0, V.IS);
        public static readonly A ReferencedCompensatorNumber = new A(4069, 0x300C, 0x00D0, V.IS);
        public static readonly A ReferencedBlockNumber = new A(4070, 0x300C, 0x00E0, V.IS);
        public static readonly A ReferencedControlPointIndex = new A(4071, 0x300C, 0x00F0, V.IS);
        public static readonly A ReferencedControlPointSequence = new A(4072, 0x300C, 0x00F2, V.SQ);
        public static readonly A ReferencedStartControlPointIndex = new A(4073, 0x300C, 0x00F4, V.IS);
        public static readonly A ReferencedStopControlPointIndex = new A(4074, 0x300C, 0x00F6, V.IS);
        public static readonly A ReferencedRangeShifterNumber = new A(4075, 0x300C, 0x0100, V.IS);
        public static readonly A ReferencedLateralSpreadingDeviceNumber = new A(4076, 0x300C, 0x0102, V.IS);
        public static readonly A ReferencedRangeModulatorNumber = new A(4077, 0x300C, 0x0104, V.IS);
        public static readonly A OmittedBeamTaskSequence = new A(4078, 0x300C, 0x0111, V.SQ);
        public static readonly A ReasonForOmission = new A(4079, 0x300C, 0x0112, V.CS);
        public static readonly A ReasonForOmissionDescription = new A(4080, 0x300C, 0x0113, V.LO);
        public static readonly A ApprovalStatus = new A(4081, 0x300E, 0x0002, V.CS);
        public static readonly A ReviewDate = new A(4082, 0x300E, 0x0004, V.DA);
        public static readonly A ReviewTime = new A(4083, 0x300E, 0x0005, V.TM);
        public static readonly A ReviewerName = new A(4084, 0x300E, 0x0008, V.PN);
        public static readonly A RadiobiologicalDoseEffectSequence = new A(4085, 0x3010, 0x0001, V.SQ);
        public static readonly A RadiobiologicalDoseEffectFlag = new A(4086, 0x3010, 0x0002, V.CS);
        public static readonly A EffectiveDoseCalculationMethodCategoryCodeSequence = new A(4087, 0x3010, 0x0003, V.SQ);
        public static readonly A EffectiveDoseCalculationMethodCodeSequence = new A(4088, 0x3010, 0x0004, V.SQ);
        public static readonly A EffectiveDoseCalculationMethodDescription = new A(4089, 0x3010, 0x0005, V.LO);
        public static readonly A ConceptualVolumeUID = new A(4090, 0x3010, 0x0006, V.UI);
        public static readonly A OriginatingSOPInstanceReferenceSequence = new A(4091, 0x3010, 0x0007, V.SQ);
        public static readonly A ConceptualVolumeConstituentSequence = new A(4092, 0x3010, 0x0008, V.SQ);
        public static readonly A EquivalentConceptualVolumeInstanceReferenceSequence = new A(4093, 0x3010, 0x0009, V.SQ);
        public static readonly A EquivalentConceptualVolumesSequence = new A(4094, 0x3010, 0x000A, V.SQ);
        public static readonly A ReferencedConceptualVolumeUID = new A(4095, 0x3010, 0x000B, V.UI);
        public static readonly A ConceptualVolumeCombinationExpression = new A(4096, 0x3010, 0x000C, V.UT);
        public static readonly A ConceptualVolumeConstituentIndex = new A(4097, 0x3010, 0x000D, V.US);
        public static readonly A ConceptualVolumeCombinationFlag = new A(4098, 0x3010, 0x000E, V.CS);
        public static readonly A ConceptualVolumeCombinationDescription = new A(4099, 0x3010, 0x000F, V.ST);
        public static readonly A ConceptualVolumeSegmentationDefinedFlag = new A(4100, 0x3010, 0x0010, V.CS);
        public static readonly A ConceptualVolumeSegmentationReferenceSequence = new A(4101, 0x3010, 0x0011, V.SQ);
        public static readonly A ConceptualVolumeConstituentSegmentationReferenceSequence = new A(4102, 0x3010, 0x0012, V.SQ);
        public static readonly A ConstituentConceptualVolumeUID = new A(4103, 0x3010, 0x0013, V.UI);
        public static readonly A DerivationConceptualVolumeSequence = new A(4104, 0x3010, 0x0014, V.SQ);
        public static readonly A SourceConceptualVolumeUID = new A(4105, 0x3010, 0x0015, V.UI);
        public static readonly A ConceptualVolumeDerivationAlgorithmSequence = new A(4106, 0x3010, 0x0016, V.SQ);
        public static readonly A ConceptualVolumeDescription = new A(4107, 0x3010, 0x0017, V.ST);
        public static readonly A SourceConceptualVolumeSequence = new A(4108, 0x3010, 0x0018, V.SQ);
        public static readonly A AuthorIdentificationSequence = new A(4109, 0x3010, 0x0019, V.SQ);
        public static readonly A ManufacturerModelVersion = new A(4110, 0x3010, 0x001A, V.LO);
        public static readonly A DeviceAlternateIdentifier = new A(4111, 0x3010, 0x001B, V.UC);
        public static readonly A DeviceAlternateIdentifierType = new A(4112, 0x3010, 0x001C, V.CS);
        public static readonly A DeviceAlternateIdentifierFormat = new A(4113, 0x3010, 0x001D, V.LT);
        public static readonly A SegmentationCreationTemplateLabel = new A(4114, 0x3010, 0x001E, V.LO);
        public static readonly A SegmentationTemplateUID = new A(4115, 0x3010, 0x001F, V.UI);
        public static readonly A ReferencedSegmentReferenceIndex = new A(4116, 0x3010, 0x0020, V.US);
        public static readonly A SegmentReferenceSequence = new A(4117, 0x3010, 0x0021, V.SQ);
        public static readonly A SegmentReferenceIndex = new A(4118, 0x3010, 0x0022, V.US);
        public static readonly A DirectSegmentReferenceSequence = new A(4119, 0x3010, 0x0023, V.SQ);
        public static readonly A CombinationSegmentReferenceSequence = new A(4120, 0x3010, 0x0024, V.SQ);
        public static readonly A ConceptualVolumeSequence = new A(4121, 0x3010, 0x0025, V.SQ);
        public static readonly A SegmentedRTAccessoryDeviceSequence = new A(4122, 0x3010, 0x0026, V.SQ);
        public static readonly A SegmentCharacteristicsSequence = new A(4123, 0x3010, 0x0027, V.SQ);
        public static readonly A RelatedSegmentCharacteristicsSequence = new A(4124, 0x3010, 0x0028, V.SQ);
        public static readonly A SegmentCharacteristicsPrecedence = new A(4125, 0x3010, 0x0029, V.US);
        public static readonly A RTSegmentAnnotationSequence = new A(4126, 0x3010, 0x002A, V.SQ);
        public static readonly A SegmentAnnotationCategoryCodeSequence = new A(4127, 0x3010, 0x002B, V.SQ);
        public static readonly A SegmentAnnotationTypeCodeSequence = new A(4128, 0x3010, 0x002C, V.SQ);
        public static readonly A DeviceLabel = new A(4129, 0x3010, 0x002D, V.LO);
        public static readonly A DeviceTypeCodeSequence = new A(4130, 0x3010, 0x002E, V.SQ);
        public static readonly A PatientEquipmentRelationshipCodeSequence = new A(4131, 0x3010, 0x0030, V.SQ);
        public static readonly A ReferencedFiducialsUID = new A(4132, 0x3010, 0x0031, V.UI);
        public static readonly A PatientTreatmentOrientationSequence = new A(4133, 0x3010, 0x0032, V.SQ);
        public static readonly A UserContentLabel = new A(4134, 0x3010, 0x0033, V.SH);
        public static readonly A UserContentLongLabel = new A(4135, 0x3010, 0x0034, V.LO);
        public static readonly A EntityLabel = new A(4136, 0x3010, 0x0035, V.SH);
        public static readonly A EntityName = new A(4137, 0x3010, 0x0036, V.LO);
        public static readonly A EntityDescription = new A(4138, 0x3010, 0x0037, V.ST);
        public static readonly A EntityLongLabel = new A(4139, 0x3010, 0x0038, V.LO);
        public static readonly A DeviceIndex = new A(4140, 0x3010, 0x0039, V.US);
        public static readonly A RTTreatmentPhaseIndex = new A(4141, 0x3010, 0x003A, V.US);
        public static readonly A RTTreatmentPhaseUID = new A(4142, 0x3010, 0x003B, V.UI);
        public static readonly A RTPrescriptionIndex = new A(4143, 0x3010, 0x003C, V.US);
        public static readonly A RTSegmentAnnotationIndex = new A(4144, 0x3010, 0x003D, V.US);
        public static readonly A BasisRTTreatmentPhaseIndex = new A(4145, 0x3010, 0x003E, V.US);
        public static readonly A RelatedRTTreatmentPhaseIndex = new A(4146, 0x3010, 0x003F, V.US);
        public static readonly A ReferencedRTTreatmentPhaseIndex = new A(4147, 0x3010, 0x0040, V.US);
        public static readonly A ReferencedRTPrescriptionIndex = new A(4148, 0x3010, 0x0041, V.US);
        public static readonly A ReferencedParentRTPrescriptionIndex = new A(4149, 0x3010, 0x0042, V.US);
        public static readonly A ManufacturerDeviceIdentifier = new A(4150, 0x3010, 0x0043, V.ST);
        public static readonly A InstanceLevelReferencedPerformedProcedureStepSequence = new A(4151, 0x3010, 0x0044, V.SQ);
        public static readonly A RTTreatmentPhaseIntentPresenceFlag = new A(4152, 0x3010, 0x0045, V.CS);
        public static readonly A RadiotherapyTreatmentType = new A(4153, 0x3010, 0x0046, V.CS);
        public static readonly A TeletherapyRadiationType = new A(4154, 0x3010, 0x0047, V.CS);
        public static readonly A BrachytherapySourceType = new A(4155, 0x3010, 0x0048, V.CS);
        public static readonly A ReferencedRTTreatmentPhaseSequence = new A(4156, 0x3010, 0x0049, V.SQ);
        public static readonly A ReferencedDirectSegmentInstanceSequence = new A(4157, 0x3010, 0x004A, V.SQ);
        public static readonly A IntendedRTTreatmentPhaseSequence = new A(4158, 0x3010, 0x004B, V.SQ);
        public static readonly A IntendedPhaseStartDate = new A(4159, 0x3010, 0x004C, V.DA);
        public static readonly A IntendedPhaseEndDate = new A(4160, 0x3010, 0x004D, V.DA);
        public static readonly A RTTreatmentPhaseIntervalSequence = new A(4161, 0x3010, 0x004E, V.SQ);
        public static readonly A TemporalRelationshipIntervalAnchor = new A(4162, 0x3010, 0x004F, V.CS);
        public static readonly A MinimumNumberOfIntervalDays = new A(4163, 0x3010, 0x0050, V.FD);
        public static readonly A MaximumNumberOfIntervalDays = new A(4164, 0x3010, 0x0051, V.FD);
        public static readonly A PertinentSOPClassesInStudy = new A(4165, 0x3010, 0x0052, V.UI);
        public static readonly A PertinentSOPClassesInSeries = new A(4166, 0x3010, 0x0053, V.UI);
        public static readonly A RTPrescriptionLabel = new A(4167, 0x3010, 0x0054, V.LO);
        public static readonly A RTPhysicianIntentPredecessorSequence = new A(4168, 0x3010, 0x0055, V.SQ);
        public static readonly A RTTreatmentApproachLabel = new A(4169, 0x3010, 0x0056, V.LO);
        public static readonly A RTPhysicianIntentSequence = new A(4170, 0x3010, 0x0057, V.SQ);
        public static readonly A RTPhysicianIntentIndex = new A(4171, 0x3010, 0x0058, V.US);
        public static readonly A RTTreatmentIntentType = new A(4172, 0x3010, 0x0059, V.CS);
        public static readonly A RTPhysicianIntentNarrative = new A(4173, 0x3010, 0x005A, V.UT);
        public static readonly A RTProtocolCodeSequence = new A(4174, 0x3010, 0x005B, V.SQ);
        public static readonly A ReasonForSuperseding = new A(4175, 0x3010, 0x005C, V.ST);
        public static readonly A RTDiagnosisCodeSequence = new A(4176, 0x3010, 0x005D, V.SQ);
        public static readonly A ReferencedRTPhysicianIntentIndex = new A(4177, 0x3010, 0x005E, V.US);
        public static readonly A RTPhysicianIntentInputInstanceSequence = new A(4178, 0x3010, 0x005F, V.SQ);
        public static readonly A RTAnatomicPrescriptionSequence = new A(4179, 0x3010, 0x0060, V.SQ);
        public static readonly A PriorTreatmentDoseDescription = new A(4180, 0x3010, 0x0061, V.UT);
        public static readonly A PriorTreatmentReferenceSequence = new A(4181, 0x3010, 0x0062, V.SQ);
        public static readonly A DosimetricObjectiveEvaluationScope = new A(4182, 0x3010, 0x0063, V.CS);
        public static readonly A TherapeuticRoleCategoryCodeSequence = new A(4183, 0x3010, 0x0064, V.SQ);
        public static readonly A TherapeuticRoleTypeCodeSequence = new A(4184, 0x3010, 0x0065, V.SQ);
        public static readonly A ConceptualVolumeOptimizationPrecedence = new A(4185, 0x3010, 0x0066, V.US);
        public static readonly A ConceptualVolumeCategoryCodeSequence = new A(4186, 0x3010, 0x0067, V.SQ);
        public static readonly A ConceptualVolumeBlockingConstraint = new A(4187, 0x3010, 0x0068, V.CS);
        public static readonly A ConceptualVolumeTypeCodeSequence = new A(4188, 0x3010, 0x0069, V.SQ);
        public static readonly A ConceptualVolumeTypeModifierCodeSequence = new A(4189, 0x3010, 0x006A, V.SQ);
        public static readonly A RTPrescriptionSequence = new A(4190, 0x3010, 0x006B, V.SQ);
        public static readonly A DosimetricObjectiveSequence = new A(4191, 0x3010, 0x006C, V.SQ);
        public static readonly A DosimetricObjectiveTypeCodeSequence = new A(4192, 0x3010, 0x006D, V.SQ);
        public static readonly A DosimetricObjectiveUID = new A(4193, 0x3010, 0x006E, V.UI);
        public static readonly A ReferencedDosimetricObjectiveUID = new A(4194, 0x3010, 0x006F, V.UI);
        public static readonly A DosimetricObjectiveParameterSequence = new A(4195, 0x3010, 0x0070, V.SQ);
        public static readonly A ReferencedDosimetricObjectivesSequence = new A(4196, 0x3010, 0x0071, V.SQ);
        public static readonly A AbsoluteDosimetricObjectiveFlag = new A(4197, 0x3010, 0x0073, V.CS);
        public static readonly A DosimetricObjectiveWeight = new A(4198, 0x3010, 0x0074, V.FD);
        public static readonly A DosimetricObjectivePurpose = new A(4199, 0x3010, 0x0075, V.CS);
        public static readonly A PlanningInputInformationSequence = new A(4200, 0x3010, 0x0076, V.SQ);
        public static readonly A TreatmentSite = new A(4201, 0x3010, 0x0077, V.LO);
        public static readonly A TreatmentSiteCodeSequence = new A(4202, 0x3010, 0x0078, V.SQ);
        public static readonly A FractionPatternSequence = new A(4203, 0x3010, 0x0079, V.SQ);
        public static readonly A TreatmentTechniqueNotes = new A(4204, 0x3010, 0x007A, V.UT);
        public static readonly A PrescriptionNotes = new A(4205, 0x3010, 0x007B, V.UT);
        public static readonly A NumberOfIntervalFractions = new A(4206, 0x3010, 0x007C, V.IS);
        public static readonly A NumberOfFractions = new A(4207, 0x3010, 0x007D, V.US);
        public static readonly A IntendedDeliveryDuration = new A(4208, 0x3010, 0x007E, V.US);
        public static readonly A FractionationNotes = new A(4209, 0x3010, 0x007F, V.UT);
        public static readonly A RTTreatmentTechniqueCodeSequence = new A(4210, 0x3010, 0x0080, V.SQ);
        public static readonly A PrescriptionNotesSequence = new A(4211, 0x3010, 0x0081, V.SQ);
        public static readonly A FractionBasedRelationshipSequence = new A(4212, 0x3010, 0x0082, V.SQ);
        public static readonly A FractionBasedRelationshipIntervalAnchor = new A(4213, 0x3010, 0x0083, V.CS);
        public static readonly A MinimumHoursBetweenFractions = new A(4214, 0x3010, 0x0084, V.FD);
        public static readonly A IntendedFractionStartTime = new A(4215, 0x3010, 0x0085, V.TM);
        public static readonly A IntendedStartDayOfWeek = new A(4216, 0x3010, 0x0086, V.LT);
        public static readonly A WeekdayFractionPatternSequence = new A(4217, 0x3010, 0x0087, V.SQ);
        public static readonly A DeliveryTimeStructureCodeSequence = new A(4218, 0x3010, 0x0088, V.SQ);
        public static readonly A LowEnergyDetectors = new A(4219, 0x4010, 0x0001, V.CS);
        public static readonly A HighEnergyDetectors = new A(4220, 0x4010, 0x0002, V.CS);
        public static readonly A DetectorGeometrySequence = new A(4221, 0x4010, 0x0004, V.SQ);
        public static readonly A ThreatROIVoxelSequence = new A(4222, 0x4010, 0x1001, V.SQ);
        public static readonly A ThreatROIBase = new A(4223, 0x4010, 0x1004, V.FL);
        public static readonly A ThreatROIExtents = new A(4224, 0x4010, 0x1005, V.FL);
        public static readonly A ThreatROIBitmap = new A(4225, 0x4010, 0x1006, V.OB);
        public static readonly A RouteSegmentID = new A(4226, 0x4010, 0x1007, V.SH);
        public static readonly A GantryType = new A(4227, 0x4010, 0x1008, V.CS);
        public static readonly A OOIOwnerType = new A(4228, 0x4010, 0x1009, V.CS);
        public static readonly A RouteSegmentSequence = new A(4229, 0x4010, 0x100A, V.SQ);
        public static readonly A PotentialThreatObjectID = new A(4230, 0x4010, 0x1010, V.US);
        public static readonly A ThreatSequence = new A(4231, 0x4010, 0x1011, V.SQ);
        public static readonly A ThreatCategory = new A(4232, 0x4010, 0x1012, V.CS);
        public static readonly A ThreatCategoryDescription = new A(4233, 0x4010, 0x1013, V.LT);
        public static readonly A ATDAbilityAssessment = new A(4234, 0x4010, 0x1014, V.CS);
        public static readonly A ATDAssessmentFlag = new A(4235, 0x4010, 0x1015, V.CS);
        public static readonly A ATDAssessmentProbability = new A(4236, 0x4010, 0x1016, V.FL);
        public static readonly A Mass = new A(4237, 0x4010, 0x1017, V.FL);
        public static readonly A Density = new A(4238, 0x4010, 0x1018, V.FL);
        public static readonly A ZEffective = new A(4239, 0x4010, 0x1019, V.FL);
        public static readonly A BoardingPassID = new A(4240, 0x4010, 0x101A, V.SH);
        public static readonly A CenterOfMass = new A(4241, 0x4010, 0x101B, V.FL);
        public static readonly A CenterOfPTO = new A(4242, 0x4010, 0x101C, V.FL);
        public static readonly A BoundingPolygon = new A(4243, 0x4010, 0x101D, V.FL);
        public static readonly A RouteSegmentStartLocationID = new A(4244, 0x4010, 0x101E, V.SH);
        public static readonly A RouteSegmentEndLocationID = new A(4245, 0x4010, 0x101F, V.SH);
        public static readonly A RouteSegmentLocationIDType = new A(4246, 0x4010, 0x1020, V.CS);
        public static readonly A AbortReason = new A(4247, 0x4010, 0x1021, V.CS);
        public static readonly A VolumeOfPTO = new A(4248, 0x4010, 0x1023, V.FL);
        public static readonly A AbortFlag = new A(4249, 0x4010, 0x1024, V.CS);
        public static readonly A RouteSegmentStartTime = new A(4250, 0x4010, 0x1025, V.DT);
        public static readonly A RouteSegmentEndTime = new A(4251, 0x4010, 0x1026, V.DT);
        public static readonly A TDRType = new A(4252, 0x4010, 0x1027, V.CS);
        public static readonly A InternationalRouteSegment = new A(4253, 0x4010, 0x1028, V.CS);
        public static readonly A ThreatDetectionAlgorithmandVersion = new A(4254, 0x4010, 0x1029, V.LO);
        public static readonly A AssignedLocation = new A(4255, 0x4010, 0x102A, V.SH);
        public static readonly A AlarmDecisionTime = new A(4256, 0x4010, 0x102B, V.DT);
        public static readonly A AlarmDecision = new A(4257, 0x4010, 0x1031, V.CS);
        public static readonly A NumberOfTotalObjects = new A(4258, 0x4010, 0x1033, V.US);
        public static readonly A NumberOfAlarmObjects = new A(4259, 0x4010, 0x1034, V.US);
        public static readonly A PTORepresentationSequence = new A(4260, 0x4010, 0x1037, V.SQ);
        public static readonly A ATDAssessmentSequence = new A(4261, 0x4010, 0x1038, V.SQ);
        public static readonly A TIPType = new A(4262, 0x4010, 0x1039, V.CS);
        public static readonly A DICOSVersion = new A(4263, 0x4010, 0x103A, V.CS);
        public static readonly A OOIOwnerCreationTime = new A(4264, 0x4010, 0x1041, V.DT);
        public static readonly A OOIType = new A(4265, 0x4010, 0x1042, V.CS);
        public static readonly A OOISize = new A(4266, 0x4010, 0x1043, V.FL);
        public static readonly A AcquisitionStatus = new A(4267, 0x4010, 0x1044, V.CS);
        public static readonly A BasisMaterialsCodeSequence = new A(4268, 0x4010, 0x1045, V.SQ);
        public static readonly A PhantomType = new A(4269, 0x4010, 0x1046, V.CS);
        public static readonly A OOIOwnerSequence = new A(4270, 0x4010, 0x1047, V.SQ);
        public static readonly A ScanType = new A(4271, 0x4010, 0x1048, V.CS);
        public static readonly A ItineraryID = new A(4272, 0x4010, 0x1051, V.LO);
        public static readonly A ItineraryIDType = new A(4273, 0x4010, 0x1052, V.SH);
        public static readonly A ItineraryIDAssigningAuthority = new A(4274, 0x4010, 0x1053, V.LO);
        public static readonly A RouteID = new A(4275, 0x4010, 0x1054, V.SH);
        public static readonly A RouteIDAssigningAuthority = new A(4276, 0x4010, 0x1055, V.SH);
        public static readonly A InboundArrivalType = new A(4277, 0x4010, 0x1056, V.CS);
        public static readonly A CarrierID = new A(4278, 0x4010, 0x1058, V.SH);
        public static readonly A CarrierIDAssigningAuthority = new A(4279, 0x4010, 0x1059, V.CS);
        public static readonly A SourceOrientation = new A(4280, 0x4010, 0x1060, V.FL);
        public static readonly A SourcePosition = new A(4281, 0x4010, 0x1061, V.FL);
        public static readonly A BeltHeight = new A(4282, 0x4010, 0x1062, V.FL);
        public static readonly A AlgorithmRoutingCodeSequence = new A(4283, 0x4010, 0x1064, V.SQ);
        public static readonly A TransportClassification = new A(4284, 0x4010, 0x1067, V.CS);
        public static readonly A OOITypeDescriptor = new A(4285, 0x4010, 0x1068, V.LT);
        public static readonly A TotalProcessingTime = new A(4286, 0x4010, 0x1069, V.FL);
        public static readonly A DetectorCalibrationData = new A(4287, 0x4010, 0x106C, V.OB);
        public static readonly A AdditionalScreeningPerformed = new A(4288, 0x4010, 0x106D, V.CS);
        public static readonly A AdditionalInspectionSelectionCriteria = new A(4289, 0x4010, 0x106E, V.CS);
        public static readonly A AdditionalInspectionMethodSequence = new A(4290, 0x4010, 0x106F, V.SQ);
        public static readonly A AITDeviceType = new A(4291, 0x4010, 0x1070, V.CS);
        public static readonly A QRMeasurementsSequence = new A(4292, 0x4010, 0x1071, V.SQ);
        public static readonly A TargetMaterialSequence = new A(4293, 0x4010, 0x1072, V.SQ);
        public static readonly A SNRThreshold = new A(4294, 0x4010, 0x1073, V.FD);
        public static readonly A ImageScaleRepresentation = new A(4295, 0x4010, 0x1075, V.DS);
        public static readonly A ReferencedPTOSequence = new A(4296, 0x4010, 0x1076, V.SQ);
        public static readonly A ReferencedTDRInstanceSequence = new A(4297, 0x4010, 0x1077, V.SQ);
        public static readonly A PTOLocationDescription = new A(4298, 0x4010, 0x1078, V.ST);
        public static readonly A AnomalyLocatorIndicatorSequence = new A(4299, 0x4010, 0x1079, V.SQ);
        public static readonly A AnomalyLocatorIndicator = new A(4300, 0x4010, 0x107A, V.FL);
        public static readonly A PTORegionSequence = new A(4301, 0x4010, 0x107B, V.SQ);
        public static readonly A InspectionSelectionCriteria = new A(4302, 0x4010, 0x107C, V.CS);
        public static readonly A SecondaryInspectionMethodSequence = new A(4303, 0x4010, 0x107D, V.SQ);
        public static readonly A PRCSToRCSOrientation = new A(4304, 0x4010, 0x107E, V.DS);
        public static readonly A MACParametersSequence = new A(4305, 0x4FFE, 0x0001, V.SQ);
        public static readonly A SharedFunctionalGroupsSequence = new A(4306, 0x5200, 0x9229, V.SQ);
        public static readonly A PerFrameFunctionalGroupsSequence = new A(4307, 0x5200, 0x9230, V.SQ);
        public static readonly A WaveformSequence = new A(4308, 0x5400, 0x0100, V.SQ);
        public static readonly A ChannelMinimumValue = new A(4309, 0x5400, 0x0110, V.OB, V.OW);
        public static readonly A ChannelMaximumValue = new A(4310, 0x5400, 0x0112, V.OB, V.OW);
        public static readonly A WaveformBitsAllocated = new A(4311, 0x5400, 0x1004, V.US);
        public static readonly A WaveformSampleInterpretation = new A(4312, 0x5400, 0x1006, V.CS);
        public static readonly A WaveformPaddingValue = new A(4313, 0x5400, 0x100A, V.OB, V.OW);
        public static readonly A WaveformData = new A(4314, 0x5400, 0x1010, V.OB, V.OW);
        public static readonly A FirstOrderPhaseCorrectionAngle = new A(4315, 0x5600, 0x0010, V.OF);
        public static readonly A SpectroscopyData = new A(4316, 0x5600, 0x0020, V.OF);
        public static readonly A OverlayRows = new A(4317, 0x6000, 0x0010, V.US);
        public static readonly A OverlayColumns = new A(4318, 0x6000, 0x0011, V.US);
        public static readonly A NumberOfFramesInOverlay = new A(4319, 0x6000, 0x0015, V.IS);
        public static readonly A OverlayDescription = new A(4320, 0x6000, 0x0022, V.LO);
        public static readonly A OverlayType = new A(4321, 0x6000, 0x0040, V.CS);
        public static readonly A OverlaySubtype = new A(4322, 0x6000, 0x0045, V.LO);
        public static readonly A OverlayOrigin = new A(4323, 0x6000, 0x0050, V.SS);
        public static readonly A ImageFrameOrigin = new A(4324, 0x6000, 0x0051, V.US);
        public static readonly A OverlayBitsAllocated = new A(4325, 0x6000, 0x0100, V.US);
        public static readonly A OverlayBitPosition = new A(4326, 0x6000, 0x0102, V.US);
        public static readonly A OverlayActivationLayer = new A(4327, 0x6000, 0x1001, V.CS);
        public static readonly A ROIArea = new A(4328, 0x6000, 0x1301, V.IS);
        public static readonly A ROIMean = new A(4329, 0x6000, 0x1302, V.DS);
        public static readonly A ROIStandardDeviation = new A(4330, 0x6000, 0x1303, V.DS);
        public static readonly A OverlayLabel = new A(4331, 0x6000, 0x1500, V.LO);
        public static readonly A OverlayData = new A(4332, 0x6000, 0x3000, V.OB, V.OW);
        public static readonly A ExtendedOffsetTable = new A(4333, 0x7FE0, 0x0001, V.OV);
        public static readonly A ExtendedOffsetTableLengths = new A(4334, 0x7FE0, 0x0002, V.OV);
        public static readonly A FloatPixelData = new A(4335, 0x7FE0, 0x0008, V.OF);
        public static readonly A DoubleFloatPixelData = new A(4336, 0x7FE0, 0x0009, V.OD);
        public static readonly A PixelData = new A(4337, 0x7FE0, 0x0010, V.OB, V.OW);
        public static readonly A DigitalSignaturesSequence = new A(4338, 0xFFFA, 0xFFFA, V.SQ);
        public static readonly A DataSetTrailingPadding = new A(4339, 0xFFFC, 0xFFFC, V.OB);
        public static readonly A Item = new A(4340, 0xFFFE, 0xE000);
        public static readonly A ItemDelimitationItem = new A(4341, 0xFFFE, 0xE00D);
        public static readonly A SequenceDelimitationItem = new A(4342, 0xFFFE, 0xE0DD);

        #endregion

#pragma warning restore    
    }
}
